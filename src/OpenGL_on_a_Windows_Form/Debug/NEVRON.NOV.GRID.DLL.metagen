ImageRuntimeVersion: v4.0.30319
Assembly Nevron.Nov.Grid, Version=18.1.18.12, Culture=neutral, PublicKeyToken=b33b1a04bb5ca8ad: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, Retargetable=Yes: 
	hash=None, flags=Retargetable
Assembly Nevron.Nov.Presentation, Version=18.1.18.12, Culture=neutral, PublicKeyToken=b33b1a04bb5ca8ad: 
	hash=None, flags=None
Assembly System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, Retargetable=Yes: 
	hash=None, flags=Retargetable
Class Nevron.Nov.Grid.NSliderDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NSlider]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSliderDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDataCellEditor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataCellEditorSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
    Nevron.Nov.Grid.NDataRow OwnerRow 'get ' : 
    Nevron.Nov.Grid.NDataCell OwnerDataCell 'get ' : 
  Methods:
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerRow(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerDataCell(): PrivateScope, Public, HideBySig, SpecialName
    SetValue(NDataCell, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnEndEdit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCancelEdit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanCut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanCopy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanPaste(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Paste(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Grid.NShadowSplitButtonDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NShadowSplitButton]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NShadowSplitButtonDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFillSplitButtonDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NFillSplitButton]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFillSplitButtonDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColorBoxDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NColorBox]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColorBoxDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NComboBoxDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NComboBox]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NComboBoxDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NStrokeSplitButtonDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NStrokeSplitButton]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStrokeSplitButtonDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NNullButton: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NToggleButton
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNullButtonSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NGenericDataCellEditor`1[TValueEditor]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TValueEditor, Nevron.Nov.UI.NWidget,  DefaultConstructor
  :Nevron.Nov.Grid.NDataCellEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGenericDataCellEditorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ValueEditorChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild NullLabelChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ButtonsStackChild : Public, Static, InitOnly
  Properties:
    TValueEditor ValueEditor 'get set' : 
    Nevron.Nov.Grid.NNullLabel NullLabel 'get set' : 
    Nevron.Nov.UI.NStackPanel ButtonsStack 'get set' : 
  Methods:
    get_ValueEditor(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueEditor(TValueEditor): PrivateScope, Public, HideBySig, SpecialName
    get_NullLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_NullLabel(NNullLabel): PrivateScope, Public, HideBySig, SpecialName
    get_ButtonsStack(): PrivateScope, Public, HideBySig, SpecialName
    set_ButtonsStack(NStackPanel): PrivateScope, Public, HideBySig, SpecialName
    SetValue(NDataCell, Object): PrivateScope, Public, Virtual, HideBySig
    GetValue(): PrivateScope, Public, Virtual, HideBySig
    CanCut(): PrivateScope, Public, Virtual, HideBySig
    CanCopy(): PrivateScope, Public, Virtual, HideBySig
    CanPaste(): PrivateScope, Public, Virtual, HideBySig
    Cut(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    Paste(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NNullLabel: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NLabel
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNullLabelSchema : Public, Static, InitOnly
    System.String NullText : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDetailsCellCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCellCollection`1[Nevron.Nov.Grid.NDetailsCell]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NDetailsCell[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDetailsCellCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NGroupRowCellCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCellCollection`1[Nevron.Nov.Grid.NGroupRowCell]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NGroupRowCell[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupRowCellCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSummaryCell: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCell
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSummaryCellSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSummaryCellCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCellCollection`1[Nevron.Nov.Grid.NSummaryCell]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NSummaryCell[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSummaryCellCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSpanCellBeginXPosition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCellXPosition`1[Nevron.Nov.Grid.ENSpanCellBeginXPositionMode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSpanCellBeginXPositionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSpanCellCollection`1[TCell]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TCell, Nevron.Nov.Grid.NSpanCell
  :Nevron.Nov.Grid.NCellCollection`1[TCell]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TCell[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSpanCellCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDetailsCell: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCell
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDetailsCellSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDataCell: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NCell
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataCellSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild EditorChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsEditingProperty : Public, Static, InitOnly
  Properties:
    Boolean IsEditing 'get set' : 
    Nevron.Nov.Grid.NDataCellEditor Editor 'get set' : 
    Int32 RowIndex 'get ' : 
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
  Methods:
    get_IsEditing(): PrivateScope, Public, HideBySig, SpecialName
    get_Editor(): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
    BeginEdit(): PrivateScope, Public, HideBySig
    CancelEdit(): PrivateScope, Public, HideBySig
    CommitEdit(): PrivateScope, Public, HideBySig
    GetValue(): PrivateScope, Public, HideBySig
    SetValue(Object): PrivateScope, Public, HideBySig
    CanCut(): PrivateScope, Public, Virtual, HideBySig
    CanCopy(): PrivateScope, Public, Virtual, HideBySig
    CanPaste(): PrivateScope, Public, Virtual, HideBySig
    Cut(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    Paste(): PrivateScope, Public, Virtual, HideBySig
    GetColumnFormat(): PrivateScope, Public, HideBySig
Class Nevron.Nov.Grid.NGroupRowCell: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCell
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupRowCellSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSpanCell: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NCell
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSpanCellSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild BeginXPositionChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild EndXPositionChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NSpanCellBeginXPosition BeginXPosition 'get set' : 
    Nevron.Nov.Grid.NSpanCellEndXPosition EndXPosition 'get set' : 
  Methods:
    get_BeginXPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginXPosition(NSpanCellBeginXPosition): PrivateScope, Public, HideBySig, SpecialName
    get_EndXPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_EndXPosition(NSpanCellEndXPosition): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCellCollection`1[TCell]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TCell, Nevron.Nov.Grid.NCell
  :Nevron.Nov.Dom.NElementCollection`1[TCell]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TCell[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCellCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSpanCellEndXPosition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NSpanCellXPosition`1[Nevron.Nov.Grid.ENSpanCellEndXPositionMode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSpanCellEndXPositionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSpanCellXPosition`1[TPositionMode]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TPositionMode
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSpanCellXPositionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ColumnRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
  Properties:
    TPositionMode Mode 'get set' : 
    Double Percent 'get set' : 
    Nevron.Nov.Dom.NNodeRef ColumnRef 'get set' : 
    Double Offset 'get set' : 
    Nevron.Nov.Grid.NSpanCell OwnerSpanCell 'get ' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(TPositionMode): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    set_Percent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnRef(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerSpanCell(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCalculatedColumn: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NColumn
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCalculatedColumnSchema : Public, Static, InitOnly
  Methods:
    CanEdit(): PrivateScope, Public, Virtual, HideBySig
    SetRowValue(Int32, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFormulaCalculatedColumn: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NCalculatedColumn
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormulaCalculatedColumnSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FormulaProperty : Public, Static, InitOnly
  Properties:
    System.String Formula 'get set' : 
  Methods:
    get_Formula(): PrivateScope, Public, HideBySig, SpecialName
    set_Formula(String): PrivateScope, Public, HideBySig, SpecialName
    GetRowValue(Int32): PrivateScope, Public, Virtual, HideBySig
    GetRowValuesType(): PrivateScope, Public, Virtual, HideBySig
    GetRowValuesNullable(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCustomCalculatedColumn`1[TRowValue]: AutoLayout, AnsiClass, Class, Public
  Type parameter: TRowValue
  :Nevron.Nov.Grid.NCalculatedColumn
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.FunctionResult`2[Nevron.Nov.NNullable`1[TRowValue],Nevron.Nov.Grid.NCustomCalculatedColumnGetRowValueArgs`1[TRowValue]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.FunctionResult`2[Nevron.Nov.NNullable`1[TRowValue],Nevron.Nov.Grid.NCustomCalculatedColumnGetRowValueArgs`1[TRowValue]] GetRowValueDelegate : Public
    Nevron.Nov.Dom.NSchema NCustomCalculatedColumnSchema : Public, Static, InitOnly
  Methods:
    GetRowValue(Int32): PrivateScope, Public, Virtual, HideBySig
    GetRowValuesType(): PrivateScope, Public, Virtual, HideBySig
    GetRowValuesNullable(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NShadowSplitButtonColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NShadowSplitButtonColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NStrokeSplitButtonColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStrokeSplitButtonColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFillSplitButtonColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFillSplitButtonColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColorBoxColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColorBoxColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NSliderColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSliderColumnEditorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinimumProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaximumProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TicksPlacementProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TicksIntervalProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TicksLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TicksStrokeProperty : Public, Static, InitOnly
  Properties:
    Double Minimum 'get set' : 
    Double Maximum 'get set' : 
    Nevron.Nov.UI.ENTicksPlacement TicksPlacement 'get set' : 
    Double TicksLength 'get set' : 
    Double TicksInterval 'get set' : 
  Methods:
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TicksPlacement(): PrivateScope, Public, HideBySig, SpecialName
    set_TicksPlacement(ENTicksPlacement): PrivateScope, Public, HideBySig, SpecialName
    get_TicksLength(): PrivateScope, Public, HideBySig, SpecialName
    set_TicksLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TicksInterval(): PrivateScope, Public, HideBySig, SpecialName
    set_TicksInterval(Double): PrivateScope, Public, HideBySig, SpecialName
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColumnEditor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnEditorSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
  Methods:
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDefaultForDataType(Type): PrivateScope, Public, Static, HideBySig
Class Nevron.Nov.Grid.NCheckBoxColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCheckBoxColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NEnumComboBoxColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NEnumComboBoxColumnEditorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InsertSpacesBeforeUppersAndDigitsProperty : Public, Static, InitOnly
  Properties:
    Boolean InsertSpacesBeforeUppersAndDigits 'get set' : 
  Methods:
    get_InsertSpacesBeforeUppersAndDigits(): PrivateScope, Public, HideBySig, SpecialName
    set_InsertSpacesBeforeUppersAndDigits(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NNumericUpDownColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericUpDownColumnEditorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecimalPlacesProperty : Public, Static, InitOnly
  Properties:
    Int32 DecimalPlaces 'get set' : 
  Methods:
    get_DecimalPlaces(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalPlaces(Int32): PrivateScope, Public, HideBySig, SpecialName
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NTextBoxColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTextBoxColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFiltersEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NTopLevelWindow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFiltersEditorSchema : Public, Static, InitOnly
  Methods:
    Initialize(NGrid, NColumn): PrivateScope, Public, HideBySig
Class Nevron.Nov.Grid.NShadowColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NShadowColumnFormatSchema : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NStrokeColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStrokeColumnFormatSchema : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFillColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFillColumnFormatSchema : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColorColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColorColumnFormatSchema : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NProgressBarColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NProgressBarColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinimumProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaximumProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Properties:
    Double Minimum 'get set' : 
    Double Maximum 'get set' : 
    Nevron.Nov.UI.ENProgressBarLabelStyle LabelStyle 'get set' : 
    Nevron.Nov.Dom.NNumericValueFormatter ValueFormatter 'get set' : 
  Methods:
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LabelStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelStyle(ENProgressBarLabelStyle): PrivateScope, Public, HideBySig, SpecialName
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(NNumericValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
    CanCopy(NDataCell): PrivateScope, Public, Virtual, HideBySig
    Copy(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NTextFillDeclaration: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFillDeclaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTextFillDeclarationSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NBackgroundFillDeclaration: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFillDeclaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBackgroundFillDeclarationSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NFontStyleDeclaration: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFormattingDeclaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFontStyleDeclarationSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.ENFontStyle FontStyle 'get set' : 
  Methods:
    get_FontStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_FontStyle(ENFontStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFontSizeDeclaration: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFormattingDeclaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFontSizeDeclarationSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontSizeProperty : Public, Static, InitOnly
  Properties:
    Double FontSize 'get set' : 
  Methods:
    get_FontSize(): PrivateScope, Public, HideBySig, SpecialName
    set_FontSize(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFontNameDeclaration: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFormattingDeclaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFontNameDeclarationSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontNameProperty : Public, Static, InitOnly
  Properties:
    System.String FontName 'get set' : 
  Methods:
    get_FontName(): PrivateScope, Public, HideBySig, SpecialName
    set_FontName(String): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFormattingDeclaration: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormattingDeclarationSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NFormattingRule OwnerFormattingRule 'get ' : 
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
  Methods:
    get_OwnerFormattingRule(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFormattingDeclarationCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Grid.NFormattingDeclaration]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormattingDeclarationCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NFillDeclaration: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NFormattingDeclaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFillDeclarationSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UniformFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MiddleColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinimumValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaximumValueProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.ENFillDeclarationMode Mode 'get set' : 
    Nevron.Nov.Graphics.NFill UniformFill 'get set' : 
    Nevron.Nov.Graphics.NColor BeginColor 'get set' : 
    Nevron.Nov.Graphics.NColor MiddleColor 'get set' : 
    Nevron.Nov.Graphics.NColor EndColor 'get set' : 
    Double MinimumValue 'get set' : 
    Double MaximumValue 'get set' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(ENFillDeclarationMode): PrivateScope, Public, HideBySig, SpecialName
    get_UniformFill(): PrivateScope, Public, HideBySig, SpecialName
    set_UniformFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_BeginColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleColor(): PrivateScope, Public, HideBySig, SpecialName
    set_MiddleColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_EndColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EndColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumValue(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFormattingRuleCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Grid.NFormattingRule]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormattingRuleCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NFormattingRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowCondition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.иУр
  Fields:
    Nevron.Nov.Dom.NSchema NFormattingRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DeclarationsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowConditionProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NColumnFormat OwnerColumnFormat 'get ' : 
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
    Nevron.Nov.Grid.NRowCondition RowCondition 'get set' : 
    Nevron.Nov.Grid.NFormattingDeclarationCollection Declarations 'get set' : 
  Methods:
    get_OwnerColumnFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_RowCondition(): PrivateScope, Public, HideBySig, SpecialName
    set_RowCondition(NRowCondition): PrivateScope, Public, HideBySig, SpecialName
    get_Declarations(): PrivateScope, Public, HideBySig, SpecialName
    set_Declarations(NFormattingDeclarationCollection): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NObjectColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NObjectColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NImageColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NImageColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseFixedImageWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FixedImageWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseFixedImageHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FixedImageHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ImageMappingProperty : Public, Static, InitOnly
  Properties:
    Boolean UseFixedImageWidth 'get set' : 
    Double FixedImageWidth 'get set' : 
    Boolean UseFixedImageHeight 'get set' : 
    Double FixedImageHeight 'get set' : 
    Nevron.Nov.Graphics.NTextureMapping ImageMapping 'get set' : 
  Methods:
    get_UseFixedImageWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_UseFixedImageWidth(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FixedImageWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_FixedImageWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UseFixedImageHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_UseFixedImageHeight(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FixedImageHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_FixedImageHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ImageMapping(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageMapping(NTextureMapping): PrivateScope, Public, HideBySig, SpecialName
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
    CanCopy(NDataCell): PrivateScope, Public, Virtual, HideBySig
    Copy(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCustomColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Function`1[Nevron.Nov.Grid.NDataCell] FormatDefaultDataCellDelegate : Public
    Nevron.Nov.FunctionResult`3[Nevron.Nov.UI.NWidget,Nevron.Nov.Grid.NDataCell,System.Object] CreateValueDataCellViewDelegate : Public
    Nevron.Nov.Dom.NSchema NCustomColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NVariantColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NTextValueColumnFormat`1[Nevron.Nov.Dom.NVariantValueFormatter]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NVariantColumnFormatSchema : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDateTimeColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NTextValueColumnFormat`1[Nevron.Nov.Dom.NDateTimeValueFormatter]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeColumnFormatSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NColumnFormat: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent CreateDataCellViewEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BackgroundFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontProperty : Public, Static, InitOnly
    System.String Format_Category : Public, Static, InitOnly
    System.String Alignment_Category : Public, Static, InitOnly
    System.String BackgroundFill_Category : Public, Static, InitOnly
    System.String TextFill_Category : Public, Static, InitOnly
    System.String Font_Category : Public, Static, InitOnly
    System.String Block_Category : Public, Static, InitOnly
    System.String ConditionalFormatting_Category : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment HorizontalAlignment 'get set' : 
    Nevron.Nov.Grid.ENDataCellViewVerticalAlignment VerticalAlignment 'get set' : 
    Nevron.Nov.Graphics.NFill BackgroundFill 'get set' : 
    Nevron.Nov.Graphics.NFill TextFill 'get set' : 
    Nevron.Nov.Graphics.NFont Font 'get set' : 
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Grid.NCreateDataCellViewEventArgs] CreateDataCellView: 
  Methods:
    add_CreateDataCellView(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CreateDataCellView(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAlignment(ENDataCellViewHorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAlignment(ENDataCellViewVerticalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_TextFill(): PrivateScope, Public, HideBySig, SpecialName
    set_TextFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(NFont): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
    FormatDataCell(NDataCell, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanCopy(NDataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Copy(NDataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDefaultForDataType(Type): PrivateScope, Public, Static, HideBySig
Class Nevron.Nov.Grid.NTextValueColumnFormat`1[TValueFormatter]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TValueFormatter, Nevron.Nov.Dom.NValueFormatter
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTextValueColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Properties:
    TValueFormatter ValueFormatter 'get set' : 
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
    CanCopy(NDataCell): PrivateScope, Public, Virtual, HideBySig
    Copy(NDataCell): PrivateScope, Public, Virtual, HideBySig
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(TValueFormatter): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NNumericColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NTextValueColumnFormat`1[Nevron.Nov.Dom.NNumericValueFormatter]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericColumnFormatSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NStringColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStringColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
    CanCopy(NDataCell): PrivateScope, Public, Virtual, HideBySig
    Copy(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NBooleanColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBooleanColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Methods:
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NEnumColumnFormat: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NEnumColumnFormatSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InsertSpacesBeforeUppersAndDigitsProperty : Public, Static, InitOnly
  Properties:
    Boolean InsertSpacesBeforeUppersAndDigits 'get set' : 
  Methods:
    get_InsertSpacesBeforeUppersAndDigits(): PrivateScope, Public, HideBySig, SpecialName
    set_InsertSpacesBeforeUppersAndDigits(Boolean): PrivateScope, Public, HideBySig, SpecialName
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig
    CanCopy(NDataCell): PrivateScope, Public, Virtual, HideBySig
    Copy(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColumnDraggingHeader: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NContentHolder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnDraggingHeaderSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NRowValueGridRule`1[TGrid]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Grid.NGridRule`1[TGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.NRowValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowValueGridRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowValueProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NRowValue RowValue 'get set' : 
  Methods:
    get_RowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_RowValue(NRowValue): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomDetailsPresenterCreateDetailRowCellsArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Nevron.Nov.Grid.NCustomDetailsPresenter, Nevron.Nov.Grid.NDetailCollection, Nevron.Nov.Data.NDataSource, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NCustomDetailsPresenter CustomDetailPresenter 'get ' : 
    Nevron.Nov.Grid.NDetailCollection DetailCollection 'get ' : 
    Nevron.Nov.Data.NDataSource MasterDataSource 'get ' : 
    Int32 MasterRowIndex 'get ' : 
    Int32 DetailRowIndex 'get ' : 
  Methods:
    get_CustomDetailPresenter(): PrivateScope, Public, HideBySig, SpecialName
    get_DetailCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterDataSource(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterRowIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_DetailRowIndex(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomDetailsPresenterGetDetailsRowCountArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Nevron.Nov.Grid.NCustomDetailsPresenter, Nevron.Nov.Grid.NDetailCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NCustomDetailsPresenter CustomDetailPresenter 'get ' : 
    Nevron.Nov.Grid.NDetailCollection DetailCollection 'get ' : 
  Methods:
    get_CustomDetailPresenter(): PrivateScope, Public, HideBySig, SpecialName
    get_DetailCollection(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomRowValueGetRowValueArgs`1[TRowValueType]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TRowValueType
  Properties:
    Nevron.Nov.Grid.NCustomRowValue`1[TRowValueType] RowValue 'get ' : 
    Nevron.Nov.Grid.NGrid Grid 'get ' : 
    Nevron.Nov.Data.NDataSource DataSource 'get ' : 
    Int32 Row  'get ' : 
  Methods:
    get_RowValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomRowConditionRowPredicateArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Nevron.Nov.Grid.NGrid Grid 'get ' : 
    Nevron.Nov.Data.NDataSource DataSource 'get ' : 
    Int32 Row  'get ' : 
  Methods:
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomDetailCreateWidgetArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Nevron.Nov.Grid.NCustomDetail, Nevron.Nov.Data.NDataSource, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NCustomDetail CustomDetail 'get ' : 
    Nevron.Nov.Data.NDataSource DataSource 'get ' : 
    Int32 RowIndex 'get ' : 
  Methods:
    get_CustomDetail(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomCalculatedColumnGetRowValueArgs`1[TRowValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TRowValue
  Properties:
    Nevron.Nov.Grid.NCustomCalculatedColumn`1[TRowValue] Column 'get ' : 
    Int32 RowIndex 'get ' : 
    Nevron.Nov.Grid.NGrid Grid 'get ' : 
    Nevron.Nov.Data.NDataSource DataSource 'get ' : 
  Methods:
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NGroupingRuleCreateSummaryRowsArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Nevron.Nov.Grid.NTableGrid, Nevron.Nov.Grid.NGroupingRule, Nevron.Nov.Grid.NGroupRow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NGroupingRule GroupingRule 'get ' : 
    Nevron.Nov.Grid.NGroupRow GroupRow 'get ' : 
    Nevron.Nov.Grid.NTableGrid Grid 'get ' : 
    Nevron.Nov.Data.NDataSource DataSource 'get ' : 
  Methods:
    get_GroupingRule(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRow(): PrivateScope, Public, HideBySig, SpecialName
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NAutoCreateColumnEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NEventArgs
    Void .ctor(Nevron.Nov.Grid.NGrid, Int32, Nevron.Nov.Grid.NDataColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NGrid Grid 'get ' : 
    Int32 FieldIndex 'get ' : 
    Nevron.Nov.Data.NFieldInfo FieldInfo 'get ' : 
    Nevron.Nov.Grid.NDataColumn DataColumn 'get set' : 
  Methods:
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_DataColumn(): PrivateScope, Public, HideBySig, SpecialName
    set_DataColumn(NDataColumn): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCreateDataCellViewEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NEventArgs
    Void .ctor(Nevron.Nov.Grid.NColumnFormat, Nevron.Nov.Grid.NDataCell, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NColumnFormat ColumnFormat 'get ' : 
    Nevron.Nov.Grid.NColumn Column 'get ' : 
    Nevron.Nov.Grid.NDataCell DataCell 'get ' : 
    Int32 RowIndex 'get ' : 
    System.Object RowValue 'get ' : 
    Nevron.Nov.UI.NWidget DataCellView 'get set' : 
  Methods:
    get_ColumnFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_DataCell(): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_RowValue(): PrivateScope, Public, HideBySig, SpecialName
    get_DataCellView(): PrivateScope, Public, HideBySig, SpecialName
    set_DataCellView(NWidget): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCustomDetailsPresenter: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDetailsPresenter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.FunctionResult`2[System.Int32,Nevron.Nov.Grid.NCustomDetailsPresenterGetDetailsRowCountArgs] GetDetailsRowCountDelegate : Public
    Nevron.Nov.FunctionResult`2[Nevron.Nov.Grid.NDetailsCell[],Nevron.Nov.Grid.NCustomDetailsPresenterCreateDetailRowCellsArgs] CreateDetailRowCellsDelegate : Public
    Nevron.Nov.Dom.NSchema NCustomDetailsPresenterSchema : Public, Static, InitOnly
  Methods:
    GetDetailsRowCount(NDetailCollection): PrivateScope, Public, Virtual, HideBySig
    CreateDetailsRowCells(NDataSource, Int32, NDetailCollection, Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCustomDetail: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDetail
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.FunctionResult`2[Nevron.Nov.UI.NWidget,Nevron.Nov.Grid.NCustomDetailCreateWidgetArgs] CreateWidgetDelegate : Public
    Nevron.Nov.Dom.NSchema NCustomDetailSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent CreateDetailWidgetEvent : Public, Static, InitOnly
  Methods:
    CreateWidget(NDataSource, Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NGridDocument`1[TGrid]: AutoLayout, AnsiClass, Class, Public
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid,  DefaultConstructor
  :Nevron.Nov.Dom.NGenericDocument`1[TGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TGrid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridDocumentSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NOrGroupRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGroupRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowCondition[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NOrGroupRowConditionSchema : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NAndGroupRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGroupRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowCondition[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAndGroupRowConditionSchema : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NGroupRowCondition: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowCondition[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.DataStructures.INCollection`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INDynamicSet`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INSet`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INCountable`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INContains`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INIterable`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INAddable`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INRemovable`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INClearable
    Nevron.Nov.DataStructures.INWritableIndexedSet`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INIndexedSet`1[Nevron.Nov.Grid.NRowCondition]
    Nevron.Nov.DataStructures.INReverseIterable`1[Nevron.Nov.Grid.NRowCondition]
  Fields:
    Nevron.Nov.Dom.NSchema NCompositeRowConditionSchema : Public, Static, InitOnly
  Properties:
    Int32 Count 'get ' : 
    Nevron.Nov.Grid.NRowCondition Item [Int32] 'get set' : 
  Methods:
    GetIterator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReverseIterator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, NRowCondition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(NRowCondition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(NRowCondition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, NRowCondition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(NRowCondition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(NRowCondition): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(NRowCondition[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Grid.NFalseRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFalseRowConditionSchema : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NTrueRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTrueRowConditionSchema : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCustomRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.FunctionResult`2[System.Boolean,Nevron.Nov.Grid.NCustomRowConditionRowPredicateArgs], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.FunctionResult`2[System.Boolean,Nevron.Nov.Grid.NCustomRowConditionRowPredicateArgs] RowPredicateDelegate : Public
    Nevron.Nov.Dom.NSchema NCustomRowConditionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DescriptionProperty : Public, Static, InitOnly
  Properties:
    System.String Description 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFormulaRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormulaRowConditionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FormulaProperty : Public, Static, InitOnly
  Properties:
    System.String Formula 'get set' : 
  Methods:
    get_Formula(): PrivateScope, Public, HideBySig, SpecialName
    set_Formula(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRowCondition: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowConditionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InvertedProperty : Public, Static, InitOnly
  Properties:
    Boolean Inverted 'get set' : 
  Methods:
    get_Inverted(): PrivateScope, Public, HideBySig, SpecialName
    set_Inverted(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NRowValueCondition: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NRowCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.иУр
  Fields:
    Nevron.Nov.Dom.NSchema NRowValueConditionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowValueProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NRowValue RowValue 'get set' : 
  Methods:
    get_RowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_RowValue(NRowValue): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NSummaryRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSummaryRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild CellsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NSummaryCellCollection Cells 'get set' : 
  Methods:
    get_Cells(): PrivateScope, Public, HideBySig, SpecialName
    set_Cells(NSummaryCellCollection): PrivateScope, Public, HideBySig, SpecialName
    GetCellCount(): PrivateScope, Public, Virtual, HideBySig
    GetCellAt(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColumnRowValue: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnRowValueSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ColumnRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NColumn Column 'get set' : 
  Methods:
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCustomRowValue`1[TRowValue]: AutoLayout, AnsiClass, Class, Public
  Type parameter: TRowValue
  :Nevron.Nov.Grid.NRowValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.FunctionResult`2[Nevron.Nov.NNullable`1[TRowValue],Nevron.Nov.Grid.NCustomRowValueGetRowValueArgs`1[TRowValue]], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.FunctionResult`2[Nevron.Nov.NNullable`1[TRowValue],Nevron.Nov.Grid.NCustomRowValueGetRowValueArgs`1[TRowValue]] GetRowValueDelegate : Public
    Nevron.Nov.Dom.NSchema NCustomRowValueSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DescriptionProperty : Public, Static, InitOnly
  Properties:
    System.String Description 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFormulaRowValue: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormulaRowValueSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FormulaProperty : Public, Static, InitOnly
  Properties:
    System.String Formula 'get set' : 
  Methods:
    get_Formula(): PrivateScope, Public, HideBySig, SpecialName
    set_Formula(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFieldRowValue: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFieldRowValueSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FieldNameProperty : Public, Static, InitOnly
  Properties:
    System.String FieldName 'get set' : 
  Methods:
    get_FieldName(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldName(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRowValue: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowValueSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    FromFormula(String): PrivateScope, Public, Static, HideBySig
    FromFieldName(String): PrivateScope, Public, Static, HideBySig
    FromColumn(NColumn): PrivateScope, Public, Static, HideBySig
Class Nevron.Nov.Grid.NGroupingRuleCreateGroupRowCellsArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Nevron.Nov.Grid.NTableGrid, Nevron.Nov.Grid.NGroupingRule, Nevron.Nov.Grid.NGroupRow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NGroupingRule GroupingRule 'get ' : 
    Nevron.Nov.Grid.NGroupRow GroupRow 'get ' : 
    Nevron.Nov.Grid.NTableGrid Grid 'get ' : 
    Nevron.Nov.Data.NDataSource DataSource 'get ' : 
  Methods:
    get_GroupingRule(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRow(): PrivateScope, Public, HideBySig, SpecialName
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NDataSourceDetail: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NDetail
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataSourceDetailSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild MasterBindingChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DataSourceProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NMasterBinding MasterBinding 'get set' : 
    Nevron.Nov.Data.NDataSource DataSource 'get set' : 
  Methods:
    get_MasterBinding(): PrivateScope, Public, HideBySig, SpecialName
    set_MasterBinding(NMasterBinding): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSource(NDataSource): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NRelationCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Grid.NRelation]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRelationCollectionSchema : Public, Static, InitOnly
  Methods:
    GetFieldIndices(NDataSource, NDataSource, Int32[]&(Out), Int32[]&(Out)): PrivateScope, Public, HideBySig
Class Nevron.Nov.Grid.NRelationMasterBinding: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NMasterBinding
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRelationMasterBindingSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RelationsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NRelationCollection Relations 'get set' : 
  Methods:
    get_Relations(): PrivateScope, Public, HideBySig, SpecialName
    set_Relations(NRelationCollection): PrivateScope, Public, HideBySig, SpecialName
    GetDetailsRecordset(NDataSource, Int32, NDataSource): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRelation: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRelationSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SourceFieldNameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TargetFieldNameProperty : Public, Static, InitOnly
  Properties:
    System.String SourceFieldName 'get set' : 
    System.String TargetFieldName 'get set' : 
  Methods:
    get_SourceFieldName(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceFieldName(String): PrivateScope, Public, HideBySig, SpecialName
    get_TargetFieldName(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetFieldName(String): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NMasterBinding: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMasterBindingSchema : Public, Static, InitOnly
  Methods:
    GetDetailsRecordset(NDataSource, Int32, NDataSource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Grid.NTreeGridDetail: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridDetail`4[Nevron.Nov.Grid.NTreeGrid,Nevron.Nov.Grid.NTreeGridView,Nevron.Nov.Grid.NTreeGridDocument,Nevron.Nov.Grid.NTreeGridContextMenu]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTreeGridDetailSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NTableGridContextMenu: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridContextMenu
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTableGridContextMenuSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NTreeGridContextMenu: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridContextMenu
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTreeGridContextMenuSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NTabDetailsPresenter: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDetailsPresenter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTabDetailsPresenterSchema : Public, Static, InitOnly
  Methods:
    GetDetailsRowCount(NDetailCollection): PrivateScope, Public, Virtual, HideBySig
    CreateDetailsRowCells(NDataSource, Int32, NDetailCollection, Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDetail: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDetailSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleProperty : Public, Static, InitOnly
  Properties:
    System.String Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    CreateWidget(NDataSource, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Grid.NDetailCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Grid.NDetail]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDetailCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDetailsPresenter: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDetailsPresenterSchema : Public, Static, InitOnly
  Methods:
    GetDetailsRowCount(NDetailCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDetailsRowCells(NDataSource, Int32, NDetailCollection, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Grid.NTableGridDetail: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridDetail`4[Nevron.Nov.Grid.NTableGrid,Nevron.Nov.Grid.NTableGridView,Nevron.Nov.Grid.NTableGridDocument,Nevron.Nov.Grid.NTableGridContextMenu]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTableGridDetailSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NMasterDetails: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMasterDetailsSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DetailsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DetailsPresenterChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NDetailCollection Details 'get set' : 
    Nevron.Nov.Grid.NDetailsPresenter DetailsPresenter 'get set' : 
  Methods:
    get_Details(): PrivateScope, Public, HideBySig, SpecialName
    set_Details(NDetailCollection): PrivateScope, Public, HideBySig, SpecialName
    get_DetailsPresenter(): PrivateScope, Public, HideBySig, SpecialName
    set_DetailsPresenter(NDetailsPresenter): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NTreeGridDocument: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NGenericDocument`1[Nevron.Nov.Grid.NTreeGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NTreeGrid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTreeGridDocumentSchema : Public, Static, InitOnly
Interface Nevron.Nov.Grid.INGridView: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Nevron.Nov.Grid.NGrid Grid 'get ' : 
    Nevron.Nov.Grid.NGridContextMenu ContextMenu 'get ' : 
    Boolean ReadOnly 'get ' : 
    Boolean Enabled 'get ' : 
    Nevron.Nov.UI.NHScrollBar HScrollBar 'get set' : 
    Nevron.Nov.UI.NVScrollBar VScrollBar 'get set' : 
  Methods:
    get_Grid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ContextMenu(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HScrollBar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_HScrollBar(NHScrollBar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_VScrollBar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_VScrollBar(NVScrollBar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Nevron.Nov.Grid.NGroupingHeader: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NContentHolder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupingHeaderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SortingButtonChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RemoveButtonChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SpacingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsPressedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SortingDirectionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GroupingRuleRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NSymbolButton SortingButton 'get set' : 
    Nevron.Nov.UI.NSymbolButton RemoveButton 'get set' : 
    Double Spacing 'get set' : 
    Nevron.Nov.Grid.ENSortingDirection SortingDirection 'get set' : 
    Nevron.Nov.Grid.NGroupingRule GroupingRule 'get ' : 
  Methods:
    get_SortingButton(): PrivateScope, Public, HideBySig, SpecialName
    set_SortingButton(NSymbolButton): PrivateScope, Public, HideBySig, SpecialName
    get_RemoveButton(): PrivateScope, Public, HideBySig, SpecialName
    set_RemoveButton(NSymbolButton): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SortingDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupingRule(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NGroupingHeaderCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Grid.NGroupingHeader]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupingHeaderCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NOperatorRowCondition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowValueCondition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.ENRowConditionOperator, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue, Nevron.Nov.Grid.ENRowConditionOperator, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue, Nevron.Nov.Grid.ENRowConditionOperator, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NOperatorRowConditionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OperatorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MatchCaseProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.ENRowConditionOperator Operator 'get set' : 
    System.String Value 'get set' : 
    Boolean MatchCase 'get set' : 
  Methods:
    get_Operator(): PrivateScope, Public, HideBySig, SpecialName
    set_Operator(ENRowConditionOperator): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, HideBySig, SpecialName
    get_MatchCase(): PrivateScope, Public, HideBySig, SpecialName
    set_MatchCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NGridRule`1[TGrid]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.иУр
  Fields:
    Nevron.Nov.Dom.NSchema NGridRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ColumnRefProperty : Public, Static, InitOnly
  Properties:
    TGrid OwnerGrid 'get ' : 
    Nevron.Nov.Grid.NColumn Column 'get set' : 
    Nevron.Nov.Dom.NNodeRef ColumnRef 'get set' : 
  Methods:
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    set_Column(NColumn): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnRef(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NGridRuleCollection`2[TRule,TGrid]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TRule, Nevron.Nov.Grid.NGridRule`1[TGrid]
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Dom.NElementCollection`1[TRule]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridRuleCollectionSchema : Public, Static, InitOnly
  Properties:
    TGrid OwnerGrid 'get ' : 
  Methods:
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    GetRuleByColumn(NColumn): PrivateScope, Public, HideBySig
    GetAllRulesByColumn(NColumn): PrivateScope, Public, HideBySig
Class Nevron.Nov.Grid.NFilteringRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridRule`1[Nevron.Nov.Grid.NGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.ENRowConditionOperator, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowCondition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.NRowCondition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFilteringRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowConditionProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NRowCondition RowCondition 'get set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_RowCondition(): PrivateScope, Public, HideBySig, SpecialName
    set_RowCondition(NRowCondition): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFilteringRuleCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridRuleCollection`2[Nevron.Nov.Grid.NFilteringRule,Nevron.Nov.Grid.NGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFilteringRuleCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NGroupingRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowValueGridRule`1[Nevron.Nov.Grid.NTableGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue, Nevron.Nov.Grid.ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.NRowValue, Nevron.Nov.Grid.ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.FunctionResult`2[Nevron.Nov.UI.NWidget,Nevron.Nov.Grid.NGroupingRule] CreateGroupingHeaderContentDelegate : Public
    Nevron.Nov.FunctionResult`2[Nevron.Nov.Grid.NGroupRowCell[],Nevron.Nov.Grid.NGroupingRuleCreateGroupRowCellsArgs] CreateGroupRowCellsDelegate : Public
    Nevron.Nov.FunctionResult`2[Nevron.Nov.Grid.NSummaryRow[],Nevron.Nov.Grid.NGroupingRuleCreateSummaryRowsArgs] CreateHeaderSummaryRowsDelegate : Public
    Nevron.Nov.FunctionResult`2[Nevron.Nov.Grid.NSummaryRow[],Nevron.Nov.Grid.NGroupingRuleCreateSummaryRowsArgs] CreateFooterSummaryRowsDelegate : Public
    Nevron.Nov.Dom.NSchema NGroupingRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DefaultGroupRowMeasureChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SortingDirectionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DefaultGroupRowHeightProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.ENSortingDirection SortingDirection 'get set' : 
    Double DefaultGroupRowHeight 'get set' : 
    Nevron.Nov.Grid.NDefaultGroupRowMeasure DefaultGroupRowMeasure 'get set' : 
  Methods:
    get_SortingDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_SortingDirection(ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultGroupRowHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultGroupRowHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultGroupRowMeasure(): PrivateScope, Public, HideBySig, SpecialName
    ToggleSortingDirection(): PrivateScope, Public, HideBySig
    GetDefaultGroupRowHeight(): PrivateScope, Public, HideBySig
    FromFormula(NColumn, String): PrivateScope, Public, Static, HideBySig
    FromFormula(NColumn, String, ENSortingDirection): PrivateScope, Public, Static, HideBySig
    FromFieldName(NColumn, String): PrivateScope, Public, Static, HideBySig
    FromFieldName(NColumn, String, ENSortingDirection): PrivateScope, Public, Static, HideBySig
    FromColumn(NColumn): PrivateScope, Public, Static, HideBySig
    FromColumn(NColumn, ENSortingDirection): PrivateScope, Public, Static, HideBySig
Class Nevron.Nov.Grid.NGroupingRuleCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridRuleCollection`2[Nevron.Nov.Grid.NGroupingRule,Nevron.Nov.Grid.NTableGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupingRuleCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NSortingRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowValueGridRule`1[Nevron.Nov.Grid.NGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NRowValue, Nevron.Nov.Grid.ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NColumn, Nevron.Nov.Grid.NRowValue, Nevron.Nov.Grid.ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSortingRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SortingDirectionProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.ENSortingDirection SortingDirection 'get set' : 
  Methods:
    get_SortingDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_SortingDirection(ENSortingDirection): PrivateScope, Public, HideBySig, SpecialName
    FromFormula(NColumn, String): PrivateScope, Public, Static, HideBySig
    FromFormula(NColumn, String, ENSortingDirection): PrivateScope, Public, Static, HideBySig
    FromFieldName(NColumn, String): PrivateScope, Public, Static, HideBySig
    FromFieldName(NColumn, String, ENSortingDirection): PrivateScope, Public, Static, HideBySig
    FromColumn(NColumn): PrivateScope, Public, Static, HideBySig
    FromColumn(NColumn, ENSortingDirection): PrivateScope, Public, Static, HideBySig
Class Nevron.Nov.Grid.NSortingRuleCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridRuleCollection`2[Nevron.Nov.Grid.NSortingRule,Nevron.Nov.Grid.NGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSortingRuleCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDetailsRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDetailsRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild CellsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NDetailsCellCollection Cells 'get set' : 
  Methods:
    get_Cells(): PrivateScope, Public, HideBySig, SpecialName
    set_Cells(NDetailsCellCollection): PrivateScope, Public, HideBySig, SpecialName
    GetCellCount(): PrivateScope, Public, Virtual, HideBySig
    GetCellAt(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRecordDataRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDataRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRecordDataRowSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NTreeDataRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDataRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRecordDataRowSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDefaultGroupRowMeasure: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDefaultRowMeasure`2[Nevron.Nov.Grid.NGroupRowCell,Nevron.Nov.Grid.NGroupRowCellCollection]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDefaultGroupRowMeasureSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NHierarchicalRow: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHierarchicalRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RowsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NChildRowCollection Rows 'get set' : 
  Methods:
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    set_Rows(NChildRowCollection): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NTableGridDocument: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NGenericDocument`1[Nevron.Nov.Grid.NTableGrid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.NTableGrid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTableGridDocumentSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NGrid: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NInputElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Dom.INArrangeElement
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INArrangeElementParent
    Nevron.Nov.Dom.INMeasureElementParent
    Nevron.Nov.Dom.INDocumentContentElement
    Nevron.Nov.UI.INPagedElement
    Nevron.Nov.Internal.ДЧр
  Fields:
    Nevron.Nov.Dom.NSchema NGridSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent AutoCreateColumnEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent FilterRulesChangedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent SortingRulesChangedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent RowsRebuildedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ColumnsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RowsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RowHeadersChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DefaultDataRowMeasureChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FrozenRowsSplitterChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild LeftFrozenColumnsSplitterChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RightFrozenColumnsSplitterChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FilteringRulesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SortingRulesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DataSourceProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredTopAdornerHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredLeftAdornerWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TopAdornerArrangeSlotProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftAdornerArrangeSlotProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowYProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SelectionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoCreateColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FrozenRowsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftFrozenColumnsEndXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftFrozenColumnsCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightFrozenColumnsBeginXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightFrozenColumnsCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FrozenRowsEndYProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DefaultDataRowHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ViewportOriginXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ViewportOriginYProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ViewportSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IntegralVScrollProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IntegralHScrollProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HScrollModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VScrollModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SmallHScrollChangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SmallVScrollChangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowBackgroundFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SelectedRowBackgroundFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlternatingRowBackgroundFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlternatingRowsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlternatingRowsIntervalProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlternatingRowsLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalGridlinesStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalGridlinesStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LevelIndentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowSortColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowFilterColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowReorderColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowResizeColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowBestFitColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowFormatColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowResizeRowsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowBestFitRowsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowDeleteRowsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowEditProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InformationProperty : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand GridPropertiesCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ToggleColumnsCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ToggleRowHeadersCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand CutCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand CopyCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand PasteCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand DeleteRowsCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnSortAscendingCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnSortDescendingCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnClearSortingCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnClearFilteringCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnFilterCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnFormatCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnConditionalFormattingCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnPropertiesCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand MoveLeftCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand MoveRightCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand MoveUpCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand MoveDownCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand MovePageUpCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand MovePageDownCommand : Public, Static, InitOnly
    System.String Scrolling_Category : Public, Static, InitOnly
    System.String Scrolling_Horizontal_Category : Public, Static, InitOnly
    System.String Scrolling_Vertical_Category : Public, Static, InitOnly
    System.String Protection_Category : Public, Static, InitOnly
    System.String Appearance_Gridlines_Category : Public, Static, InitOnly
    System.String Appearance_AlternatingRows_Category : Public, Static, InitOnly
    System.String Appearance_General_Category : Public, Static, InitOnly
  Properties:
    Boolean IsPooledForMeasure 'get ' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForArrange 'get ' : 
    Boolean IsArrangeValid 'get ' : 
    Nevron.Nov.Dom.NDocumentInformation Information 'get set' : 
    Nevron.Nov.Grid.NRowCollection Rows 'get set' : 
    Nevron.Nov.Grid.NRowHeaderCollection RowHeaders 'get set' : 
    Nevron.Nov.Grid.NColumnCollection Columns 'get set' : 
    Nevron.Nov.Grid.NFilteringRuleCollection FilteringRules 'get set' : 
    Nevron.Nov.Grid.NSortingRuleCollection SortingRules 'get set' : 
    Nevron.Nov.Grid.NFrozenRowsSplitter FrozenRowsSplitter 'get set' : 
    Nevron.Nov.Grid.NFrozenColumnsSplitter LeftFrozenColumnsSplitter 'get set' : 
    Nevron.Nov.Grid.NFrozenColumnsSplitter RightFrozenColumnsSplitter 'get set' : 
    Double DesiredWidth 'get set' : 
    Double DesiredHeight 'get set' : 
    Nevron.Nov.Graphics.NSize DesiredSize 'get ' : 
    Double DesiredTopAdornerHeight 'get set' : 
    Double DesiredLeftAdornerWidth 'get set' : 
    Nevron.Nov.UI.ENScrollMode HScrollMode 'get set' : 
    Nevron.Nov.UI.ENScrollMode VScrollMode 'get set' : 
    Double SmallHScrollChange 'get set' : 
    Double SmallVScrollChange 'get set' : 
    Boolean IntegralVScroll 'get set' : 
    Boolean IntegralHScroll 'get set' : 
    Double ViewportOriginX 'get set' : 
    Double ViewportOriginY 'get set' : 
    Nevron.Nov.Graphics.NPoint ViewportOrigin 'get set' : 
    Nevron.Nov.Graphics.NSize ViewportSize 'get set' : 
    Nevron.Nov.Data.NDataSource DataSource 'get set' : 
    Boolean AutoCreateColumns 'get set' : 
    Double DefaultDataRowHeight 'get set' : 
    Nevron.Nov.Grid.NDefaultDataRowMeasure DefaultDataRowMeasure 'get set' : 
    Nevron.Nov.Grid.NGridSelection Selection 'get set' : 
    Int32 FrozenRows 'get set' : 
    Double LeftFrozenColumnsEndX 'get set' : 
    Int32 LeftFrozenColumnsCount 'get set' : 
    Double RightFrozenColumnsBeginX 'get set' : 
    Int32 RightFrozenColumnsCount 'get set' : 
    Double FrozenRowsEndY 'get set' : 
    Boolean AllowSortColumns 'get set' : 
    Boolean AllowFilterColumns 'get set' : 
    Boolean AllowReorderColumns 'get set' : 
    Boolean AllowResizeColumns 'get set' : 
    Boolean AllowBestFitColumns 'get set' : 
    Boolean AllowFormatColumns 'get set' : 
    Boolean AllowResizeRows 'get set' : 
    Boolean AllowBestFitRows 'get set' : 
    Boolean AllowDeleteRows 'get set' : 
    Boolean AllowEdit 'get set' : 
    Nevron.Nov.Graphics.NFill RowBackgroundFill 'get set' : 
    Nevron.Nov.Graphics.NFill SelectedRowBackgroundFill 'get set' : 
    Nevron.Nov.Graphics.NFill AlternatingRowBackgroundFill 'get set' : 
    Boolean AlternatingRows 'get set' : 
    Int32 AlternatingRowsInterval 'get set' : 
    Int32 AlternatingRowsLength 'get set' : 
    Nevron.Nov.Graphics.NStroke HorizontalGridlinesStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke VerticalGridlinesStroke 'get set' : 
    Nevron.Nov.Graphics.NFont Font 'get set' : 
    Nevron.Nov.Graphics.NFill TextFill 'get set' : 
    Double LevelIndent 'get set' : 
    Double WindowX 'get set' : 
    Double WindowY 'get set' : 
    Double WindowWidth 'get set' : 
    Double WindowHeight 'get set' : 
    Nevron.Nov.Graphics.NRectangle WindowArea 'get set' : 
    Nevron.Nov.Graphics.NRectangle TopAdornerArrangeSlot 'get set' : 
    Nevron.Nov.Graphics.NRectangle LeftAdornerArrangeSlot 'get set' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
    Nevron.Nov.Grid.NGrid RootGrid 'get ' : 
    Int32 GridLevel 'get ' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Grid.NAutoCreateColumnEventArgs] AutoCreateColumn: 
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] FilterRulesChanged: 
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] SortingRulesChanged: 
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] RowsRebuilded: 
  Methods:
    get_FrozenRowsEndY(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowSortColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowSortColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowFilterColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowFilterColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowReorderColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowReorderColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowResizeColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowResizeColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowBestFitColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowBestFitColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowFormatColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowFormatColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowResizeRows(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowResizeRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowBestFitRows(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowBestFitRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowDeleteRows(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowDeleteRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowEdit(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowEdit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RowBackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_RowBackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_SelectedRowBackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectedRowBackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_AlternatingRowBackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_AlternatingRowBackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_AlternatingRows(): PrivateScope, Public, HideBySig, SpecialName
    set_AlternatingRows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AlternatingRowsInterval(): PrivateScope, Public, HideBySig, SpecialName
    set_AlternatingRowsInterval(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AlternatingRowsLength(): PrivateScope, Public, HideBySig, SpecialName
    set_AlternatingRowsLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalGridlinesStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalGridlinesStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalGridlinesStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalGridlinesStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(NFont): PrivateScope, Public, HideBySig, SpecialName
    get_TextFill(): PrivateScope, Public, HideBySig, SpecialName
    set_TextFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_LevelIndent(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelIndent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WindowX(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowY(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowArea(): PrivateScope, Public, HideBySig, SpecialName
    set_WindowArea(NRectangle): PrivateScope, Public, HideBySig, SpecialName
    get_TopAdornerArrangeSlot(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftAdornerArrangeSlot(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_RootGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_GridLevel(): PrivateScope, Public, HideBySig, SpecialName
    GetDefaultDataRowHeight(): PrivateScope, Public, HideBySig
    StartDragging(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndDragging(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EnsureVisible(NRow): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EnsureVisible(NColumn): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EnsureVisible(NCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ScrollInDirection(ENCompassDirection, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateFormulaFieldName(String): PrivateScope, Public, HideBySig
    PauseUpdate(): PrivateScope, Public, HideBySig
    ResumeUpdate(): PrivateScope, Public, HideBySig
    Update(): PrivateScope, Public, HideBySig
    ScrollRowUp(): PrivateScope, Public, HideBySig
    ScrollRowDown(): PrivateScope, Public, HideBySig
    ScrollPageUp(): PrivateScope, Public, HideBySig
    ScrollPageDown(): PrivateScope, Public, HideBySig
    ScrollColumnLeft(): PrivateScope, Public, HideBySig
    ScrollColumnRight(): PrivateScope, Public, HideBySig
    ScrollPageLeft(): PrivateScope, Public, HideBySig
    ScrollPageRight(): PrivateScope, Public, HideBySig
    CanDeleteRows(NList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteRows(NList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataRow(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ShowPropertiesDialog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    add_AutoCreateColumn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AutoCreateColumn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_FilterRulesChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_FilterRulesChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_SortingRulesChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SortingRulesChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_RowsRebuilded(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RowsRebuilded(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArrangeValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateArrange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateMeasureFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateArrangeFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Information(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Information(NDocumentInformation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BeginPrinting(NPagedContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPrinting(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PrintPage(NPagedContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    QueryPageSettings(NPagedContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_RowHeaders(): PrivateScope, Public, HideBySig, SpecialName
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_FilteringRules(): PrivateScope, Public, HideBySig, SpecialName
    get_SortingRules(): PrivateScope, Public, HideBySig, SpecialName
    get_FrozenRowsSplitter(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftFrozenColumnsSplitter(): PrivateScope, Public, HideBySig, SpecialName
    get_RightFrozenColumnsSplitter(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredTopAdornerHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredLeftAdornerWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_HScrollMode(): PrivateScope, Public, HideBySig, SpecialName
    set_HScrollMode(ENScrollMode): PrivateScope, Public, HideBySig, SpecialName
    get_VScrollMode(): PrivateScope, Public, HideBySig, SpecialName
    set_VScrollMode(ENScrollMode): PrivateScope, Public, HideBySig, SpecialName
    get_SmallHScrollChange(): PrivateScope, Public, HideBySig, SpecialName
    set_SmallHScrollChange(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SmallVScrollChange(): PrivateScope, Public, HideBySig, SpecialName
    set_SmallVScrollChange(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IntegralVScroll(): PrivateScope, Public, HideBySig, SpecialName
    set_IntegralVScroll(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IntegralHScroll(): PrivateScope, Public, HideBySig, SpecialName
    set_IntegralHScroll(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportOriginX(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportOriginY(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportOrigin(NPoint): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportSize(): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSource(NDataSource): PrivateScope, Public, HideBySig, SpecialName
    get_AutoCreateColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoCreateColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultDataRowHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultDataRowHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultDataRowMeasure(): PrivateScope, Public, HideBySig, SpecialName
    get_Selection(): PrivateScope, Public, HideBySig, SpecialName
    set_Selection(NGridSelection): PrivateScope, Public, HideBySig, SpecialName
    get_FrozenRows(): PrivateScope, Public, HideBySig, SpecialName
    set_FrozenRows(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LeftFrozenColumnsEndX(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftFrozenColumnsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RightFrozenColumnsBeginX(): PrivateScope, Public, HideBySig, SpecialName
    get_RightFrozenColumnsCount(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NTableGrid: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGrid
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTableGridSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent GroupingRulesChangedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild GroupingRulesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild MasterDetailsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowGroupColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ToggleGroupingPanelCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnGroupByCommand : Public, Static, InitOnly
    Nevron.Nov.UI.NCommand ColumnClearGroupingCommand : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NGroupingRuleCollection GroupingRules 'get set' : 
    Boolean AllowGroupColumns 'get set' : 
    Nevron.Nov.Grid.NGroupingPanel GroupingPanel 'get ' : 
    Nevron.Nov.Grid.NMasterDetails MasterDetails 'get set' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] GroupingRulesChanged: 
  Methods:
    add_GroupingRulesChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_GroupingRulesChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_GroupingRules(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowGroupColumns(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowGroupColumns(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_GroupingPanel(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterDetails(): PrivateScope, Public, HideBySig, SpecialName
    set_MasterDetails(NMasterDetails): PrivateScope, Public, HideBySig, SpecialName
    GetDataRow(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NTreeGrid: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGrid
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTreeGridSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent ServiceFieldNameChangedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IdFieldNameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ParentIdFieldNameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateColumnsForServiceFieldNamesProperty : Public, Static, InitOnly
  Properties:
    System.String IdFieldName 'get set' : 
    System.String ParentIdFieldName 'get set' : 
    Boolean CreateColumnsForServiceFieldNames 'get set' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] ServiceFieldNameChanged: 
  Methods:
    add_ServiceFieldNameChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ServiceFieldNameChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_IdFieldName(): PrivateScope, Public, HideBySig, SpecialName
    set_IdFieldName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ParentIdFieldName(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentIdFieldName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CreateColumnsForServiceFieldNames(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateColumnsForServiceFieldNames(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetDataRow(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCheckBoxDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NCheckBox]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCheckBoxDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDateTimeBoxDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NDateTimeBox]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeBoxDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NNumericUpDownDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NNumericUpDown]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericUpDownDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NCell: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.ГЧр
    Nevron.Nov.Internal.ДЧр
  Fields:
    Nevron.Nov.Dom.NSchema NCellSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ContentChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsCurrentProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NWidget Content 'get set' : 
    Boolean IsCurrent 'get set' : 
    Nevron.Nov.Grid.NRow OwnerRow 'get ' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(NWidget): PrivateScope, Public, HideBySig, SpecialName
    get_IsCurrent(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerRow(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    CanCut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanCopy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanPaste(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Paste(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Grid.NDataCellCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NCellCollection`1[Nevron.Nov.Grid.NDataCell]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataCellCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NBooleanCellView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NSymbolBox
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBooleanCellViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
  Properties:
    Boolean Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NDateTimeBoxColumnEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumnEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeBoxColumnEditorSchema : Public, Static, InitOnly
  Methods:
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDataColumn: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NColumn
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Data.NDataSource, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Data.NDataSource, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataColumnSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FieldNameProperty : Public, Static, InitOnly
  Properties:
    System.String FieldName 'get set' : 
    Int32 FieldIndex 'get ' : 
    System.Type FieldType 'get ' : 
    Boolean FieldNullable 'get ' : 
  Methods:
    get_FieldName(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldType(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldNullable(): PrivateScope, Public, HideBySig, SpecialName
    Bind(NDataSource, String): PrivateScope, Public, HideBySig
    Bind(NDataSource, String, String): PrivateScope, Public, HideBySig
    GetRowValue(Int32): PrivateScope, Public, Virtual, HideBySig
    SetRowValue(Int32, Object): PrivateScope, Public, Virtual, HideBySig
    GetRowValuesType(): PrivateScope, Public, Virtual, HideBySig
    GetRowValuesNullable(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColumn: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NInputElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Dom.INArrangeElement
    Nevron.Nov.Dom.INArrangeElementParent
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INMeasureElementParent
    Nevron.Nov.Internal.ДЧр
    Nevron.Nov.Internal.иУр
  Fields:
    Nevron.Nov.FunctionResult`2[Nevron.Nov.Grid.NSortingRule,Nevron.Nov.Grid.NColumn] CreateSortingRuleDelegate : Public
    Nevron.Nov.FunctionResult`2[Nevron.Nov.Grid.NGroupingRule,Nevron.Nov.Grid.NColumn] CreateGroupingRuleDelegate : Public
    Nevron.Nov.FunctionResult`2[Nevron.Nov.UI.NWidget,Nevron.Nov.Grid.NColumn] CreateHeaderContentDelegate : Public
    Nevron.Nov.Dom.NSchema NColumnSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent ColumnClickEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent CellClickEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild HeaderChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FormatChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild EditorChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FormattingRulesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FreezeModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty YProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FixedWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsFrozenProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsAutoCreatedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SortingDirectionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HasFiltersProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayIndexProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowSortProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowFilterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowGroupProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowReorderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowEditProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowResizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowFormatProperty : Public, Static, InitOnly
  Properties:
    Boolean IsPooledForMeasure 'get ' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForArrange 'get ' : 
    Boolean IsArrangeValid 'get ' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
    Nevron.Nov.Grid.NColumnHeader Header 'get set' : 
    Nevron.Nov.Grid.NColumnFormat Format 'get set' : 
    Nevron.Nov.Grid.NColumnEditor Editor 'get set' : 
    Nevron.Nov.Grid.NFormattingRuleCollection FormattingRules 'get set' : 
    System.String Title 'get set' : 
    Nevron.Nov.Grid.ENColumnFreezeMode FreezeMode 'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Width 'get set' : 
    Double Height 'get set' : 
    Nevron.Nov.Graphics.NRectangle Bounds 'get set' : 
    Double DesiredWidth 'get set' : 
    Double DesiredHeight 'get set' : 
    Nevron.Nov.Grid.ENColumnWidthMode WidthMode 'get set' : 
    Double FixedWidth 'get set' : 
    Double WidthPercent 'get set' : 
    Double MinWidth 'get set' : 
    Nevron.Nov.Grid.NColumnCollection OwnerCollection 'get ' : 
    Boolean IsFrozen 'get set' : 
    Boolean IsAutoCreated 'get set' : 
    Nevron.Nov.Grid.ENColumnSortingDirection SortingDirection 'get set' : 
    Boolean HasFilters 'get set' : 
    Int32 DisplayIndex 'get set' : 
    Boolean AllowSort 'get set' : 
    Boolean AllowGroup 'get set' : 
    Boolean AllowFilter 'get set' : 
    Boolean AllowEdit 'get set' : 
    Boolean AllowResize 'get set' : 
    Boolean AllowReorder 'get set' : 
    Boolean AllowFormat 'get set' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] ColumnClick: 
  Methods:
    get_AllowFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowFormat(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ToggleSortingDirection(): PrivateScope, Public, HideBySig
    GetCellXRange(NRow, Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    add_ColumnClick(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ColumnClick(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArrangeValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateArrange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateMeasureFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateArrangeFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanClip(): PrivateScope, Public, Virtual, HideBySig
    GetClip(): PrivateScope, Public, Virtual, HideBySig
    CanTransform(): PrivateScope, Public, Virtual, HideBySig
    GetTransform(): PrivateScope, Public, Virtual, HideBySig
    LocalToParent(NPoint): PrivateScope, Public, Virtual, HideBySig
    ParentToLocal(NPoint): PrivateScope, Public, Virtual, HideBySig
    CreateSortingRule(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateGroupingRule(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateHeaderContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateHeaderContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Click(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BestFit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowFilterDialog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowPropertiesDialog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowFormatDialog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowConditionalFormattingDialog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FormatDataCell(NDataCell, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FormatDefaultDataCell(NDataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanEdit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDataCellEditor(NDataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRowValuesType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRowValuesNullable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRowValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRowValue(Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_Header(): PrivateScope, Public, HideBySig, SpecialName
    set_Header(NColumnHeader): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(NColumnFormat): PrivateScope, Public, HideBySig, SpecialName
    get_Editor(): PrivateScope, Public, HideBySig, SpecialName
    set_Editor(NColumnEditor): PrivateScope, Public, HideBySig, SpecialName
    get_FormattingRules(): PrivateScope, Public, HideBySig, SpecialName
    set_FormattingRules(NFormattingRuleCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_FreezeMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FreezeMode(ENColumnFreezeMode): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    set_Bounds(NRectangle): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_WidthMode(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthMode(ENColumnWidthMode): PrivateScope, Public, HideBySig, SpecialName
    get_FixedWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_FixedWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WidthPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_MinWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFrozen(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_SortingDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_HasFilters(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowSort(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowSort(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowGroup(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowGroup(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowFilter(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowFilter(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowEdit(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowEdit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowResize(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowResize(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowReorder(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowReorder(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NColumnHeader: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NContentHolder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnHeaderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SortingButtonChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FilterButtonChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SpacingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsPressedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowSortingButtonProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowFilterButtonProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NColumn OwnerColumn 'get ' : 
    Nevron.Nov.UI.NSymbolButton FilterButton 'get set' : 
    Nevron.Nov.UI.NSymbolButton SortingButton 'get set' : 
    Double Spacing 'get set' : 
    Boolean IsPressed 'get set' : 
    Boolean ShowSortingButton 'get set' : 
    Boolean ShowFilterButton 'get set' : 
  Methods:
    get_OwnerColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_FilterButton(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterButton(NSymbolButton): PrivateScope, Public, HideBySig, SpecialName
    get_SortingButton(): PrivateScope, Public, HideBySig, SpecialName
    set_SortingButton(NSymbolButton): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsPressed(): PrivateScope, Public, HideBySig, SpecialName
    get_ShowSortingButton(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowSortingButton(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowFilterButton(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowFilterButton(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NTextBoxDataCellEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGenericDataCellEditor`1[Nevron.Nov.UI.NTextBox]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTextBoxDataCellEditorSchema : Public, Static, InitOnly
  Methods:
    OnBeginEdit(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NTextCellView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTextCellViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WrapModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontNameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FontStyleProperty : Public, Static, InitOnly
  Properties:
    System.String Text 'get set' : 
    Nevron.Nov.ENHorizontalAlignment HorizontalAlignment 'get set' : 
    Nevron.Nov.ENVerticalAlignment VerticalAlignment 'get set' : 
    Nevron.Nov.Graphics.ENTextWrapMode WrapMode 'get set' : 
    System.String FontName 'get set' : 
    Double FontSize 'get set' : 
    Nevron.Nov.Graphics.ENFontStyle FontStyle 'get set' : 
  Methods:
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAlignment(ENHorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAlignment(ENVerticalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_WrapMode(): PrivateScope, Public, HideBySig, SpecialName
    set_WrapMode(ENTextWrapMode): PrivateScope, Public, HideBySig, SpecialName
    get_FontName(): PrivateScope, Public, HideBySig, SpecialName
    set_FontName(String): PrivateScope, Public, HideBySig, SpecialName
    get_FontSize(): PrivateScope, Public, HideBySig, SpecialName
    set_FontSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FontStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_FontStyle(ENFontStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NGridDetail`4[TGrid,TGridView,TDoc,TContextMenu]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid,  DefaultConstructor
  Type parameter: TGridView, Nevron.Nov.Grid.NGridView`3[TDoc,TGrid,TContextMenu],  DefaultConstructor
  Type parameter: TDoc, Nevron.Nov.Dom.NGenericDocument`1[TGrid],  DefaultConstructor
  Type parameter: TContextMenu, Nevron.Nov.Grid.NGridContextMenu,  DefaultConstructor
  :Nevron.Nov.Grid.NDataSourceDetail
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridDetailSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild GridViewChild : Public, Static, InitOnly
  Properties:
    TGridView GridView 'get set' : 
  Methods:
    get_GridView(): PrivateScope, Public, HideBySig, SpecialName
    CreateWidget(NDataSource, Int32): PrivateScope, Public, Virtual, HideBySig
Struct Nevron.Nov.Grid.ENColumnFreezeMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENColumnFreezeMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnFreezeMode Left = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnFreezeMode Right = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENFillDeclarationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENFillDeclarationMode Uniform = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENFillDeclarationMode TwoColorGradient = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENFillDeclarationMode ThreeColorGradient = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENColorGradientType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENColorGradientType TwoColor = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColorGradientType ThreeColor = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENRowConditionOperator: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENRowConditionOperator Equals = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator LessThan = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator GreaterThan = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator LessThanOrEqual = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator GreaterThanOrEqual = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator StartsWith = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator EndsWith = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator Contains = 7 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator ContainedIn = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator Like = 9 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator IsEmpty = 10 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENRowConditionOperator IsNull = 11 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENSpanCellBeginXPositionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENSpanCellBeginXPositionMode RowBeginX = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellBeginXPositionMode Percent = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellBeginXPositionMode ColumnBegin = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellBeginXPositionMode ColumnEnd = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellBeginXPositionMode PrevCellEndX = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellBeginXPositionMode AnchorToEndX = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENSpanCellEndXPositionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENSpanCellEndXPositionMode RowEndX = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellEndXPositionMode Percent = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellEndXPositionMode ColumnBegin = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellEndXPositionMode ColumnEnd = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellEndXPositionMode NextCellBeginX = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSpanCellEndXPositionMode AnchorToBeginX = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENSortingDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENSortingDirection Ascending = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSortingDirection Descending = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENColumnSortingDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENColumnSortingDirection None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnSortingDirection Ascending = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnSortingDirection Descending = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENColumnWidthMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENColumnWidthMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnWidthMode Fixed = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnWidthMode SizeToCells = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnWidthMode SizeToHeader = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENColumnWidthMode Percent = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENGridlinesVisibility: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENGridlinesVisibility None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENGridlinesVisibility Horizontal = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENGridlinesVisibility Vertical = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENGridlinesVisibility Both = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENSelectionNavigationCommand: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENSelectionNavigationCommand MoveLeft = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSelectionNavigationCommand MoveRight = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSelectionNavigationCommand MoveUp = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSelectionNavigationCommand MoveDown = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSelectionNavigationCommand MovePageUp = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENSelectionNavigationCommand MovePageDown = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment Automatic = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment Left = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment Center = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment Right = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewHorizontalAlignment Fit = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.ENDataCellViewVerticalAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Grid.ENDataCellViewVerticalAlignment Automatic = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewVerticalAlignment Top = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewVerticalAlignment Center = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewVerticalAlignment Bottom = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Grid.ENDataCellViewVerticalAlignment Fit = 4 : Public, Static, Literal, HasDefault
Class Nevron.Nov.Grid.NCurrentRowChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NEventArgs
    Void .ctor(Nevron.Nov.Dom.NEvent, Nevron.Nov.Dom.NNode, Nevron.Nov.Grid.NRow, Nevron.Nov.Grid.NRow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NRow NewCurrentRow 'get ' : 
    Nevron.Nov.Grid.NRow OldCurrentRow 'get ' : 
  Methods:
    get_NewCurrentRow(): PrivateScope, Public, HideBySig, SpecialName
    get_OldCurrentRow(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NCurrentCellChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NEventArgs
    Void .ctor(Nevron.Nov.Dom.NEvent, Nevron.Nov.Dom.NNode, Nevron.Nov.Grid.NCell, Nevron.Nov.Grid.NCell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NCell NewCurrentCell 'get ' : 
    Nevron.Nov.Grid.NCell OldCurrentCell 'get ' : 
  Methods:
    get_NewCurrentCell(): PrivateScope, Public, HideBySig, SpecialName
    get_OldCurrentCell(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NFrozenColumnsSplitter: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFrozenSplitter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFrozenColumnsSplitterSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NFrozenRowsSplitter: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NFrozenSplitter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFrozenRowsSplitterSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NFrozenSplitter: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFrozenSplitterSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NHeaderCollectionBase`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: T, Nevron.Nov.Dom.NElement
  :Nevron.Nov.UI.NInputElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.DataStructures.INCollection`1[T]
    Nevron.Nov.DataStructures.INDynamicSet`1[T]
    Nevron.Nov.DataStructures.INSet`1[T]
    Nevron.Nov.DataStructures.INCountable`1[T]
    Nevron.Nov.DataStructures.INContains`1[T]
    Nevron.Nov.DataStructures.INIterable`1[T]
    Nevron.Nov.DataStructures.INAddable`1[T]
    Nevron.Nov.DataStructures.INRemovable`1[T]
    Nevron.Nov.DataStructures.INClearable
    Nevron.Nov.DataStructures.INWritableIndexedSet`1[T]
    Nevron.Nov.DataStructures.INIndexedSet`1[T]
    Nevron.Nov.DataStructures.INReverseIterable`1[T]
    Nevron.Nov.Dom.INArrangeElement
    Nevron.Nov.Dom.INArrangeElementParent
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INMeasureElementParent
  Fields:
    Nevron.Nov.Dom.NSchema NHeaderCollectionBaseSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty YProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowYProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
  Properties:
    Int32 Count 'get ' : 
    T Item [Int32] 'get set' : 
    Boolean IsPooledForMeasure 'get ' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForArrange 'get ' : 
    Boolean IsArrangeValid 'get ' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Width 'get set' : 
    Double Height 'get set' : 
    Double DesiredWidth 'get set' : 
    Double WindowX 'get set' : 
    Double WindowY 'get set' : 
    Double WindowWidth 'get set' : 
    Double WindowHeight 'get set' : 
    Nevron.Nov.Graphics.NRectangle WindowArea 'get set' : 
    Boolean Visible 'get set' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    GetIterator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReverseIterator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArrangeValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateArrange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateMeasureFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateArrangeFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowX(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowY(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowArea(): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    CanTransform(): PrivateScope, Public, Virtual, HideBySig
    GetTransform(): PrivateScope, Public, Virtual, HideBySig
    LocalToParent(NPoint): PrivateScope, Public, Virtual, HideBySig
    ParentToLocal(NPoint): PrivateScope, Public, Virtual, HideBySig
    HitTest(NPointHitTestVisitor): PrivateScope, Public, Virtual, HideBySig
    HitTest(NRegionHitTestVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NTableGridView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridView`3[Nevron.Nov.Grid.NTableGridDocument,Nevron.Nov.Grid.NTableGrid,Nevron.Nov.Grid.NTableGridContextMenu]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTableGridViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild GroupingPanelChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NGroupingPanel GroupingPanel 'get set' : 
  Methods:
    get_GroupingPanel(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupingPanel(NGroupingPanel): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NRowHeader: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NSymbolContentBox
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.ГЧр
    Nevron.Nov.Internal.ДЧр
  Fields:
    Nevron.Nov.Dom.NSchema NRowHeaderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsCurrentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsSelectedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsFrozenProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsEditingProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NRow Row 'get ' : 
    Boolean IsCurrent 'get set' : 
    Boolean IsSelected 'get set' : 
    Boolean IsFrozen 'get set' : 
    Boolean IsEditing 'get set' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCurrent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCurrent(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsSelected(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFrozen(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEditing(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NRowHeaderCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NHeaderCollectionBase`1[Nevron.Nov.Grid.NRowHeader]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowHeaderCollectionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowRowNumbersProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowRowSymbolProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftGridlineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightGridlineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalGridlinesStrokeProperty : Public, Static, InitOnly
  Properties:
    Boolean ShowRowNumbers 'get set' : 
    Boolean ShowRowSymbol 'get set' : 
    Nevron.Nov.Graphics.NStroke LeftGridlineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke RightGridlineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke HorizontalGridlinesStroke 'get set' : 
  Methods:
    get_ShowRowNumbers(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowRowNumbers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowRowSymbol(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowRowSymbol(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LeftGridlineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftGridlineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_RightGridlineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_RightGridlineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalGridlinesStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalGridlinesStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    CanClip(): PrivateScope, Public, Virtual, HideBySig
    GetClip(): PrivateScope, Public, Virtual, HideBySig
    VisitChildDisplaySubtree(NDisplayVisitor, NVisual): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDefaultDataRowMeasure: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NDefaultRowMeasure`2[Nevron.Nov.Grid.NDataCell,Nevron.Nov.Grid.NDataCellCollection]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDefaultDataRowMeasureSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NDefaultRowMeasure`2[TCell,TCellCollection]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TCell, Nevron.Nov.Grid.NCell
  Type parameter: TCellCollection, Nevron.Nov.Grid.NCellCollection`1[TCell]
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INArrangeElementParent
    Nevron.Nov.Dom.INMeasureElementParent
  Fields:
    Nevron.Nov.Dom.NSchema NDefaultRowMeasureSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild CellsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DefaultHeightProperty : Public, Static, InitOnly
  Properties:
    TCellCollection Cells 'get set' : 
    Double DefaultHeight 'get set' : 
  Methods:
    get_Cells(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultHeight(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NRowCollectionBase: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NInputElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.DataStructures.INCollection`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INDynamicSet`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INSet`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INCountable`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INContains`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INIterable`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INAddable`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INRemovable`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INClearable
    Nevron.Nov.DataStructures.INWritableIndexedSet`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INIndexedSet`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.DataStructures.INReverseIterable`1[Nevron.Nov.Grid.NRow]
    Nevron.Nov.Dom.INArrangeElement
    Nevron.Nov.Dom.INArrangeElementParent
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INMeasureElementParent
  Fields:
    Nevron.Nov.Dom.NSchema NRowCollectionBaseSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty YProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContainsExpandableRowsProperty : Public, Static, InitOnly
  Properties:
    Int32 Count 'get ' : 
    Nevron.Nov.Grid.NRow Item [Int32] 'get set' : 
    Boolean IsPooledForMeasure 'get ' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForArrange 'get ' : 
    Boolean IsArrangeValid 'get ' : 
    Double Y   'get set' : 
    Double Height 'get set' : 
    Boolean ContainsExpandableRows 'get set' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    GetIterator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReverseIterator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, NRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(NRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(NRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, NRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(NRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(NRow): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(NRow[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArrangeValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateArrange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InvalidateMeasureFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InvalidateArrangeFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsExpandableRows(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    AccumulateDisplayChildren(NDisplayVisitor, NList`1): PrivateScope, Public, Virtual, HideBySig
    VisitChildDisplaySubtree(NDisplayVisitor, NVisual): PrivateScope, Public, Virtual, HideBySig
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
    DoPostPaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
    CanClip(): PrivateScope, Public, Virtual, HideBySig
    CanTransform(): PrivateScope, Public, Virtual, HideBySig
    GetTransform(): PrivateScope, Public, Virtual, HideBySig
    LocalToParent(NPoint): PrivateScope, Public, Virtual, HideBySig
    ParentToLocal(NPoint): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NGridView`3[TDoc,TGrid,TContextMenu]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TDoc, Nevron.Nov.Dom.NGenericDocument`1[TGrid],  DefaultConstructor
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid
  Type parameter: TContextMenu, Nevron.Nov.Grid.NGridContextMenu,  DefaultConstructor
  :Nevron.Nov.UI.NDocumentView`6[TDoc,TGrid,Nevron.Nov.Grid.Formats.NGridFormat`2[TDoc,TGrid],Nevron.Nov.Grid.Formats.NGridFormatRegistry`2[TDoc,TGrid],Nevron.Nov.Grid.Formats.NGridLoadSettings,Nevron.Nov.Grid.Formats.NGridSaveSettings]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Grid.INGridView
    Nevron.Nov.Internal.ДЧр
  Fields:
    Nevron.Nov.Dom.NSchema NGridViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild HScrollBarChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild VScrollBarChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContextMenuProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NHScrollBar HScrollBar 'get set' : 
    Nevron.Nov.UI.NVScrollBar VScrollBar 'get set' : 
    TGrid Grid 'get ' : 
    TContextMenu ContextMenu 'get set' : 
  Methods:
    get_HScrollBar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HScrollBar(NHScrollBar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VScrollBar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VScrollBar(NVScrollBar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Grid(): PrivateScope, Public, HideBySig, SpecialName
    get_ContextMenu(): PrivateScope, Public, HideBySig, SpecialName
    set_ContextMenu(TContextMenu): PrivateScope, Public, HideBySig, SpecialName
    ScrollInDirection(ENCompassDirection, Double): PrivateScope, Public, Virtual, HideBySig
    DoPostPaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NColumnCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NHeaderCollectionBase`1[Nevron.Nov.Grid.NColumn]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnCollectionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HasPercentColumnsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TopGridlineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BottomGridlineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalGridlinesStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DragArrowSymbolsColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DragNoSymbolColorProperty : Public, Static, InitOnly
  Properties:
    Boolean HasPercentColumns 'get set' : 
    Nevron.Nov.Graphics.NColor DragArrowSymbolsColor 'get set' : 
    Nevron.Nov.Graphics.NColor DragNoSymbolColor 'get set' : 
    Nevron.Nov.Graphics.NStroke TopGridlineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke BottomGridlineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke VerticalGridlinesStroke 'get set' : 
  Methods:
    get_HasPercentColumns(): PrivateScope, Public, HideBySig, SpecialName
    get_DragArrowSymbolsColor(): PrivateScope, Public, HideBySig, SpecialName
    get_DragNoSymbolColor(): PrivateScope, Public, HideBySig, SpecialName
    get_TopGridlineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_TopGridlineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_BottomGridlineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_BottomGridlineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalGridlinesStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalGridlinesStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    CanClip(): PrivateScope, Public, Virtual, HideBySig
    GetClip(): PrivateScope, Public, Virtual, HideBySig
    GetColumnByFieldName(String): PrivateScope, Public, HideBySig
    GetAllColumnsByFieldName(String): PrivateScope, Public, HideBySig
    GetColumnsInDisplayOrder(): PrivateScope, Public, HideBySig
    GetFirstDisplayOrderColumn(): PrivateScope, Public, HideBySig
    GetLastDisplayOrderColumn(): PrivateScope, Public, HideBySig
    VisitChildDisplaySubtree(NDisplayVisitor, NVisual): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NGroupingPanel: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupingPanelSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild PromptChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild GroupingHeadersChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalSpacingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ConnectorsStrokeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NWidget Prompt 'get set' : 
    Nevron.Nov.Grid.NGroupingHeaderCollection GroupingHeaders 'get set' : 
    Double HorizontalSpacing 'get set' : 
    Double VerticalOffset 'get set' : 
    Nevron.Nov.Graphics.NStroke ConnectorsStroke 'get set' : 
  Methods:
    AccumulateDisplayChildren(NDisplayVisitor, NList`1): PrivateScope, Public, Virtual, HideBySig
    get_Prompt(): PrivateScope, Public, HideBySig, SpecialName
    set_Prompt(NWidget): PrivateScope, Public, HideBySig, SpecialName
    get_GroupingHeaders(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupingHeaders(NGroupingHeaderCollection): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectorsStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectorsStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NGroupRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NHierarchicalRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild CellsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NGroupRowCellCollection Cells 'get set' : 
    Nevron.Nov.Data.NRecordset Recordset 'get ' : 
    System.Object GroupValue 'get ' : 
    Nevron.Nov.Grid.NGroupingRule GroupingRule 'get ' : 
  Methods:
    get_Cells(): PrivateScope, Public, HideBySig, SpecialName
    set_Cells(NGroupRowCellCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Recordset(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupValue(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupingRule(): PrivateScope, Public, HideBySig, SpecialName
    GetCellCount(): PrivateScope, Public, Virtual, HideBySig
    GetCellAt(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NDataRow: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Grid.NHierarchicalRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild CellsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowIndexProperty : Public, Static, InitOnly
  Properties:
    Int32 RowIndex 'get set' : 
    Nevron.Nov.Grid.NDataCellCollection Cells 'get set' : 
  Methods:
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Cells(): PrivateScope, Public, HideBySig, SpecialName
    set_Cells(NDataCellCollection): PrivateScope, Public, HideBySig, SpecialName
    GetValue(NColumn): PrivateScope, Public, HideBySig
    GetValue(Int32): PrivateScope, Public, HideBySig
    SetValue(NColumn, Object): PrivateScope, Public, HideBySig
    SetValue(Int32, Object): PrivateScope, Public, HideBySig
    GetCellCount(): PrivateScope, Public, Virtual, HideBySig
    GetCellAt(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NChildRowCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowCollectionBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupRowCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NRow: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Dom.INArrangeElement
    Nevron.Nov.Dom.INArrangeElementParent
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INMeasureElementParent
    Nevron.Nov.Internal.ГЧр
    Nevron.Nov.Internal.ДЧр
  Fields:
    Nevron.Nov.Dom.NSchema NRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ExpandCollapseSymbolBoxChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsCurrentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsSelectedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsRealizedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsFrozenProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsExpandedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsEditingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsContentCreatedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CanExpandProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FixedHeaderHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DesiredHeaderHeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BackgroundFillProperty : Public, Static, InitOnly
  Properties:
    Boolean IsPooledForMeasure 'get ' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForArrange 'get ' : 
    Boolean IsArrangeValid 'get ' : 
    Boolean IsCurrent 'get set' : 
    Boolean IsSelected 'get set' : 
    Boolean IsRealized 'get set' : 
    Boolean IsFrozen 'get set' : 
    Boolean IsEditing 'get set' : 
    Boolean IsContentCreated 'get set' : 
    Boolean IsExpanded 'get set' : 
    Boolean CanExpand 'get set' : 
    Nevron.Nov.Graphics.NFill BackgroundFill 'get set' : 
    Double Y   'get set' : 
    Double Height 'get set' : 
    Double FixedHeaderHeight 'get set' : 
    Double DesiredHeaderHeight 'get set' : 
    Nevron.Nov.Grid.NRowExpandCollapseSymbolBox ExpandCollapseSymbolBox 'get set' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
    Nevron.Nov.Grid.NRowCollectionBase OwnerCollection 'get ' : 
    Nevron.Nov.Grid.NRow ParentRow 'get ' : 
    Nevron.Nov.Grid.NRow RootRow 'get ' : 
    Int32 Level 'get ' : 
    Nevron.Nov.Grid.NRowHeader RowHeader 'get ' : 
  Methods:
    GetVisibleScrollableRowsCount(Double, Double): PrivateScope, Public, HideBySig
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ValidateMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArrangeValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateArrange(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ValidateArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InvalidateMeasureFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InvalidateArrangeFromChild(NElement, ENLayoutParentInvalidationReason, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsCurrent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSelected(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRealized(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFrozen(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEditing(): PrivateScope, Public, HideBySig, SpecialName
    get_IsContentCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpanded(): PrivateScope, Public, HideBySig, SpecialName
    get_CanExpand(): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_FixedHeaderHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_DesiredHeaderHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_ExpandCollapseSymbolBox(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_ParentRow(): PrivateScope, Public, HideBySig, SpecialName
    get_RootRow(): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_RowHeader(): PrivateScope, Public, HideBySig, SpecialName
    GetHeaderTop(): PrivateScope, Public, HideBySig
    GetHeaderBottom(): PrivateScope, Public, HideBySig
    GetHeaderTopInRootRows(): PrivateScope, Public, HideBySig
    GetHeaderBottomInRootRows(): PrivateScope, Public, HideBySig
    GetHeaderHeight(): PrivateScope, Public, HideBySig
    GetNextNavigationRow(): PrivateScope, Public, HideBySig
    GetPrevNavigationRow(): PrivateScope, Public, HideBySig
    GetFirstNavigationRow(): PrivateScope, Public, HideBySig
    GetLastNavigationRow(): PrivateScope, Public, HideBySig
    EnsureContentCreated(): PrivateScope, Public, HideBySig
    EnsureContentDestroyed(): PrivateScope, Public, HideBySig
    GetCellCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCellAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Expand(): PrivateScope, Public, HideBySig
    Collapse(Boolean): PrivateScope, Public, HideBySig
    ToggleExpanded(): PrivateScope, Public, HideBySig
    Realize(): PrivateScope, Public, HideBySig
    Virtualize(Boolean): PrivateScope, Public, HideBySig
    CanVirtualize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Grid.NRowCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NRowCollectionBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowCollectionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowYProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WindowHeightProperty : Public, Static, InitOnly
  Properties:
    Double X   'get set' : 
    Double WindowX 'get set' : 
    Double WindowY 'get set' : 
    Double WindowWidth 'get set' : 
    Double WindowHeight 'get set' : 
    Nevron.Nov.Graphics.NRectangle WindowArea 'get set' : 
  Methods:
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowX(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowY(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowArea(): PrivateScope, Public, HideBySig, SpecialName
    CanTransform(): PrivateScope, Public, Virtual, HideBySig
    GetTransform(): PrivateScope, Public, Virtual, HideBySig
    LocalToParent(NPoint): PrivateScope, Public, Virtual, HideBySig
    ParentToLocal(NPoint): PrivateScope, Public, Virtual, HideBySig
    CanClip(): PrivateScope, Public, Virtual, HideBySig
    GetClip(): PrivateScope, Public, Virtual, HideBySig
    VisitChildDisplaySubtree(NDisplayVisitor, NVisual): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRowExpandCollapseSymbolBox: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NSymbolBox
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowExpandCollapseSymbolBoxSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NGridSelection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NSelection`1[Nevron.Nov.Grid.NRow]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridSelectionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent CurrentCellChangedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent CurrentRowChangedEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowCurrentCellProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginEditCellOnClickProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginEditCellOnDoubleClickProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginEditCellOnBecomeCurrentProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
    Nevron.Nov.Grid.NCell CurrentCell 'get set' : 
    Nevron.Nov.Grid.NRow CurrentRow 'get set' : 
    Boolean AllowCurrentCell 'get set' : 
    Boolean BeginEditCellOnClick 'get set' : 
    Boolean BeginEditCellOnDoubleClick 'get set' : 
    Boolean BeginEditCellOnBecomeCurrent 'get set' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Grid.NCurrentCellChangedEventArgs] CurrentCellChanged: 
    Nevron.Nov.Function`1[Nevron.Nov.Grid.NCurrentRowChangedEventArgs] CurrentRowChanged: 
  Methods:
    add_CurrentCellChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CurrentCellChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_CurrentRowChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CurrentRowChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentCell(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentCell(NCell): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentRow(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentRow(NRow): PrivateScope, Public, HideBySig, SpecialName
    get_AllowCurrentCell(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowCurrentCell(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BeginEditCellOnClick(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginEditCellOnClick(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BeginEditCellOnDoubleClick(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginEditCellOnDoubleClick(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BeginEditCellOnBecomeCurrent(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginEditCellOnBecomeCurrent(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ClickCell(NCell, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClickRowHeader(NRowHeader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClickRow(NRow): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    CanMoveUp(): PrivateScope, Public, HideBySig
    CanMoveDown(): PrivateScope, Public, HideBySig
    CanMoveLeft(): PrivateScope, Public, HideBySig
    CanMoveRight(): PrivateScope, Public, HideBySig
    CanMovePageUp(): PrivateScope, Public, HideBySig
    CanMovePageDown(): PrivateScope, Public, HideBySig
    CanMoveRowStart(): PrivateScope, Public, HideBySig
    CanMoveRowEnd(): PrivateScope, Public, HideBySig
    CanMoveDownLast(): PrivateScope, Public, HideBySig
    CanMoveUpFirst(): PrivateScope, Public, HideBySig
    CanMoveLeftEdit(): PrivateScope, Public, HideBySig
    CanMoveRightEdit(): PrivateScope, Public, HideBySig
    CanMoveFirstCell(): PrivateScope, Public, HideBySig
    CanMoveLastCell(): PrivateScope, Public, HideBySig
    CanMoveDownEdit(): PrivateScope, Public, HideBySig
    MoveUp(): PrivateScope, Public, HideBySig
    MoveDown(): PrivateScope, Public, HideBySig
    MoveLeft(): PrivateScope, Public, HideBySig
    MoveRight(): PrivateScope, Public, HideBySig
    MovePageUp(): PrivateScope, Public, HideBySig
    MovePageDown(): PrivateScope, Public, HideBySig
    MoveRowStart(): PrivateScope, Public, HideBySig
    MoveRowEnd(): PrivateScope, Public, HideBySig
    MoveDownLast(): PrivateScope, Public, HideBySig
    MoveUpFirst(): PrivateScope, Public, HideBySig
    MoveLeftEdit(): PrivateScope, Public, HideBySig
    MoveRightEdit(): PrivateScope, Public, HideBySig
    MoveFirstCell(): PrivateScope, Public, HideBySig
    MoveLastCell(): PrivateScope, Public, HideBySig
    MoveDownEdit(): PrivateScope, Public, HideBySig
    TryCurrentCellBeginEdit(): PrivateScope, Public, HideBySig
    TryCurrentCellCancelEdit(): PrivateScope, Public, HideBySig
    TryCurrentCellCommitEdit(): PrivateScope, Public, HideBySig
Class Nevron.Nov.Grid.NTreeGridView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.NGridView`3[Nevron.Nov.Grid.NTreeGridDocument,Nevron.Nov.Grid.NTreeGrid,Nevron.Nov.Grid.NTreeGridContextMenu]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTreeGridViewSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.NGridContextMenu: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NContextMenu
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridContextMenuSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowGridMenuProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowColumnMenuProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowDataCellMenuProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowRowMenuProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NColumn CurrentColumn 'get ' : 
    Boolean ShowGridMenu 'get set' : 
    Boolean ShowColumnMenu 'get set' : 
    Boolean ShowDataCellMenu 'get set' : 
    Boolean ShowRowMenu 'get set' : 
    Nevron.Nov.Grid.INGridView OwnerGridView 'get ' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    get_CurrentColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_ShowGridMenu(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowGridMenu(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowColumnMenu(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowColumnMenu(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowDataCellMenu(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowDataCellMenu(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowRowMenu(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowRowMenu(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGridView(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.NGridUIThemePlugin: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.UI.NUIThemePlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateStyles(NUITheme): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NGridModule: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.NModule
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Grid.NGridModule Instance 'get ' : 
  Methods:
    Install(): PrivateScope, Public, Virtual, HideBySig
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Nevron.Nov.Grid.NResources: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.NEmbeddedResourceContainer
  Fields:
    Nevron.Nov.NEmbeddedResource RCUR_CreateBezierCurve_cur : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RCUR_CreateCircularArc_cur : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_ClearFilter_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_ClearSorting_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_ConditionalFormatting_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_Filter_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_FormatCells_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_GroupBy_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_SortAscending_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_Column_SortDescending_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_View_Columns_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_View_GroupingPanel_png : Public, Static, InitOnly
    Nevron.Nov.NEmbeddedResource RIMG_View_RowHeaders_png : Public, Static, InitOnly
    Nevron.Nov.Grid.NResources Instance : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NImage Image_Column_ClearFilter_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_ClearSorting_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_ConditionalFormatting_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_Filter_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_FormatCells_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_GroupBy_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_SortAscending_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_Column_SortDescending_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_View_Columns_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_View_GroupingPanel_png 'get ' : 
    Nevron.Nov.Graphics.NImage Image_View_RowHeaders_png 'get ' : 
    Nevron.Nov.UI.NCursor Cursor_CreateBezierCurve_cur 'get ' : 
    Nevron.Nov.UI.NCursor Cursor_CreateCircularArc_cur 'get ' : 
  Methods:
    get_Image_Column_ClearFilter_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_ClearSorting_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_ConditionalFormatting_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_Filter_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_FormatCells_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_GroupBy_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_SortAscending_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_Column_SortDescending_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_View_Columns_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_View_GroupingPanel_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Image_View_RowHeaders_png(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cursor_CreateBezierCurve_cur(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Cursor_CreateCircularArc_cur(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Nevron.Nov.Grid.Tools.NClickAndDragColumnHeadersTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridViewDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NClickAndDragColumnHeadersToolSchema : Public, Static, InitOnly
  Methods:
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Tools.NClickAndDragGroupingHeadersTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridViewDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NClickAndDragGroupingHeadersToolSchema : Public, Static, InitOnly
  Methods:
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Tools.NContextMenuTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NContextMenuToolSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContextMenuMouseButtonEventProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.ENMouseButtonEvent ContextMenuMouseButtonEvent 'get set' : 
  Methods:
    OnMouseDown(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseUp(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    get_ContextMenuMouseButtonEvent(): PrivateScope, Public, HideBySig, SpecialName
    set_ContextMenuMouseButtonEvent(ENMouseButtonEvent): PrivateScope, Public, HideBySig, SpecialName
    DetermineContextMenuElement(NMouseButtonEventArgs): PrivateScope, Public, HideBySig
Class Nevron.Nov.Grid.Tools.NResizeRowsTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridViewDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NResizeRowsToolSchema : Public, Static, InitOnly
  Methods:
    OnMouseDown(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Tools.NScrollAndZoomTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NScrollAndZoomToolBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScrollAndZoomToolSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.Tools.NGridViewDragTool: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridViewDragToolSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.INGridView OwnerGridView 'get ' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    get_OwnerGridView(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.Tools.NResizeColumnsTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridViewDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NResizeColumnsToolSchema : Public, Static, InitOnly
  Methods:
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseDown(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Tools.NClickEditTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NClickEditToolSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ClickMouseButtonEventProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.ENMouseButtonEvent ClickMouseButtonEvent 'get set' : 
  Methods:
    OnMouseDown(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseUp(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    get_ClickMouseButtonEvent(): PrivateScope, Public, HideBySig, SpecialName
    set_ClickMouseButtonEvent(ENMouseButtonEvent): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.Tools.NGridTool: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridToolSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.INGridView OwnerGridView 'get ' : 
    Nevron.Nov.Grid.NGrid OwnerGrid 'get ' : 
  Methods:
    get_OwnerGridView(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerGrid(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.Tools.NSelectionNavigationTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Tools.NGridTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSelectionNavigationToolSchema : Public, Static, InitOnly
  Methods:
    OnKeyDown(NKeyEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Formats.NNevronBinaryGridFormat`2[TDoc,TDocContent]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TDoc, Nevron.Nov.Dom.NGenericDocument`1[TDocContent]
  Type parameter: TDocContent, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Grid.Formats.NGridFormat`2[TDoc,TDocContent]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String[] Extensions 'get ' : 
    System.String Mime 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Mime(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Nevron.Nov.Grid.Formats.NNevronXmlGridFormat`2[TDoc,TDocContent]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TDoc, Nevron.Nov.Dom.NGenericDocument`1[TDocContent]
  Type parameter: TDocContent, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Grid.Formats.NGridFormat`2[TDoc,TDocContent]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String[] Extensions 'get ' : 
    System.String Mime 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Mime(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Nevron.Nov.Grid.Formats.NGridFormat`2[TDoc,TDocContent]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TDoc, Nevron.Nov.Dom.NGenericDocument`1[TDocContent]
  Type parameter: TDocContent, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Dom.NDocumentFormat`3[TDoc,Nevron.Nov.Grid.Formats.NGridLoadSettings,Nevron.Nov.Grid.Formats.NGridSaveSettings]
Class Nevron.Nov.Grid.Formats.NGridFormatRegistry`2[TDoc,TDocContent]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: TDoc, Nevron.Nov.Dom.NGenericDocument`1[TDocContent]
  Type parameter: TDocContent, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Dom.NDocumentFormatRegistry`1[Nevron.Nov.Grid.Formats.NGridFormat`2[TDoc,TDocContent]]
  Fields:
    Nevron.Nov.Grid.Formats.NGridFormatRegistry`2[TDoc,TDocContent] Instance : Public, Static, InitOnly
Class Nevron.Nov.Grid.Formats.NGridLoadSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NDocumentLoadSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.Formats.NGridSaveSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NDocumentSaveSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.Commands.NColumnConditionalFormattingCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnConditionalFormattingCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnClearFiltersCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnClearFiltersCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnFormatCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnFormatCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnFilterCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnFilterCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnPropertiesCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnPropertiesCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnGroupByCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnGroupByCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnClearGroupingCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnClearGroupingCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnClearSortingCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnClearSortingCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NColumnSortingCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewToggleCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnSortingCommandActionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AscendingProperty : Public, Static, InitOnly
  Properties:
    Boolean Ascending 'get set' : 
  Methods:
    get_Ascending(): PrivateScope, Public, HideBySig, SpecialName
    set_Ascending(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    IsChecked(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NDeleteRowsCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDeleteRowsCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NPasteCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPasteCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NCopyCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCopyCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NCutCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCutCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NGridPropertiesCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridPropertiesCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NToggleRowHeadersCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewToggleCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NToggleRowHeadersCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    IsChecked(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NToggleColumnsCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewToggleCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NToggleColumnsCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    IsChecked(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NToggleGroupingPanelCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewToggleCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NToggleGroupingPanelCommandActionSchema : Public, Static, InitOnly
  Methods:
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    IsChecked(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NSelectionNavigationCommandAction: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Grid.Commands.NGridViewCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Grid.ENSelectionNavigationCommand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSelectionNavigationCommandActionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CommandProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.ENSelectionNavigationCommand Command 'get set' : 
  Methods:
    get_Command(): PrivateScope, Public, HideBySig, SpecialName
    set_Command(ENSelectionNavigationCommand): PrivateScope, Public, HideBySig, SpecialName
    GetCommand(): PrivateScope, Public, Virtual, HideBySig
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
    Execute(NNode, Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NGridViewCommandAction: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridViewCommandActionSchema : Public, Static, InitOnly
  Methods:
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Commands.NGridViewToggleCommandAction: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NToggleCommandAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridViewToggleCommandActionSchema : Public, Static, InitOnly
  Methods:
    IsEnabled(NNode): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.Editors.NFormattingRuleCollectionEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Editors.NGeneralEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormattingRuleCollectionEditorSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Grid.NFormattingRuleCollection EditedRules 'get ' : 
  Methods:
    get_EditedRules(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Grid.Editors.NFormattingRuleEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Editors.NGeneralEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormattingRuleEditorSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.Editors.NColumnFormatEdtior: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Editors.NGeneralEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnFormatEdtiorSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.Editors.NColumnRefPropertyEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Editors.NOptionsPropertyEditor`1[Nevron.Nov.Dom.NNodeRef]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColumnRefPropertyEditorSchema : Public, Static, InitOnly
    Nevron.Nov.Editors.NEditorTemplate ComboBoxTemplate : Public, Static, InitOnly
    Nevron.Nov.Editors.NEditorTemplate ListBoxTemplate : Public, Static, InitOnly
Class Nevron.Nov.Grid.Editors.NFieldNamePropertyEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Editors.NOptionsPropertyEditor`1[System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFieldNamePropertyEditorSchema : Public, Static, InitOnly
Class Nevron.Nov.Grid.Editors.NRowValuePropertyEditor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Editors.NDialogNodePropertyEditor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRowValuePropertyEditorSchema : Public, Static, InitOnly
    Nevron.Nov.Editors.NEditorTemplate DefaultTemplate : Public, Static, InitOnly
Class Nevron.Nov.Grid.NProgressBarColumnFormat+NProgressBarColumnFormatDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFontStyleDeclaration+NFontStyleDeclarationDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFontSizeDeclaration+NFontSizeDeclarationDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFontNameDeclaration+NFontNameDeclarationDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFormattingDeclarationCollection+NFormattingDeclarationCollectionDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCollectionChildrenTypes(NNode): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NFillDeclaration+NFillDeclarationDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFormattingRuleCollection+NFormattingRuleCollectionDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFormattingRule+NFormattingRuleDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NImageColumnFormat+NImageColumnFormatDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NColumnFormat+NColumnFormatDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NTextValueColumnFormat`1+NTextValueFormatDesigner[TValueFormatter]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: TValueFormatter, Nevron.Nov.Dom.NValueFormatter
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NEnumColumnFormat+NEnumColumnFormatDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NRowValueGridRule`1+NRowValueGridRuleDesigner[TGrid]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NGroupRowCondition+NCompositeRowConditionDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCollectionChildrenTypes(NNode): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRowCondition+NRowConditionDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCompatibleTypes(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NRowValueCondition+NRowValueConditionDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NColumnRowValue+NColumnRowValueDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFieldRowValue+NFieldRowValueDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NRowValue+NRowValueDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCompatibleTypes(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Grid.NOperatorRowCondition+NOperatorRowConditionDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NGridRule`1+NGridRuleDesigner[TGrid]: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Type parameter: TGrid, Nevron.Nov.Grid.NGrid
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NFilteringRule+NFilteringRuleDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NGrid+NGridDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NTableGrid+NTableGridDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NTreeGrid+NTreeGridDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NDataColumn+NDataColumnDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Grid.NColumn+NColumnDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Nevron.Nov.Grid.Tools.NClickAndDragColumnHeadersTool+ENDragColumnAction: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ENDragColumnAction None = 0 : Public, Static, Literal, HasDefault
    ENDragColumnAction Group = 1 : Public, Static, Literal, HasDefault
    ENDragColumnAction Reorder = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Grid.Tools.NClickAndDragGroupingHeadersTool+ENDragGroupingAction: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ENDragGroupingAction None = 0 : Public, Static, Literal, HasDefault
    ENDragGroupingAction Remove = 1 : Public, Static, Literal, HasDefault
    ENDragGroupingAction Reorder = 2 : Public, Static, Literal, HasDefault
