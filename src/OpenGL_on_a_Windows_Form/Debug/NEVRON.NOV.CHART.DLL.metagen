ImageRuntimeVersion: v4.0.30319
Assembly Nevron.Nov.Chart, Version=18.1.18.12, Culture=neutral, PublicKeyToken=b33b1a04bb5ca8ad: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e, Retargetable=Yes: 
	hash=None, flags=Retargetable
Assembly Nevron.Nov.Presentation, Version=18.1.18.12, Culture=neutral, PublicKeyToken=b33b1a04bb5ca8ad: 
	hash=None, flags=None
Class Nevron.Nov.Chart.NAxisElementCollection`1[NAxisElementType]: AutoLayout, AnsiClass, Class, Public
  Type parameter: NAxisElementType, Nevron.Nov.Chart.NAxisElement
  :Nevron.Nov.Dom.NElementCollection`1[NAxisElementType]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisElementCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NAxisStripeCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisElementCollection`1[Nevron.Nov.Chart.NAxisStripe]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisStripeCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NAxisElement: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NChartElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisElementSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaintAfterChartContentProperty : Public, Static, InitOnly
  Properties:
    System.String Text 'get set' : 
    Nevron.Nov.ENContentAlignment TextAlignment 'get set' : 
    Nevron.Nov.UI.NTextStyle TextStyle 'get set' : 
    Boolean PaintAfterChartContent 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlignment(ENContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_PaintAfterChartContent(): PrivateScope, Public, HideBySig, SpecialName
    set_PaintAfterChartContent(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAxisReferenceLineCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisElementCollection`1[Nevron.Nov.Chart.NAxisReferenceLine]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisReferenceLineCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NAxisStripe: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisStripeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IncludeRangeBeginInAxisRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IncludeRangeEndInAxisRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NRange Range 'get set' : 
    Boolean IncludeRangeBeginInAxisRange 'get set' : 
    Boolean IncludeRangeEndInAxisRange 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
  Methods:
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeRangeBeginInAxisRange(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeRangeBeginInAxisRange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeRangeEndInAxisRange(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeRangeEndInAxisRange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAxisReferenceLine: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisReferenceLineSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IncludeValueInAxisRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
  Properties:
    Double Value 'get set' : 
    Boolean IncludeValueInAxisRange 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeValueInAxisRange(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeValueInAxisRange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCartesianAxisAnchor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCartesianAxisAnchorSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NCrossCartesianAxisAnchor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NCartesianAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NCartesianAxis, Nevron.Nov.Chart.ENCartesianAxisOrientation, Nevron.Nov.Chart.ENScaleOrientation, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCrossCartesianAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AxisOrientationProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CrossAxisRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENCartesianAxisOrientation AxisOrientation 'get set' : 
    Nevron.Nov.Dom.NNodeRef CrossAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis CrossAxis 'get set' : 
  Methods:
    get_AxisOrientation(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisOrientation(ENCartesianAxisOrientation): PrivateScope, Public, HideBySig, SpecialName
    get_CrossAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_CrossAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_CrossAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_CrossAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDockCartesianAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCartesianAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone, Boolean, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCartesianAxisDockZone, Boolean, Nevron.Nov.Chart.ENScaleOrientation, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDockCartesianAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DockZoneProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateNewZoneLevelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeforeSpaceProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AfterSpaceProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENCartesianAxisDockZone DockZone 'get set' : 
    Double BeforeSpace 'get set' : 
    Double AfterSpace 'get set' : 
    Boolean CreateNewZoneLevel 'get set' : 
  Methods:
    get_DockZone(): PrivateScope, Public, HideBySig, SpecialName
    set_DockZone(ENCartesianAxisDockZone): PrivateScope, Public, HideBySig, SpecialName
    get_BeforeSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_BeforeSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AfterSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CreateNewZoneLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateNewZoneLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NModelCrossCartesianAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCrossCartesianAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Nevron.Nov.Chart.ENAxisCrossAlignment, Nevron.Nov.Chart.NCartesianAxis, Nevron.Nov.Chart.ENCartesianAxisOrientation, Nevron.Nov.Chart.ENScaleOrientation, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NModelCrossCartesianAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlignmentProperty : Public, Static, InitOnly
  Properties:
    Double Offset 'get set' : 
    Nevron.Nov.Chart.ENAxisCrossAlignment Alignment 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(ENAxisCrossAlignment): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NValueCrossCartesianAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCrossCartesianAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Nevron.Nov.Chart.NCartesianAxis, Nevron.Nov.Chart.ENCartesianAxisOrientation, Nevron.Nov.Chart.ENScaleOrientation, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueCrossCartesianAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
  Properties:
    Double Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRadialChart: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NPlotChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadialChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SweepAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerRadiusProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.NAngle BeginAngle 'get set' : 
    Nevron.Nov.NAngle SweepAngle 'get set' : 
    Double InnerRadius 'get set' : 
  Methods:
    get_BeginAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginAngle(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_SweepAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepAngle(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_InnerRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    AccumulateDisplayChildren(NDisplayVisitor, NList`1): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRadarAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseCustomAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomAngleProperty : Public, Static, InitOnly
  Properties:
    Boolean UseCustomAngle 'get set' : 
    Nevron.Nov.NAngle CustomAngle 'get set' : 
  Methods:
    get_UseCustomAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_UseCustomAngle(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CustomAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomAngle(NAngle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRadarAxisCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Chart.NRadarAxis]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarAxisCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NRadarAxis: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NChartAxis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarAxisSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AnchorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleMaxWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitlePositionModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleAutomaticAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TitleTextStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NRadarAxisAnchor Anchor 'get set' : 
    System.String Title 'get set' : 
    Double TitleOffset 'get set' : 
    Double TitleMaxWidth 'get set' : 
    Nevron.Nov.Chart.ENRadarTitlePositionMode TitlePositionMode 'get set' : 
    Nevron.Nov.Chart.NScaleLabelAngle TitleAngle 'get set' : 
    Boolean TitleAutomaticAlignment 'get set' : 
    Nevron.Nov.UI.NTextStyle TitleTextStyle 'get set' : 
  Methods:
    get_Anchor(): PrivateScope, Public, HideBySig, SpecialName
    set_Anchor(NRadarAxisAnchor): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TitleMaxWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleMaxWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TitlePositionMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TitlePositionMode(ENRadarTitlePositionMode): PrivateScope, Public, HideBySig, SpecialName
    get_TitleAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleAngle(NScaleLabelAngle): PrivateScope, Public, HideBySig, SpecialName
    get_TitleAutomaticAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleAutomaticAlignment(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleTextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRadarChart: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NRadialChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RadarModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild AxesChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENRadarMode RadarMode 'get set' : 
    Nevron.Nov.Chart.NRadarAxisCollection Axes 'get set' : 
  Methods:
    get_RadarMode(): PrivateScope, Public, HideBySig, SpecialName
    set_RadarMode(ENRadarMode): PrivateScope, Public, HideBySig, SpecialName
    get_Axes(): PrivateScope, Public, HideBySig, SpecialName
    set_Axes(NRadarAxisCollection): PrivateScope, Public, HideBySig, SpecialName
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NTreeMapNodeCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NVisualCollection`1[Nevron.Nov.Chart.NTreeMapNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTreeMapNodeCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NCartesianAxis: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NChartAxis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCartesianAxisSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AnchorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowScrollbarWhenZoomedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoScrollbarSmallChangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoSmallChangeStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinAutoSmallChangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ScrollbarTransformChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NCartesianAxisAnchor Anchor 'get set' : 
    Boolean ShowScrollbarWhenZoomed 'get set' : 
    Boolean AutoScrollbarSmallChange 'get set' : 
    Int32 AutoSmallChangeSteps 'get set' : 
    Double MinAutoSmallChange 'get set' : 
    Nevron.Nov.UI.NHRangeScrollBar Scrollbar 'get ' : 
  Methods:
    get_Anchor(): PrivateScope, Public, HideBySig, SpecialName
    set_Anchor(NCartesianAxisAnchor): PrivateScope, Public, HideBySig, SpecialName
    get_ShowScrollbarWhenZoomed(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowScrollbarWhenZoomed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoScrollbarSmallChange(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoScrollbarSmallChange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSmallChangeSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSmallChangeSteps(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinAutoSmallChange(): PrivateScope, Public, HideBySig, SpecialName
    set_MinAutoSmallChange(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Scrollbar(): PrivateScope, Public, HideBySig, SpecialName
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NCartesianAxisCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Chart.NCartesianAxis]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCartesianAxisCollectionSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NCartesianAxis Item [Nevron.Nov.Chart.ENCartesianAxis] 'get ' : 
  Methods:
    get_Item(ENCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
    GetFirstAxisWithOrientation(ENCartesianAxisOrientation): PrivateScope, Public, HideBySig
    GetSecondAxisWithOrientation(ENCartesianAxisOrientation): PrivateScope, Public, HideBySig
    GetAxisWithOrientation(ENCartesianAxisOrientation, Int32): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NCartesianChart: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPlotChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENPredefinedCartesianAxis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCartesianChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild AxesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AspectProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FitModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OrientationProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild VisualAidsChild : Public, Static, InitOnly
    Nevron.Nov.Chart.ENCartesianChartFitMode defaultCartesianChartFitMode : Public, Static, InitOnly
    Double defaultAspect : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NCartesianAxisCollection Axes 'get set' : 
    Nevron.Nov.Chart.ENCartesianChartFitMode FitMode 'get set' : 
    Double Aspect 'get set' : 
    Nevron.Nov.Chart.ENCartesianChartOrientation Orientation 'get set' : 
    Nevron.Nov.Chart.NVisualAidCollection VisualAids 'get set' : 
    Nevron.Nov.Graphics.NRectangle ViewPlotBounds 'get ' : 
  Methods:
    get_Axes(): PrivateScope, Public, HideBySig, SpecialName
    set_Axes(NCartesianAxisCollection): PrivateScope, Public, HideBySig, SpecialName
    get_FitMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FitMode(ENCartesianChartFitMode): PrivateScope, Public, HideBySig, SpecialName
    get_Aspect(): PrivateScope, Public, HideBySig, SpecialName
    set_Aspect(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    set_Orientation(ENCartesianChartOrientation): PrivateScope, Public, HideBySig, SpecialName
    get_VisualAids(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualAids(NVisualAidCollection): PrivateScope, Public, HideBySig, SpecialName
    get_ViewPlotBounds(): PrivateScope, Public, HideBySig, SpecialName
    SetPredefinedCartesianAxes(ENPredefinedCartesianAxis): PrivateScope, Public, HideBySig
    AddCustomAxis(ENCartesianAxisOrientation): PrivateScope, Public, HideBySig
    CreateDockedAxis(ENCartesianAxisDockZone, ENScaleType): PrivateScope, Public, Static, HideBySig
    TransformLogicalToView(NPoint, NCartesianAxis, NCartesianAxis): PrivateScope, Public, HideBySig
    TansformViewToLogical(NPoint, NCartesianAxis, NCartesianAxis): PrivateScope, Public, HideBySig
    TransformModelToView(NPoint): PrivateScope, Public, HideBySig
    TransformViewToModel(NPoint): PrivateScope, Public, HideBySig
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
    AccumulateDisplayChildren(NDisplayVisitor, NList`1): PrivateScope, Public, Virtual, HideBySig
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NFunnelChart: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NSeriesChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFunnelChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinSpiderLabelDistanceProperty : Public, Static, InitOnly
  Methods:
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPieChart: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NSeriesChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPieChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginRadiusPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndRadiusPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SweepAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DockSpiderLabelsToSidesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinSpiderLabelDistanceProperty : Public, Static, InitOnly
  Properties:
    Boolean DockSpiderLabelsToSides 'get set' : 
    Double MinSpiderLabelDistance 'get set' : 
    Double BeginRadiusPercent 'get set' : 
    Double EndRadiusPercent 'get set' : 
    Double BeginAngle 'get set' : 
    Double SweepAngle 'get set' : 
  Methods:
    get_DockSpiderLabelsToSides(): PrivateScope, Public, HideBySig, SpecialName
    set_DockSpiderLabelsToSides(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinSpiderLabelDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSpiderLabelDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BeginRadiusPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginRadiusPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndRadiusPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_EndRadiusPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BeginAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SweepAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NCrossPolarAxisAnchor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NPolarAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NPolarAxis, Nevron.Nov.Chart.ENPolarAxisOrientation, Nevron.Nov.Chart.ENScaleOrientation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCrossPolarAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AxisOrientationProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CrossAxisRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENPolarAxisOrientation AxisOrientation 'get set' : 
    Nevron.Nov.Dom.NNodeRef CrossAxisRef 'get set' : 
    Nevron.Nov.Chart.NPolarAxis CrossAxis 'get set' : 
  Methods:
    get_AxisOrientation(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisOrientation(ENPolarAxisOrientation): PrivateScope, Public, HideBySig, SpecialName
    get_CrossAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_CrossAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_CrossAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_CrossAxis(NPolarAxis): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDockPolarAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPolarAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENPolarAxisDockZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENPolarAxisDockZone, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENPolarAxisDockZone, Boolean, Nevron.Nov.Chart.ENScaleOrientation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDockPolarAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DockZoneProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateNewZoneLevelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeforeSpaceProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AfterSpaceProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENPolarAxisDockZone DockZone 'get set' : 
    Double BeforeSpace 'get set' : 
    Double AfterSpace 'get set' : 
    Boolean CreateNewZoneLevel 'get set' : 
  Methods:
    get_DockZone(): PrivateScope, Public, HideBySig, SpecialName
    set_DockZone(ENPolarAxisDockZone): PrivateScope, Public, HideBySig, SpecialName
    get_BeforeSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_BeforeSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AfterSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CreateNewZoneLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateNewZoneLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NModelCrossPolarAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCrossPolarAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Nevron.Nov.Chart.ENAxisCrossAlignment, Nevron.Nov.Chart.NPolarAxis, Nevron.Nov.Chart.ENPolarAxisOrientation, Nevron.Nov.Chart.ENScaleOrientation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NModelCrossPolarAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlignmentProperty : Public, Static, InitOnly
  Properties:
    Double Offset 'get set' : 
    Nevron.Nov.Chart.ENAxisCrossAlignment Alignment 'get set' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(ENAxisCrossAlignment): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPolarAxisAnchor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaintReflectionProperty : Public, Static, InitOnly
Class Nevron.Nov.Chart.NValueCrossPolarAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCrossPolarAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Nevron.Nov.Chart.NPolarAxis, Nevron.Nov.Chart.ENPolarAxisOrientation, Nevron.Nov.Chart.ENScaleOrientation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueCrossPolarAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
  Properties:
    Double Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPolarAxis: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NChartAxis
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarAxisSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AnchorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaintReflectionProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NPolarAxisAnchor Anchor 'get set' : 
    Boolean PaintReflection 'get set' : 
  Methods:
    get_Anchor(): PrivateScope, Public, HideBySig, SpecialName
    set_Anchor(NPolarAxisAnchor): PrivateScope, Public, HideBySig, SpecialName
    get_PaintReflection(): PrivateScope, Public, HideBySig, SpecialName
    set_PaintReflection(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPolarAxisCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Chart.NPolarAxis]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarAxisCollectionSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NPolarAxis Item [Nevron.Nov.Chart.ENPolarAxis] 'get ' : 
  Methods:
    get_Item(ENPolarAxis): PrivateScope, Public, HideBySig, SpecialName
    GetFirstAxisWithOrientation(ENPolarAxisOrientation): PrivateScope, Public, HideBySig
    GetSecondAxisWithOrientation(ENPolarAxisOrientation): PrivateScope, Public, HideBySig
    GetAxisWithOrientation(ENPolarAxisOrientation, Int32): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NPolarChart: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NRadialChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild AxesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DockZonesOffsetProperty : Public, Static, InitOnly
  Properties:
    Double DockZonesOffset 'get set' : 
    Nevron.Nov.Chart.NPolarAxisCollection Axes 'get set' : 
  Methods:
    get_DockZonesOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_DockZonesOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Axes(): PrivateScope, Public, HideBySig, SpecialName
    set_Axes(NPolarAxisCollection): PrivateScope, Public, HideBySig, SpecialName
    SetPredefinedPolarAxes(ENPredefinedPolarAxes): PrivateScope, Public, HideBySig
    AddCustomAxis(ENPolarAxisOrientation): PrivateScope, Public, HideBySig
    CreateDockedAngleAxis(ENPolarAxisDockZone): PrivateScope, Public, Static, HideBySig
    CreateDockedAxis(ENPolarAxisDockZone, ENScaleType): PrivateScope, Public, Static, HideBySig
    CreateCrosseddAxis(ENScaleType): PrivateScope, Public, HideBySig
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NGroupTreeMapNode: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTreeMapNode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupTreeMapNodeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ChildNodesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SortOrderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalFillModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalFillModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ChangePaletteModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LegendViewProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NTreeMapNodeCollection ChildNodes 'get set' : 
    Nevron.Nov.Chart.ENTreeMapNodeSortOrder SortOrder 'get set' : 
    Nevron.Nov.Chart.ENTreeMapHorizontalFillMode HorizontalFillMode 'get set' : 
    Nevron.Nov.Chart.ENTreeMapVerticalFillMode VerticalFillMode 'get set' : 
    Nevron.Nov.Chart.ENChangePaletteMode ChangePaletteMode 'get set' : 
    Nevron.Nov.Chart.NPalette Palette 'get set' : 
    Nevron.Nov.Chart.NGroupTreeMapNodeLegendView LegendView 'get set' : 
  Methods:
    get_ChildNodes(): PrivateScope, Public, HideBySig, SpecialName
    set_ChildNodes(NTreeMapNodeCollection): PrivateScope, Public, HideBySig, SpecialName
    get_SortOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_SortOrder(ENTreeMapNodeSortOrder): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalFillMode(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalFillMode(ENTreeMapHorizontalFillMode): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalFillMode(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalFillMode(ENTreeMapVerticalFillMode): PrivateScope, Public, HideBySig, SpecialName
    get_ChangePaletteMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ChangePaletteMode(ENChangePaletteMode): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(NPalette): PrivateScope, Public, HideBySig, SpecialName
    get_LegendView(): PrivateScope, Public, HideBySig, SpecialName
    set_LegendView(NGroupTreeMapNodeLegendView): PrivateScope, Public, HideBySig, SpecialName
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig
    ArrangeCore(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NTreeMapNode: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NInputElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Dom.INMeasureElement
    Nevron.Nov.Dom.INArrangeElement
  Fields:
    Nevron.Nov.Dom.NSchema NTreeMapNodeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoundsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelTextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FormatProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelFitModesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinAutoScaleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarginsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BorderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BorderThicknessProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BackgroundFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NTextStyle LabelTextStyle 'get set' : 
    System.String Label 'get set' : 
    System.String Format 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode] LabelFitModes 'get set' : 
    Double MinAutoScale 'get set' : 
    Nevron.Nov.Graphics.NMargins Margins 'get set' : 
    Nevron.Nov.Graphics.NMargins Padding 'get set' : 
    Nevron.Nov.UI.NBorder Border 'get set' : 
    Nevron.Nov.Graphics.NMargins BorderThickness 'get set' : 
    Nevron.Nov.Graphics.NFill BackgroundFill 'get set' : 
    Nevron.Nov.Graphics.NRectangle Bounds 'get set' : 
    Nevron.Nov.Dom.NValueFormatter PercentValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter ValueFormatter 'get set' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForMeasure 'get ' : 
    Boolean IsPooledForArrange 'get ' : 
    Boolean IsArrangeValid 'get ' : 
  Methods:
    get_LabelTextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelTextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_LabelFitModes(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelFitModes(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_MinAutoScale(): PrivateScope, Public, HideBySig, SpecialName
    set_MinAutoScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Margins(): PrivateScope, Public, HideBySig, SpecialName
    set_Margins(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_Padding(): PrivateScope, Public, HideBySig, SpecialName
    set_Padding(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(NBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, HideBySig, SpecialName
    set_Bounds(NRectangle): PrivateScope, Public, HideBySig, SpecialName
    get_PercentValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_PercentValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsPooledForArrange(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArrangeValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateArrange(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ValidateArrange(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ArrangeCore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetContentEdge(): PrivateScope, Public, HideBySig
    GetBorderEdge(): PrivateScope, Public, HideBySig
    GetPaddingEdge(): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NValueTreeMapNode: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTreeMapNode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, System.String, Nevron.Nov.Graphics.NFill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueTreeMapNodeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ChangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ChangeValueTypeProperty : Public, Static, InitOnly
  Properties:
    Double Value 'get set' : 
    Double Change 'get set' : 
    Nevron.Nov.Chart.ENChangeValueType ChangeValueType 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Change(): PrivateScope, Public, HideBySig, SpecialName
    set_Change(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ChangeValueType(): PrivateScope, Public, HideBySig, SpecialName
    set_ChangeValueType(ENChangeValueType): PrivateScope, Public, HideBySig, SpecialName
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig
    ArrangeCore(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NTreeMapChart: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.ИШк
  Fields:
    Nevron.Nov.Dom.NSchema NTreeMapChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RootTreeMapNodeChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NTreeMapNode RootTreeMapNode 'get set' : 
  Methods:
    get_RootTreeMapNode(): PrivateScope, Public, HideBySig, SpecialName
    set_RootTreeMapNode(NTreeMapNode): PrivateScope, Public, HideBySig, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NSeriesChart: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.нИг
  Fields:
    Nevron.Nov.Dom.NSchema NSeriesChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SeriesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ContentChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelLayoutProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HitTestModeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NWidget Content 'get set' : 
    Nevron.Nov.Chart.NSeriesCollection Series 'get set' : 
    Nevron.Nov.Chart.NChartLabelLayout LabelLayout 'get set' : 
    Nevron.Nov.Chart.ENHitTestMode HitTestMode 'get set' : 
  Methods:
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(NWidget): PrivateScope, Public, HideBySig, SpecialName
    get_Series(): PrivateScope, Public, HideBySig, SpecialName
    set_Series(NSeriesCollection): PrivateScope, Public, HideBySig, SpecialName
    get_LabelLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelLayout(NChartLabelLayout): PrivateScope, Public, HideBySig, SpecialName
    get_HitTestMode(): PrivateScope, Public, HideBySig, SpecialName
    set_HitTestMode(ENHitTestMode): PrivateScope, Public, HideBySig, SpecialName
    AccumulateDisplayChildren(NDisplayVisitor, NList`1): PrivateScope, Public, Virtual, HideBySig
    InvalidateMeasure(Object): PrivateScope, Public, Virtual, HideBySig
    InvalidateDisplay(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NChart: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LegendRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NNodeRef LegendRef 'get set' : 
    Nevron.Nov.Chart.NLegend Legend 'get set' : 
  Methods:
    get_LegendRef(): PrivateScope, Public, HideBySig, SpecialName
    set_LegendRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_Legend(): PrivateScope, Public, HideBySig, SpecialName
    set_Legend(NLegend): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NChartAxis: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NAxisBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartAxisSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ViewRangeModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnablePageRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PageRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RulerRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinViewRangeValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxViewRangeValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinPageRangeLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinMarginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxMarginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PreferredMarginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ClipModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SynchronizedAxesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild StripesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ReferenceLinesChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NRange ContentRange 'get ' : 
    Nevron.Nov.Graphics.NRange ViewRange 'get ' : 
    Nevron.Nov.Chart.ENAxisViewRangeMode ViewRangeMode 'get set' : 
    Boolean EnablePageRange 'get set' : 
    Double MinPageRangeLength 'get set' : 
    Nevron.Nov.Graphics.NRange PageRange 'get set' : 
    Double MinViewRangeValue 'get set' : 
    Double MaxViewRangeValue 'get set' : 
    Nevron.Nov.Graphics.NRange MinMargin 'get set' : 
    Nevron.Nov.Graphics.NRange MaxMargin 'get set' : 
    Nevron.Nov.Chart.ENAxisClipMode ClipMode 'get set' : 
    Nevron.Nov.Chart.NAxisStripeCollection Stripes 'get set' : 
    Nevron.Nov.Chart.NAxisReferenceLineCollection ReferenceLines 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Dom.NNodeRef] SynchronizedAxes 'get set' : 
  Methods:
    get_ContentRange(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewRange(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewRangeMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewRangeMode(ENAxisViewRangeMode): PrivateScope, Public, HideBySig, SpecialName
    get_EnablePageRange(): PrivateScope, Public, HideBySig, SpecialName
    set_EnablePageRange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinPageRangeLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MinPageRangeLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PageRange(): PrivateScope, Public, HideBySig, SpecialName
    set_PageRange(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_MinViewRangeValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MinViewRangeValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxViewRangeValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxViewRangeValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinMargin(): PrivateScope, Public, HideBySig, SpecialName
    set_MinMargin(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_MaxMargin(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxMargin(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_ClipMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ClipMode(ENAxisClipMode): PrivateScope, Public, HideBySig, SpecialName
    get_Stripes(): PrivateScope, Public, HideBySig, SpecialName
    set_Stripes(NAxisStripeCollection): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLines(NAxisReferenceLineCollection): PrivateScope, Public, HideBySig, SpecialName
    get_SynchronizedAxes(): PrivateScope, Public, HideBySig, SpecialName
    set_SynchronizedAxes(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    Scroll(Double): PrivateScope, Public, HideBySig
    ZoomIn(NRange): PrivateScope, Public, HideBySig
    ZoomOut(NRange): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NPlotChart: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NSeriesChart
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPlotChartSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PlotFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PlotBorderProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NFill PlotFill 'get set' : 
    Nevron.Nov.Graphics.NStroke PlotBorder 'get set' : 
  Methods:
    get_PlotFill(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_PlotBorder(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotBorder(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NChartElement: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.UI.INInputNode
  Fields:
    Nevron.Nov.Dom.NSchema NChartElementSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnabledProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsDisabledProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowFocusProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowMouseCaptureProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowTouchCaptureProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowDropProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TabStopProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TabIndexProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TooltipProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CursorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InteractorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CommanderProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NWindow DisplayWindow 'get ' : 
    Boolean IsFocused 'get ' : 
    Boolean IsMouseCaptured 'get ' : 
    Boolean Enabled 'get set' : 
    Boolean IsDisabled 'get ' : 
    Boolean AllowFocus 'get set' : 
    Boolean AllowMouseCapture 'get set' : 
    Boolean AllowTouchCapture 'get set' : 
    Boolean AllowDrop 'get set' : 
    Nevron.Nov.UI.NCursor Cursor 'get set' : 
    Nevron.Nov.UI.NTooltip Tooltip 'get set' : 
    Nevron.Nov.UI.NInteractor Interactor 'get set' : 
    Nevron.Nov.UI.NCommander Commander 'get set' : 
    Boolean TabStop 'get set' : 
    Int32 TabIndex 'get set' : 
    Nevron.Nov.UI.NWindow OwnerWindow 'get ' : 
    Nevron.Nov.UI.NDesktop OwnerDesktop 'get ' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseEventArgs] MouseMove: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseButtonEventArgs] MouseDown: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseButtonEventArgs] MouseUp: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseWheelEventArgs] MouseWheel: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseOverChangeEventArgs] MouseEnter: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseOverChangeEventArgs] MouseIn: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseOverChangeEventArgs] MouseOut: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseOverChangeEventArgs] MouseLeave: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseCaptureChangeEventArgs] GotMouseCapture: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseCaptureChangeEventArgs] CaptureIn: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseCaptureChangeEventArgs] CaptureOut: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NMouseCaptureChangeEventArgs] LostMouseCapture: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NKeyEventArgs] KeyDown: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NKeyEventArgs] KeyUp: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NInputCharEventArgs] InputChar: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NFocusChangeEventArgs] GotFocus: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NFocusChangeEventArgs] FocusIn: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NFocusChangeEventArgs] FocusOut: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NFocusChangeEventArgs] LostFocus: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NDragActionEventArgs] DragOver: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NDragActionEventArgs] DragDrop: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NDragOverChangeEventArgs] DragEnter: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NDragOverChangeEventArgs] DragIn: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NDragOverChangeEventArgs] DragOut: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NDragOverChangeEventArgs] DragLeave: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NQueryCommandTargetEventArgs] QueryCommandTarget: 
  Methods:
    CanFocus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Focus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanCaptureMouse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CaptureMouse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReleaseMouseCapture(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanCaptureTouch(NTouchDevice): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CaptureTouch(NTouchDevice): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReleaseTouchCapture(NTouchDevice): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsTabStop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTabIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsFocused(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseCaptured(): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisabled(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowFocus(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowFocus(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowMouseCapture(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowMouseCapture(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowTouchCapture(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowTouchCapture(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowDrop(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowDrop(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(NCursor): PrivateScope, Public, HideBySig, SpecialName
    get_Tooltip(): PrivateScope, Public, HideBySig, SpecialName
    set_Tooltip(NTooltip): PrivateScope, Public, HideBySig, SpecialName
    get_Interactor(): PrivateScope, Public, HideBySig, SpecialName
    set_Interactor(NInteractor): PrivateScope, Public, HideBySig, SpecialName
    get_Commander(): PrivateScope, Public, HideBySig, SpecialName
    set_Commander(NCommander): PrivateScope, Public, HideBySig, SpecialName
    get_TabStop(): PrivateScope, Public, HideBySig, SpecialName
    set_TabStop(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TabIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_TabIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerWindow(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerDesktop(): PrivateScope, Public, HideBySig, SpecialName
    DestroyGestureManager(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_MouseMove(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseMove(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseDown(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseDown(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseUp(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseUp(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseWheel(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseWheel(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseEnter(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseEnter(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_MouseLeave(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MouseLeave(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_GotMouseCapture(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_GotMouseCapture(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_CaptureIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CaptureIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_CaptureOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_CaptureOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_LostMouseCapture(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LostMouseCapture(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_KeyDown(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_KeyDown(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_KeyUp(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_KeyUp(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_InputChar(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_InputChar(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_GotFocus(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_GotFocus(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_FocusIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_FocusIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_FocusOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_FocusOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_LostFocus(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LostFocus(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_DragOver(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DragOver(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_DragDrop(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DragDrop(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_DragEnter(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DragEnter(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_DragIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DragIn(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_DragOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DragOut(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_DragLeave(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DragLeave(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_QueryCommandTarget(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_QueryCommandTarget(Function`1): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayWindow(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Nevron.Nov.Chart.NColorValuePalette: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPalette
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NColorValuePair[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NColorValuePaletteSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ColorValuePairsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.NColorValuePair] ColorValuePairs 'get set' : 
  Methods:
    get_ColorValuePairs(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorValuePairs(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NThreeColorPalette: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTwoColorPalette
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NThreeColorPaletteSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginValueProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NColor OriginColor 'get set' : 
    Double OriginValue 'get set' : 
  Methods:
    get_OriginColor(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_OriginValue(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginValue(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NTwoColorPalette: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPalette
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTwoColorPaletteSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndColorProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NColor BeginColor 'get set' : 
    Nevron.Nov.Graphics.NColor EndColor 'get set' : 
  Methods:
    get_BeginColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_EndColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EndColor(NColor): PrivateScope, Public, HideBySig, SpecialName
Struct Nevron.Nov.Chart.NColorValuePair: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Serialization.INDomCustomSerializable
  Properties:
    Double Value 'get set' : 
    Nevron.Nov.Graphics.NColor Color 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(NColor): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPalette: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPaletteSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SmoothColorsProperty : Public, Static, InitOnly
  Properties:
    Boolean SmoothColors 'get set' : 
  Methods:
    get_SmoothColors(): PrivateScope, Public, HideBySig, SpecialName
    set_SmoothColors(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NX2Y2DataPoint: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NX2Y2DataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty X2Property : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty Y2Property : Public, Static, InitOnly
  Properties:
    Double X2  'get set' : 
    Double Y2  'get set' : 
  Methods:
    get_X2(): PrivateScope, Public, HideBySig, SpecialName
    set_X2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y2(): PrivateScope, Public, HideBySig, SpecialName
    set_Y2(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCartesianSeries: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCartesianSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalAxisRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NNodeRef HorizontalAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis HorizontalAxis 'get set' : 
    Nevron.Nov.Dom.NNodeRef VerticalAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis VerticalAxis 'get set' : 
  Methods:
    get_HorizontalAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDataPoint: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NChartElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DataLabelStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
  Properties:
    Double Value 'get set' : 
    Double Y   'get set' : 
    System.String Label 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Chart.NDataLabelStyle DataLabelStyle 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(String): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DataLabelStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DataLabelStyle(NDataLabelStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDataPointCollection`1[TDataPoint]: AutoLayout, AnsiClass, Class, Public
  Type parameter: TDataPoint, Nevron.Nov.Chart.NDataPoint
  :Nevron.Nov.Dom.NElementCollection`1[TDataPoint]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataPointCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NXYCartesianSeries: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NXYCartesianSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseXValuesProperty : Public, Static, InitOnly
  Properties:
    Boolean UseXValues 'get set' : 
  Methods:
    get_UseXValues(): PrivateScope, Public, HideBySig, SpecialName
    set_UseXValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NXYDataPoint: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NXYDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XProperty : Public, Static, InitOnly
  Properties:
    Double X   'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPriceChangeSeries: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.вЫк
    Nevron.Nov.Chart.INValueTransform
  Fields:
    Nevron.Nov.Dom.NSchema NPriceChangeSeriesSchema : Public, Static, InitOnly
  Methods:
    GetSyncRangeSampler(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsDateTimeScaledOnAxis(NAxisBase): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Transform(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Chart.NThreeLineBreakDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NThreeLineBreakDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NThreeLineBreakSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPriceChangeSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NThreeLineBreakSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoxWidthPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NumberOfLinesToBreakProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NThreeLineBreakDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Graphics.NStroke UpStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke DownStroke 'get set' : 
    Nevron.Nov.Graphics.NFill UpFill 'get set' : 
    Nevron.Nov.Graphics.NFill DownFill 'get set' : 
    Double BoxWidthPercent 'get set' : 
    Int32 NumberOfLinesToBreak 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_UpStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_UpStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DownStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_DownStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_UpFill(): PrivateScope, Public, HideBySig, SpecialName
    set_UpFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_DownFill(): PrivateScope, Public, HideBySig, SpecialName
    set_DownFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_BoxWidthPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxWidthPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfLinesToBreak(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfLinesToBreak(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NHighLowDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHighLowDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowValueProperty : Public, Static, InitOnly
  Properties:
    Double HighValue 'get set' : 
    Double LowValue 'get set' : 
  Methods:
    get_HighValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HighValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_LowValue(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NHighLowSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHighLowSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HighStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HighFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AppearanceModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowDropLinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HighLegendNameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowLegendNameProperty : Public, Static, InitOnly
  Properties:
    Boolean ShowDropLines 'get set' : 
    Nevron.Nov.Chart.ENHighLowAppearanceMode AppearanceMode 'get set' : 
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NHighLowDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Graphics.NStroke HighStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke LowStroke 'get set' : 
    Nevron.Nov.Graphics.NFill HighFill 'get set' : 
    Nevron.Nov.Graphics.NFill LowFill 'get set' : 
    Nevron.Nov.Chart.NPalette Palette 'get set' : 
    System.String HighLegendName 'get set' : 
    System.String LowLegendName 'get set' : 
  Methods:
    get_ShowDropLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowDropLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AppearanceMode(): PrivateScope, Public, HideBySig, SpecialName
    set_AppearanceMode(ENHighLowAppearanceMode): PrivateScope, Public, HideBySig, SpecialName
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_HighStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HighStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_LowStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_LowStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_HighFill(): PrivateScope, Public, HideBySig, SpecialName
    set_HighFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_LowFill(): PrivateScope, Public, HideBySig, SpecialName
    set_LowFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(NPalette): PrivateScope, Public, HideBySig, SpecialName
    get_HighLegendName(): PrivateScope, Public, HideBySig, SpecialName
    set_HighLegendName(String): PrivateScope, Public, HideBySig, SpecialName
    get_LowLegendName(): PrivateScope, Public, HideBySig, SpecialName
    set_LowLegendName(String): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NGridData: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGridDataSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValuesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginYProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StepXProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StepYProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NSizeI Size 'get set' : 
    Double OriginX 'get set' : 
    Double OriginY 'get set' : 
    Double StepX 'get set' : 
    Double StepY 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Double] Values 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(NSizeI): PrivateScope, Public, HideBySig, SpecialName
    get_OriginX(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OriginY(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StepX(): PrivateScope, Public, HideBySig, SpecialName
    set_StepX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StepY(): PrivateScope, Public, HideBySig, SpecialName
    set_StepY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    SetValue(Int32, Int32, Double): PrivateScope, Public, HideBySig
    GetValue(Int32, Int32): PrivateScope, Public, HideBySig
    SetRange(Int32, Int32, Double[,]): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NHeatMapSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHeatMapSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DataProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContourStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContourDisplayModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContourColorModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContourDotSizeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NPalette Palette 'get set' : 
    Nevron.Nov.Chart.NGridData Data 'get set' : 
    Boolean ShowFill 'get set' : 
    Nevron.Nov.Graphics.NStroke ContourStroke 'get set' : 
    Nevron.Nov.Chart.ENContourDisplayMode ContourDisplayMode 'get set' : 
    Nevron.Nov.Chart.ENContourColorMode ContourColorMode 'get set' : 
    Nevron.Nov.Graphics.NSize ContourDotSize 'get set' : 
  Methods:
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(NPalette): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(NGridData): PrivateScope, Public, HideBySig, SpecialName
    get_ShowFill(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowFill(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ContourStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_ContourStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_ContourDisplayMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ContourDisplayMode(ENContourDisplayMode): PrivateScope, Public, HideBySig, SpecialName
    get_ContourColorMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ContourColorMode(ENContourColorMode): PrivateScope, Public, HideBySig, SpecialName
    get_ContourDotSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ContourDotSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NBarSeriesBase: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBarSeriesBaseSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GapFactorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENBarWidthMode WidthMode 'get set' : 
    Double GapFactor 'get set' : 
    Double Width 'get set' : 
  Methods:
    get_WidthMode(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthMode(ENBarWidthMode): PrivateScope, Public, HideBySig, SpecialName
    get_GapFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_GapFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NBoxAndWhiskerDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Double, Double[], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Double, Double[], Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBoxAndWhiskerDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowerBoxValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MedianValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AverageValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpperWhiskerValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowerWhiskerValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AverageStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MedianStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutlierStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutlierFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutliersProperty : Public, Static, InitOnly
  Properties:
    Double LowerBoxValue 'get set' : 
    Double UpperBoxValue 'get set' : 
    Double MedianValue 'get set' : 
    Double AverageValue 'get set' : 
    Double UpperWhiskerValue 'get set' : 
    Double LowerWhiskerValue 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Double] Outliers 'get set' : 
    Nevron.Nov.Graphics.NStroke AverageStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke MedianStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke OutlierStroke 'get set' : 
    Nevron.Nov.Graphics.NFill OutlierFill 'get set' : 
  Methods:
    get_LowerBoxValue(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerBoxValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UpperBoxValue(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperBoxValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MedianValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MedianValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AverageValue(): PrivateScope, Public, HideBySig, SpecialName
    set_AverageValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UpperWhiskerValue(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperWhiskerValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LowerWhiskerValue(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerWhiskerValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Outliers(): PrivateScope, Public, HideBySig, SpecialName
    set_Outliers(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_AverageStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_AverageStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_MedianStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_MedianStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_OutlierStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_OutlierStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_OutlierFill(): PrivateScope, Public, HideBySig, SpecialName
    set_OutlierFill(NFill): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NBoxAndWhiskerSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NBarSeriesBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBoxAndWhiskerSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WhiskerWidthPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutlierSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AverageStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MedianStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowAverageProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowMedianProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutlierStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutlierFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WhiskerValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NBoxAndWhiskerDataPoint] DataPoints 'get set' : 
    Double WhiskerWidthPercent 'get set' : 
    Nevron.Nov.Graphics.NSize OutlierSize 'get set' : 
    Nevron.Nov.Graphics.NStroke AverageStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke MedianStroke 'get set' : 
    Boolean ShowAverage 'get set' : 
    Boolean ShowMedian 'get set' : 
    Nevron.Nov.Graphics.NStroke OutlierStroke 'get set' : 
    Nevron.Nov.Graphics.NFill OutlierFill 'get set' : 
    Nevron.Nov.Dom.NValueFormatter WhiskerValueFormatter 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_WhiskerWidthPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_WhiskerWidthPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OutlierSize(): PrivateScope, Public, HideBySig, SpecialName
    set_OutlierSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_AverageStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_AverageStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_MedianStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_MedianStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_ShowAverage(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowAverage(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowMedian(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowMedian(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OutlierStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_OutlierStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_OutlierFill(): PrivateScope, Public, HideBySig, SpecialName
    set_OutlierFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_WhiskerValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_WhiskerValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NErrorBarDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Nevron.Nov.Chart.ENPointShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NErrorBarDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpperXErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowerXErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpperYErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowerYErrorProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Double UpperXError 'get set' : 
    Double LowerXError 'get set' : 
    Double UpperYError 'get set' : 
    Double LowerYError 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_UpperXError(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperXError(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LowerXError(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerXError(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UpperYError(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperYError(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LowerYError(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerYError(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NErrorBarSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NErrorBarSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowLowerXErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowUpperXErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowLowerYErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowUpperYErrorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty YErrorSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XErrorSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XErrorValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty YErrorValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NErrorBarDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Double Size 'get set' : 
    Double YErrorSize 'get set' : 
    Double XErrorSize 'get set' : 
    Boolean ShowLowerXError 'get set' : 
    Boolean ShowUpperXError 'get set' : 
    Boolean ShowLowerYError 'get set' : 
    Boolean ShowUpperYError 'get set' : 
    Nevron.Nov.Dom.NValueFormatter XErrorValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter YErrorValueFormatter 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Double): PrivateScope, Public, HideBySig, SpecialName
    get_YErrorSize(): PrivateScope, Public, HideBySig, SpecialName
    set_YErrorSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XErrorSize(): PrivateScope, Public, HideBySig, SpecialName
    set_XErrorSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ShowLowerXError(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowLowerXError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowUpperXError(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowUpperXError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowLowerYError(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowLowerYError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowUpperYError(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowUpperYError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_XErrorValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_XErrorValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_YErrorValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_YErrorValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NKagiDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NKagiDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NKagiSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPriceChangeSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NKagiSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ReversalAmountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ReversalAmountInPercentsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NKagiDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Graphics.NStroke UpStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke DownStroke 'get set' : 
    Double ReversalAmount 'get set' : 
    Boolean ReversalAmountInPercents 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_UpStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_UpStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DownStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_DownStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_ReversalAmount(): PrivateScope, Public, HideBySig, SpecialName
    set_ReversalAmount(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ReversalAmountInPercents(): PrivateScope, Public, HideBySig, SpecialName
    set_ReversalAmountInPercents(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPointAndFigureDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPointAndFigureDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowValueProperty : Public, Static, InitOnly
  Properties:
    Double HighValue 'get set' : 
    Double LowValue 'get set' : 
  Methods:
    get_HighValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HighValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_LowValue(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPointAndFigureSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPriceChangeSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPointAndFigureSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ReversalAmountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoxSizeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPointAndFigureDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Graphics.NStroke UpStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke DownStroke 'get set' : 
    Int32 ReversalAmount 'get set' : 
    Double BoxSize 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_UpStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_UpStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DownStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_DownStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_ReversalAmount(): PrivateScope, Public, HideBySig, SpecialName
    set_ReversalAmount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BoxSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxSize(Double): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NGroupTreeMapNodeLegendView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NLegendView
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGroupTreeMapNodeLegendViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ItemBorderProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENTreeMapNodeLegendMode Mode 'get set' : 
    Nevron.Nov.Graphics.NStroke ItemBorder 'get set' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(ENTreeMapNodeLegendMode): PrivateScope, Public, HideBySig, SpecialName
    get_ItemBorder(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemBorder(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRenkoDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRenkoDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NRenkoSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPriceChangeSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRenkoSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoxWidthPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoxSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoxSizeInPercentsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NRenkoDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Graphics.NStroke UpStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke DownStroke 'get set' : 
    Nevron.Nov.Graphics.NFill UpFill 'get set' : 
    Nevron.Nov.Graphics.NFill DownFill 'get set' : 
    Double BoxWidthPercent 'get set' : 
    Double BoxSize 'get set' : 
    Boolean BoxSizeInPercents 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_UpStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_UpStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DownStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_DownStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_UpFill(): PrivateScope, Public, HideBySig, SpecialName
    set_UpFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_DownFill(): PrivateScope, Public, HideBySig, SpecialName
    set_DownFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_BoxWidthPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxWidthPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BoxSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BoxSizeInPercents(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxSizeInPercents(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
    GetSyncRangeSampler(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NLegendView: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLegendViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FormatProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxTextWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextWrapModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ItemMarginsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextMarginsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeMarginsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NMargins ItemMargins 'get set' : 
    Nevron.Nov.Graphics.NMargins TextMargins 'get set' : 
    Nevron.Nov.Graphics.NMargins ShapeMargins 'get set' : 
    System.String Format 'get set' : 
    Nevron.Nov.UI.NTextStyle TextStyle 'get set' : 
    Double MaxTextWidth 'get set' : 
    Nevron.Nov.Graphics.ENTextWrapMode TextWrapMode 'get set' : 
    Nevron.Nov.Graphics.NSize MarkSize 'get set' : 
  Methods:
    get_ItemMargins(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemMargins(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_TextMargins(): PrivateScope, Public, HideBySig, SpecialName
    set_TextMargins(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_ShapeMargins(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeMargins(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTextWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTextWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TextWrapMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TextWrapMode(ENTextWrapMode): PrivateScope, Public, HideBySig, SpecialName
    get_MarkSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkSize(NSize): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NFunnelDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFunnelDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NFunnelSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFunnelSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseXValuesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PointGapPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxPointGapPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelArrowLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NeckWidthPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NeckHeightPercentProperty : Public, Static, InitOnly
  Properties:
    Boolean UseXValues 'get set' : 
    Double NeckWidthPercent 'get set' : 
    Double NeckHeightPercent 'get set' : 
    Nevron.Nov.Chart.ENFunnelLabelMode LabelMode 'get set' : 
    Nevron.Nov.Chart.ENFunnelShape Shape 'get set' : 
    Double LabelArrowLength 'get set' : 
    Double PointGapPercent 'get set' : 
    Double MaxPointGapPercent 'get set' : 
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NFunnelDataPoint] DataPoints 'get set' : 
  Methods:
    get_UseXValues(): PrivateScope, Public, HideBySig, SpecialName
    set_UseXValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NeckWidthPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_NeckWidthPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NeckHeightPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_NeckHeightPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LabelMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelMode(ENFunnelLabelMode): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENFunnelShape): PrivateScope, Public, HideBySig, SpecialName
    get_LabelArrowLength(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelArrowLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PointGapPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_PointGapPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPointGapPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxPointGapPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRadarAreaSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NRadarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarAreaSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DropLinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NRadarAreaDataPoint] DataPoints 'get set' : 
    Boolean DropLines 'get set' : 
    Double Origin 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_DropLines(): PrivateScope, Public, HideBySig, SpecialName
    set_DropLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Double): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRadarAreaDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarAreaDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NRadarLineDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarLineDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NMarkerStyle MarkerStyle 'get set' : 
  Methods:
    get_MarkerStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerStyle(NMarkerStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRadarLineSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NRadarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarLineSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CloseContourProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NRadarLineDataPoint] DataPoints 'get set' : 
    Boolean CloseContour 'get set' : 
    Nevron.Nov.Chart.NMarkerStyle MarkerStyle 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_CloseContour(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseContour(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MarkerStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerStyle(NMarkerStyle): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPolarRangeDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NX2Y2DataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarRangeDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NPolarRangeSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPolarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarRangeSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPolarRangeDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENBarShape Shape 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENBarShape): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPolarVectorDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NX2Y2DataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarVectorDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NPolarVectorSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPolarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarVectorSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowheadShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinArrowheadSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxArrowheadSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowheadSizeFactorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPolarVectorDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENVectorArrowheadShape ArrowheadShape 'get set' : 
    Nevron.Nov.Graphics.NSize MinArrowheadSize 'get set' : 
    Nevron.Nov.Graphics.NSize MaxArrowheadSize 'get set' : 
    Nevron.Nov.Graphics.NSize ArrowheadSizeFactor 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowheadShape(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowheadShape(ENVectorArrowheadShape): PrivateScope, Public, HideBySig, SpecialName
    get_MinArrowheadSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MinArrowheadSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArrowheadSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArrowheadSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowheadSizeFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowheadSizeFactor(NSize): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NVectorDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NX2Y2DataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NVectorDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NVectorSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NVectorSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowheadShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinArrowheadSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxArrowheadSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowheadSizeFactorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NVectorDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENVectorArrowheadShape ArrowheadShape 'get set' : 
    Nevron.Nov.Graphics.NSize MinArrowheadSize 'get set' : 
    Nevron.Nov.Graphics.NSize MaxArrowheadSize 'get set' : 
    Nevron.Nov.Graphics.NSize ArrowheadSizeFactor 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowheadShape(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowheadShape(ENVectorArrowheadShape): PrivateScope, Public, HideBySig, SpecialName
    get_MinArrowheadSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MinArrowheadSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArrowheadSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArrowheadSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowheadSizeFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowheadSizeFactor(NSize): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPolarAreaDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarAreaDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NPolarAreaSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPolarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarAreaSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomOriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DropLinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Boolean DropLines 'get set' : 
    Nevron.Nov.Chart.ENSeriesOriginMode OriginMode 'get set' : 
    Double CustomOrigin 'get set' : 
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPolarAreaDataPoint] DataPoints 'get set' : 
  Methods:
    get_DropLines(): PrivateScope, Public, HideBySig, SpecialName
    set_DropLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginMode(ENSeriesOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_CustomOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomOrigin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NAreaDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAreaDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NAreaSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAreaSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowDropLinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomOriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MultiAreaModeProperty : Public, Static, InitOnly
  Properties:
    Boolean ShowDropLines 'get set' : 
    Nevron.Nov.Chart.ENSeriesOriginMode OriginMode 'get set' : 
    Double CustomOrigin 'get set' : 
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NAreaDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENMultiAreaMode MultiAreaMode 'get set' : 
    Nevron.Nov.Chart.NPalette Palette 'get set' : 
  Methods:
    get_ShowDropLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowDropLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginMode(ENSeriesOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_CustomOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomOrigin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_MultiAreaMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiAreaMode(ENMultiAreaMode): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(NPalette): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NBarDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBarDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NBarSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NBarSeriesBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBarSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MultiBarModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomOriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalMarginInflateProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteColorModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NBarDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENSeriesOriginMode OriginMode 'get set' : 
    Double CustomOrigin 'get set' : 
    Nevron.Nov.Chart.ENMultiBarMode MultiBarMode 'get set' : 
    Nevron.Nov.Chart.ENBarShape Shape 'get set' : 
    Double VerticalMarginInflate 'get set' : 
    Nevron.Nov.Chart.NPalette Palette 'get set' : 
    Nevron.Nov.Chart.ENPaletteColorMode PaletteColorMode 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_OriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginMode(ENSeriesOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_CustomOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomOrigin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MultiBarMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiBarMode(ENMultiBarMode): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENBarShape): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalMarginInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalMarginInflate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(NPalette): PrivateScope, Public, HideBySig, SpecialName
    get_PaletteColorMode(): PrivateScope, Public, HideBySig, SpecialName
    set_PaletteColorMode(ENPaletteColorMode): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NBubbleDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Nevron.Nov.Chart.ENPointShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBubbleDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Double Size 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NBubbleSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NBubbleSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NBubbleDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Double MinSize 'get set' : 
    Double MaxSize 'get set' : 
    Nevron.Nov.Dom.NValueFormatter SizeValueFormatter 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_MinSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SizeValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NLineDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLineDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NMarkerStyle MarkerStyle 'get set' : 
  Methods:
    get_MarkerStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerStyle(NMarkerStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NLineSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLineSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MultiLineModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LineSegmentModeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NLineDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENMultiLineMode MultiLineMode 'get set' : 
    Nevron.Nov.Chart.NMarkerStyle MarkerStyle 'get set' : 
    Nevron.Nov.Chart.ENLineSegmentMode LineSegmentMode 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_MultiLineMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MultiLineMode(ENMultiLineMode): PrivateScope, Public, HideBySig, SpecialName
    get_MarkerStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerStyle(NMarkerStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LineSegmentMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSegmentMode(ENLineSegmentMode): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPointDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Nevron.Nov.Chart.ENPointShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPointDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalDropLineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalDropLineStrokeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Nevron.Nov.Graphics.NStroke HorizontalDropLineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke VerticalDropLineStroke 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalDropLineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalDropLineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalDropLineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalDropLineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPointSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPointSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalDropLineOriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowHorizontalDropLinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowVerticalDropLinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalDropLineOriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalDropLineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalDropLineOriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalDropLineOriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalDropLineStrokeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPointDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Double Size 'get set' : 
    Nevron.Nov.Chart.ENDropLineOriginMode VerticalDropLineOriginMode 'get set' : 
    Nevron.Nov.Chart.ENDropLineOriginMode HorizontalDropLineOriginMode 'get set' : 
    Double HorizontalDropLineOrigin 'get set' : 
    Double VerticalDropLineOrigin 'get set' : 
    Nevron.Nov.Graphics.NStroke HorizontalDropLineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke VerticalDropLineStroke 'get set' : 
    Boolean ShowHorizontalDropLines 'get set' : 
    Boolean ShowVerticalDropLines 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalDropLineOriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalDropLineOriginMode(ENDropLineOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalDropLineOriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalDropLineOriginMode(ENDropLineOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalDropLineOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalDropLineOrigin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalDropLineOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalDropLineOrigin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalDropLineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalDropLineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalDropLineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalDropLineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_ShowHorizontalDropLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowHorizontalDropLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowVerticalDropLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowVerticalDropLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRangeDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NX2Y2DataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeDataPointSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NRangeSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NRangeDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENBarShape Shape 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENBarShape): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NStockDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStockDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OpenProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CloseProperty : Public, Static, InitOnly
  Properties:
    Double Low 'get set' : 
    Double Open 'get set' : 
    Double Close 'get set' : 
    Double High 'get set' : 
  Methods:
    get_Low(): PrivateScope, Public, HideBySig, SpecialName
    set_Low(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Open(): PrivateScope, Public, HideBySig, SpecialName
    set_Open(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Close(): PrivateScope, Public, HideBySig, SpecialName
    set_Close(Double): PrivateScope, Public, HideBySig, SpecialName
    get_High(): PrivateScope, Public, HideBySig, SpecialName
    set_High(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NStockSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYCartesianSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStockSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AppearanceModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CandleShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CandleWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowOpenProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowCloseProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowHighLowProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpHighLowStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DownHighLowStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleCandleWidthWhenZoomingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HighValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LowValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OpenValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CloseValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NStockDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENSeriesAppearanceMode AppearanceMode 'get set' : 
    Nevron.Nov.Chart.ENCandleShape CandleShape 'get set' : 
    Double CandleWidth 'get set' : 
    Boolean ScaleCandleWidthWhenZooming 'get set' : 
    Boolean ShowOpen 'get set' : 
    Boolean ShowClose 'get set' : 
    Boolean ShowHighLow 'get set' : 
    Nevron.Nov.Graphics.NFill UpFill 'get set' : 
    Nevron.Nov.Graphics.NStroke UpStroke 'get set' : 
    Nevron.Nov.Graphics.NFill DownFill 'get set' : 
    Nevron.Nov.Graphics.NStroke DownStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke UpHighLowStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke DownHighLowStroke 'get set' : 
    Nevron.Nov.Dom.NValueFormatter HighValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter LowValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter OpenValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter CloseValueFormatter 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_AppearanceMode(): PrivateScope, Public, HideBySig, SpecialName
    set_AppearanceMode(ENSeriesAppearanceMode): PrivateScope, Public, HideBySig, SpecialName
    get_CandleShape(): PrivateScope, Public, HideBySig, SpecialName
    set_CandleShape(ENCandleShape): PrivateScope, Public, HideBySig, SpecialName
    get_CandleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_CandleWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleCandleWidthWhenZooming(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleCandleWidthWhenZooming(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowOpen(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowOpen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowClose(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowClose(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShowHighLow(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowHighLow(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UpFill(): PrivateScope, Public, HideBySig, SpecialName
    set_UpFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_UpStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_UpStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DownFill(): PrivateScope, Public, HideBySig, SpecialName
    set_DownFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_DownStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_DownStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_UpHighLowStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_UpHighLowStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_DownHighLowStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_DownHighLowStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_HighValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_HighValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_LowValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_LowValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_OpenValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_CloseValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NDataLabelStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataLabelStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FormatProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VertAlignProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ArrowPointerLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OrientationProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TrimWhiteSpacesProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.ENVerticalAlignment VertAlign 'get set' : 
    Double ArrowLength 'get set' : 
    Double ArrowPointerLength 'get set' : 
    System.String Format 'get set' : 
    Nevron.Nov.UI.NTextStyle TextStyle 'get set' : 
    Nevron.Nov.Graphics.NStroke ArrowStroke 'get set' : 
    Double Orientation 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_VertAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_VertAlign(ENVerticalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowPointerLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowPointerLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    set_Orientation(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NMarkerStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NSize): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMarkerStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BorderProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Nevron.Nov.Graphics.NSize Size 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Border 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Border(): PrivateScope, Public, HideBySig, SpecialName
    set_Border(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NSeries: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NChartElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.ИШк
  Fields:
    Nevron.Nov.Dom.NSchema NSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateMarginsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LegendRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LegendViewProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TotalValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CumulativeValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IndexValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty XValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShadowProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DataLabelStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelLayoutProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginIndexProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NShadow Shadow 'get set' : 
    System.String Name 'get set' : 
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.NSeriesLegendView LegendView 'get set' : 
    Boolean InflateMargins 'get set' : 
    Nevron.Nov.Dom.NValueFormatter ValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter XValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter TotalValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter PercentValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter CumulativeValueFormatter 'get set' : 
    Nevron.Nov.Dom.NValueFormatter IndexValueFormatter 'get set' : 
    Nevron.Nov.Chart.NDataLabelStyle DataLabelStyle 'get set' : 
    Nevron.Nov.Chart.NSeriesLabelLayout LabelLayout 'get set' : 
    Int32 OriginIndex 'get set' : 
  Methods:
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Shadow(): PrivateScope, Public, HideBySig, SpecialName
    set_Shadow(NShadow): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LegendView(): PrivateScope, Public, HideBySig, SpecialName
    set_LegendView(NSeriesLegendView): PrivateScope, Public, HideBySig, SpecialName
    get_InflateMargins(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateMargins(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_XValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_XValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_TotalValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_TotalValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_PercentValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_PercentValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_CumulativeValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_CumulativeValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_IndexValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_IndexValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_DataLabelStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DataLabelStyle(NDataLabelStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LabelLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelLayout(NSeriesLabelLayout): PrivateScope, Public, HideBySig, SpecialName
    get_OriginIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Chart.NSeriesCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Chart.NSeries]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSeriesCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NSeriesLegendView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NLegendView
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSeriesLegendViewSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OrderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LegendRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NNodeRef LegendRef 'get set' : 
    Nevron.Nov.Chart.NLegend Legend 'get set' : 
    Nevron.Nov.Chart.ENSeriesLegendMode Mode 'get set' : 
    Nevron.Nov.Chart.ENSeriesLegendOrder Order 'get set' : 
  Methods:
    get_LegendRef(): PrivateScope, Public, HideBySig, SpecialName
    set_LegendRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_Legend(): PrivateScope, Public, HideBySig, SpecialName
    set_Legend(NLegend): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(ENSeriesLegendMode): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(ENSeriesLegendOrder): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPieDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPieDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DetachmentPercentProperty : Public, Static, InitOnly
  Properties:
    Double DetachmentPercent 'get set' : 
  Methods:
    get_DetachmentPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_DetachmentPercent(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPieSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPieSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SpiderArrowLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SpiderConnectorLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginRadiusPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndRadiusPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Double BeginRadiusPercent 'get set' : 
    Double EndRadiusPercent 'get set' : 
    Nevron.Nov.Chart.ENPieLabelMode LabelMode 'get set' : 
    Double SpiderArrowLength 'get set' : 
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPieDataPoint] DataPoints 'get set' : 
  Methods:
    get_BeginRadiusPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginRadiusPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndRadiusPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_EndRadiusPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LabelMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelMode(ENPieLabelMode): PrivateScope, Public, HideBySig, SpecialName
    get_SpiderArrowLength(): PrivateScope, Public, HideBySig, SpecialName
    set_SpiderArrowLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPolarLineDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarLineDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NMarkerStyle MarkerStyle 'get set' : 
  Methods:
    get_MarkerStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerStyle(NMarkerStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPolarLineSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPolarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarLineSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CloseContourProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPolarLineDataPoint] DataPoints 'get set' : 
    Boolean CloseContour 'get set' : 
    Nevron.Nov.Chart.NMarkerStyle MarkerStyle 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_CloseContour(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseContour(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MarkerStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerStyle(NMarkerStyle): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NPolarSeries: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AngleAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseXValuesProperty : Public, Static, InitOnly
  Properties:
    Boolean UseXValues 'get set' : 
    Nevron.Nov.Dom.NNodeRef ValueAxisRef 'get set' : 
    Nevron.Nov.Chart.NPolarAxis ValueAxis 'get set' : 
    Nevron.Nov.Dom.NNodeRef AngleAxisRef 'get set' : 
    Nevron.Nov.Chart.NPolarAxis AngleAxis 'get set' : 
  Methods:
    get_UseXValues(): PrivateScope, Public, HideBySig, SpecialName
    set_UseXValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ValueAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_ValueAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueAxis(NPolarAxis): PrivateScope, Public, HideBySig, SpecialName
    get_AngleAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_AngleAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleAxis(NPolarAxis): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPolarPointDataPoint: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NXYDataPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Nevron.Nov.Chart.ENPointShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarPointDataPointSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPolarPointSeries: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPolarSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPolarPointSeriesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild DataPointsChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDataPointCollection`1[Nevron.Nov.Chart.NPolarPointDataPoint] DataPoints 'get set' : 
    Nevron.Nov.Chart.ENPointShape Shape 'get set' : 
    Double Size 'get set' : 
  Methods:
    get_DataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPoints(NDataPointCollection`1): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENPointShape): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Double): PrivateScope, Public, HideBySig, SpecialName
    GetDataPointsChild(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRadarSeries: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NSeries
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadarSeriesSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NChartLabelLayout: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartLabelLayoutSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableInitialPositioningProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RemoveOverlappedLabelsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableLabelAdjustmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxLayoutItemsProperty : Public, Static, InitOnly
  Properties:
    Boolean EnableInitialPositioning 'get set' : 
    Boolean RemoveOverlappedLabels 'get set' : 
    Boolean EnableLabelAdjustment 'get set' : 
    Int32 MaxLayoutItems 'get set' : 
  Methods:
    get_EnableInitialPositioning(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableInitialPositioning(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RemoveOverlappedLabels(): PrivateScope, Public, HideBySig, SpecialName
    set_RemoveOverlappedLabels(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EnableLabelAdjustment(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableLabelAdjustment(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLayoutItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLayoutItems(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NSeriesLabelLayout: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NSeriesLabelLayoutSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableInitialPositioningProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableDataPointSafeguardProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DataPointSafeguardSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelLocationsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseLabelLocationsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InvertLocationsForInvertedDataPointsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InvertLocationsIfIgnoredProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OutOfBoundsLocationModeProperty : Public, Static, InitOnly
  Properties:
    Boolean EnableDataPointSafeguard 'get set' : 
    Nevron.Nov.Graphics.NSize DataPointSafeguardSize 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.ENLabelLocation] LabelLocations 'get set' : 
    Boolean UseLabelLocations 'get set' : 
    Boolean InvertLocationsForInvertedDataPoints 'get set' : 
    Nevron.Nov.Chart.ENOutOfBoundsLocationMode OutOfBoundsLocationMode 'get set' : 
    Boolean InvertLocationsIfIgnored 'get set' : 
  Methods:
    get_EnableDataPointSafeguard(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableDataPointSafeguard(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DataPointSafeguardSize(): PrivateScope, Public, HideBySig, SpecialName
    set_DataPointSafeguardSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_LabelLocations(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelLocations(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_UseLabelLocations(): PrivateScope, Public, HideBySig, SpecialName
    set_UseLabelLocations(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InvertLocationsForInvertedDataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_InvertLocationsForInvertedDataPoints(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OutOfBoundsLocationMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OutOfBoundsLocationMode(ENOutOfBoundsLocationMode): PrivateScope, Public, HideBySig, SpecialName
    get_InvertLocationsIfIgnored(): PrivateScope, Public, HideBySig, SpecialName
    set_InvertLocationsIfIgnored(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NVisualAid: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NVisual
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NVisualAidSchema : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
  Methods:
    CanClip(): PrivateScope, Public, Virtual, HideBySig
    GetClip(): PrivateScope, Public, Virtual, HideBySig
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NVisualAidCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NVisualCollection`1[Nevron.Nov.Chart.NVisualAid]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NVisualAidCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NAlignmentGuideline: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAlignmentGuidelineSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContentSideProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TargetsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENContentSide ContentSide 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Dom.NNodeRef] Targets 'get set' : 
  Methods:
    get_ContentSide(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentSide(ENContentSide): PrivateScope, Public, HideBySig, SpecialName
    get_Targets(): PrivateScope, Public, HideBySig, SpecialName
    set_Targets(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAlignmentGuidelineCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttributeCollection`1[Nevron.Nov.Chart.NAlignmentGuideline]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NAlignmentGuidelineCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAlignmentGuidelineCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NChartDocument: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NGenericDocument`1[Nevron.Nov.Chart.NChartViewSurface]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NChartViewSurface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartDocumentSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NChartTheme: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NTheme
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENChartPalette): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENChartPalette, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Graphics.NColor[] NevronPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] WinterPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] AutumnPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] BrightPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] CoolPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] DarkPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] NaturePalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] PalePalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] PastelPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] RosePalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] WhitePalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] BlackPalette : Public, Static, InitOnly
    Nevron.Nov.Graphics.NColor[] FreshPalette : Public, Static, InitOnly
    System.String ThemeType = Chart : Public, Static, Literal, HasDefault
  Properties:
    Nevron.Nov.Chart.ENChartPalette Palette 'get set' : 
    Boolean ColorDataPoints 'get set' : 
  Methods:
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(ENChartPalette): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDataPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorDataPoints(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetThemeType(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NChartView: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NDocumentView`6[Nevron.Nov.Chart.NChartDocument,Nevron.Nov.Chart.NChartViewSurface,Nevron.Nov.Chart.Formats.NChartFormat,Nevron.Nov.Chart.Formats.NChartFormatRegistry,Nevron.Nov.Chart.Formats.NChartLoadSettings,Nevron.Nov.Chart.Formats.NChartSaveSettings]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.UI.NWidget): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartViewSchema : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NChartViewSurface Surface 'get set' : 
  Methods:
    get_Surface(): PrivateScope, Public, HideBySig, SpecialName
    set_Surface(NChartViewSurface): PrivateScope, Public, HideBySig, SpecialName
    ScrollInDirection(ENCompassDirection, Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NChartViewSurface: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NContentHolder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.UI.INPagedElement
    Nevron.Nov.Dom.INDocumentContentElement
  Fields:
    Nevron.Nov.Dom.NSchema NChartViewSurfaceSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlignmentGuidelinesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InformationProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NChart[] Charts 'get ' : 
    Nevron.Nov.Chart.NLegend[] Legends 'get ' : 
    Nevron.Nov.UI.NLabel[] Titles 'get ' : 
    Nevron.Nov.Chart.NAlignmentGuidelineCollection AlignmentGuidelines 'get set' : 
    Nevron.Nov.Dom.NDocumentInformation Information 'get set' : 
  Methods:
    get_Charts(): PrivateScope, Public, HideBySig, SpecialName
    get_Legends(): PrivateScope, Public, HideBySig, SpecialName
    get_Titles(): PrivateScope, Public, HideBySig, SpecialName
    get_AlignmentGuidelines(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignmentGuidelines(NAlignmentGuidelineCollection): PrivateScope, Public, HideBySig, SpecialName
    CreatePredefinedChart(ENPredefinedChartType): PrivateScope, Public, HideBySig
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig
    ValidateArrange(): PrivateScope, Public, Virtual, HideBySig
    get_Information(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Information(NDocumentInformation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Nevron.Nov.Chart.ENRadarTitlePositionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRadarTitlePositionMode Center = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRadarTitlePositionMode NearestPoint = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENRadarMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRadarMode SingleMeasure = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRadarMode MultiMeasure = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENHighLowAppearanceMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENHighLowAppearanceMode Generic = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENHighLowAppearanceMode HighLow = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENHighLowAppearanceMode Palette = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDropLineOriginMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDropLineOriginMode ScaleMin = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDropLineOriginMode ScaleMax = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDropLineOriginMode CustomValue = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENContourDisplayMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENContourDisplayMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENContourDisplayMode Contour = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENContourDisplayMode Dots = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENContourColorMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENContourColorMode Uniform = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENContourColorMode Palette = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPaletteColorMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPaletteColorMode Uniform = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPaletteColorMode Spread = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENTreeMapNodeLegendMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENTreeMapNodeLegendMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLegendMode Group = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLegendMode ValueNodes = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLegendMode GroupAndChildNodes = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLegendMode Palette = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENChangePaletteMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENChangePaletteMode Absolute = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChangePaletteMode Percentage = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENChangeValueType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENChangeValueType Absolute = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChangeValueType Percentage = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENTreeMapHorizontalFillMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENTreeMapHorizontalFillMode LeftToRight = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapHorizontalFillMode RightToLeft = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENTreeMapVerticalFillMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENTreeMapVerticalFillMode TopToBottom = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapVerticalFillMode BottomToTop = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENTreeMapNodeSortOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENTreeMapNodeSortOrder Descending = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeSortOrder Ascending = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode Hide = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode Wrap = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode Ellipsis = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTreeMapNodeLabelFitMode AutoScale = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENFunnelShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENFunnelShape Rectangle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFunnelShape Trapezoid = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENContentSide: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENContentSide Left = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENContentSide Top = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENContentSide Right = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENContentSide Bottom = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENVectorArrowheadShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENVectorArrowheadShape None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENVectorArrowheadShape Arrow = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENVectorArrowheadShape Triangle = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENHitTestMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENHitTestMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENHitTestMode Vector = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENHitTestMode Raster = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLineSegmentMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLineSegmentMode StaightLine = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLineSegmentMode VHStep = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLineSegmentMode HVStep = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLineSegmentMode VHAscentHVDescentStep = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLineSegmentMode HVAscentVHDescentStep = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLineSegmentMode Spline = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPieLabelMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPieLabelMode Center = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPieLabelMode Rim = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPieLabelMode Spider = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENFunnelLabelMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENFunnelLabelMode Left = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFunnelLabelMode Center = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFunnelLabelMode Right = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFunnelLabelMode LeftAligned = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFunnelLabelMode RightAligned = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPolarAxisDockZone: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPolarAxisDockZone OuterRim = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxisDockZone InnerRim = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxisDockZone Left = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxisDockZone Top = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxisDockZone Right = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxisDockZone Bottom = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPolarAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPolarAxis PrimaryValue = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxis SecondaryValue = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxis PrimaryAngle = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxis SecondaryAngle = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPolarAxisOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPolarAxisOrientation Angle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPolarAxisOrientation Value = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPredefinedChartType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPredefinedChartType Cartesian = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedChartType Funnel = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedChartType Pie = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedChartType Polar = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedChartType Radar = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedChartType TreeMap = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENStockGroupingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENStockGroupingMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENStockGroupingMode AutoDateTimeSpan = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENStockGroupingMode CustomDateTimeSpan = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENStockGroupingMode SynchronizeWithMajorTick = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCandleShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCandleShape Rectangle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCandleShape Stick = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode Normal = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENEmptyDataPointsAppearanceMode Special = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENEmptyDataPointsLabelMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENEmptyDataPointsLabelMode Normal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENEmptyDataPointsLabelMode Special = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENEmptyDataPointsMarkerMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENEmptyDataPointsMarkerMode Normal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENEmptyDataPointsMarkerMode Special = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENSeriesAppearanceMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENSeriesAppearanceMode Generic = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesAppearanceMode SeriesLogic = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCartesianAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCartesianAxis PrimaryY = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxis SecondaryY = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxis PrimaryX = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxis SecondaryX = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleBreakInflateMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleBreakInflateMode Absolute = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakInflateMode Relative = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleBreakPositionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleBreakPositionMode Content = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPositionMode Percent = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPositionMode Range = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleBreakStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleBreakStyle Line = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakStyle Wave = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakStyle ZigZag = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENOutOfBoundsLocationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENOutOfBoundsLocationMode IgnoreLocation = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENOutOfBoundsLocationMode PushWithinBounds = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENOutOfBoundsLocationMode UseLocation = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLabelLocation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLabelLocation Top = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation Bottom = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation Left = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation Right = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation TopLeft = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation TopRight = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation BottomLeft = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelLocation BottomRight = 7 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENChartPalette: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENChartPalette Nevron = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Winter = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Autumn = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Bright = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Cool = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Dark = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Nature = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Pale = 7 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Pastel = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Rose = 9 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette White = 10 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Black = 11 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENChartPalette Fresh = 12 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLegendMarkShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLegendMarkShape None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Rectangle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Triangle = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape InvertedTriangle = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Ellipse = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Line = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Cross = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape DiagonalCross = 7 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape LineCross = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape LineDiagonalCross = 9 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Star = 10 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Diamond = 11 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendMarkShape Asterisk = 12 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENSeriesLegendOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENSeriesLegendOrder Append = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesLegendOrder Prepend = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENSeriesLegendMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENSeriesLegendMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesLegendMode Series = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesLegendMode SeriesVisibility = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesLegendMode DataPoints = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesLegendMode SeriesLogic = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLegendExpandMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLegendExpandMode RowsOnly = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendExpandMode ColsOnly = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendExpandMode RowsFixed = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendExpandMode ColsFixed = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLegendInterlaceStyleType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLegendInterlaceStyleType Row = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLegendInterlaceStyleType Col = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENBarWidthMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENBarWidthMode FixedWidth = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENBarWidthMode ScaleWidth = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENBarWidthMode MinGap = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENSeriesOriginMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENSeriesOriginMode CustomOrigin = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesOriginMode MinValue = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesOriginMode MaxValue = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesOriginMode ScaleMin = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSeriesOriginMode ScaleMax = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPredefinedCartesianAxis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPredefinedCartesianAxis XOrdinalYLinear = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedCartesianAxis XDateTimeYLinear = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedCartesianAxis XValueTimelineYLinear = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedCartesianAxis XRangeTimelineYLinear = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedCartesianAxis XYLinear = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedCartesianAxis PrimaryAndSecondaryLinear = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPredefinedPolarAxes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPredefinedPolarAxes AngleValue = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedPolarAxes AngleValueSecondaryValue = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedPolarAxes AngleSecondaryAngleValue = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENAxisViewRangeMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENAxisViewRangeMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisViewRangeMode FixedMin = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisViewRangeMode FixedMax = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisViewRangeMode FixedRange = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENAxisClipMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENAxisClipMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisClipMode Always = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisClipMode Never = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENBarShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENBarShape Rectangle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENBarShape Triangle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENBarShape InvertedTriangle = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPointShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPointShape Rectangle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape Triangle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape InvertedTriangle = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape Ellipse = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape Cross = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape DiagonalCross = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape LineCross = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape LineDiagonalCross = 7 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape Star = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape Diamond = 9 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPointShape Asterisk = 10 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENMultiBarMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENMultiBarMode Series = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiBarMode Stacked = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiBarMode StackedPercent = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiBarMode Clustered = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENMultiLineMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENMultiLineMode Series = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiLineMode Stacked = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiLineMode StackedPercent = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENMultiAreaMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENMultiAreaMode Series = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiAreaMode Stacked = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMultiAreaMode StackedPercent = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCartesianChartOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCartesianChartOrientation Upward = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianChartOrientation RightToLeft = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianChartOrientation LeftToRight = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCartesianChartFitMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCartesianChartFitMode Stretch = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianChartFitMode Aspect = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianChartFitMode AspectWithAxes = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCartesianAxisOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCartesianAxisOrientation Horizontal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxisOrientation Vertical = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENAxisCrossAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENAxisCrossAlignment Left = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisCrossAlignment Center = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENAxisCrossAlignment Right = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCartesianAxisDockZone: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCartesianAxisDockZone Left = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxisDockZone Top = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxisDockZone Right = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCartesianAxisDockZone Bottom = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENNeedleShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENNeedleShape None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Line = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Bar = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Triangle = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape InvertedTriangle = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Needle1 = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Needle2 = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Needle3 = 7 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENNeedleShape Needle4 = 8 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENFirstRowGridStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENFirstRowGridStyle None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFirstRowGridStyle Individual = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFirstRowGridStyle Separators = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFirstRowGridStyle Group = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENGroupRowGridStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENGroupRowGridStyle None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENGroupRowGridStyle Individual = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENGroupRowGridStyle Grid = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENGroupRowGridStyle Bracket = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENGroupRowGridStyle Stick = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENTimelineScaleRowTickMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENTimelineScaleRowTickMode AutoMinDistance = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTimelineScaleRowTickMode AutoMaxCount = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENTimelineScaleRowTickMode Custom = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENBoundsMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENBoundsMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENBoundsMode Fit = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENBoundsMode Stretch = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDisplaySignMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDisplaySignMode Never = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplaySignMode Always = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplaySignMode Negative = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDotCellStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDotCellStyle Rectangle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDotCellStyle Circle = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDisplayDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDisplayDirection LeftToRight = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayDirection RightToLeft = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDisplayCellCountMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDisplayCellCountMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayCellCountMode Fixed = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDisplayStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDisplayStyle SevenSegmentNormal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle SevenSegmentRounded = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle SevenSegmentRectangular = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle FourteenSegmentNormal = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle FourteenSegmentRectangular = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle FourteenSegmentInset = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle MatrixRectangle = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDisplayStyle MatrixCircle = 7 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENFourteenSegmentCellStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENFourteenSegmentCellStyle Normal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFourteenSegmentCellStyle Rectangular = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENFourteenSegmentCellStyle Inset = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENMatrixCellStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENMatrixCellStyle Rectangle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMatrixCellStyle Circle = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENSevenSegmentCellStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENSevenSegmentCellStyle Normal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSevenSegmentCellStyle Rounded = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSevenSegmentCellStyle Rectangular = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENRangeIndicatorShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRangeIndicatorShape Path = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeIndicatorShape Bar = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENDialShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENDialShape Circle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDialShape CutCircle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENDialShape RoundedOutline = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENRangeIndicatorOriginMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRangeIndicatorOriginMode ScaleMin = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeIndicatorOriginMode ScaleMax = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeIndicatorOriginMode Custom = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCircularRimPattern: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCircularRimPattern Circle = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCircularRimPattern RoundHandle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCircularRimPattern RoundHandleSmall = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCircularRimPattern EdgeHandle = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCircularRimPattern EdgeHandleSmall = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCircularRimPattern Bolt = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCapEffectShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCapEffectShape Region = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapEffectShape Rectangle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapEffectShape Ellipse = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapEffectShape RoundedRect = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENKnobMarkerPaintOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENKnobMarkerPaintOrder BeforeRims = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENKnobMarkerPaintOrder BetweenRims = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENKnobMarkerPaintOrder AfterRims = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENIndicatorOffsetOriginMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENIndicatorOffsetOriginMode ScaleBegin = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENIndicatorOffsetOriginMode ScaleMiddle = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENIndicatorOffsetOriginMode ScaleEnd = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENIndicatorPaintOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENIndicatorPaintOrder BeforeScale = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENIndicatorPaintOrder AfterScale = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENIndicatorPaintOrder PostPaint = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENGaugeAxisDockZone: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENGaugeAxisDockZone Top = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENGaugeAxisDockZone Bottom = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLinearGaugeOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLinearGaugeOrientation Horizontal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLinearGaugeOrientation Vertical = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENPredefinedScaleStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENPredefinedScaleStyle Standard = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedScaleStyle Scientific = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedScaleStyle Presentation = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedScaleStyle PresentationNoStroke = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedScaleStyle Watch = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENPredefinedScaleStyle Ruler = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENMajorTickMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENMajorTickMode AutoMinDistance = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMajorTickMode AutoMaxCount = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMajorTickMode CustomTicks = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMajorTickMode CustomStep = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMajorTickMode CustomSteps = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleLevelBuildMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleLevelBuildMode Standard = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleLevelBuildMode TicksAndRuler = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleLevelBuildMode LabelsAndRuler = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLabelGenerationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLabelGenerationMode SingleLevel = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelGenerationMode Stagger2 = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLabelGenerationMode Stagger3 = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleViewRangeInflateMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleViewRangeInflateMode MajorTick = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleViewRangeInflateMode MajorTickExtend = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleViewRangeInflateMode Logical = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleViewRangeInflateMode Absolute = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENSamplingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENSamplingMode MinDistance = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSamplingMode MaxCount = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSamplingMode CustomValues = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSamplingMode CustomStep = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENSamplingMode CustomSteps = 4 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENLevelLabelsLayout: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENLevelLabelsLayout Rotate30 = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLevelLabelsLayout Rotate45 = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLevelLabelsLayout Rotate90 = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLevelLabelsLayout Stagger2 = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLevelLabelsLayout Stagger3 = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLevelLabelsLayout RemoveOverlap = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENLevelLabelsLayout AutoScale = 6 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleRangeOrderType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleRangeOrderType View = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleRangeOrderType Logical = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleRulerShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleRulerShape None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleRulerShape Line = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleRulerShape Bar = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleRulerShape Tube = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENCapShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENCapShape None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapShape Arrow = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapShape Ellipse = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapShape LeftCrossLine = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapShape RightCrossLine = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENCapShape VerticalLine = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENExtendRangeMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENExtendRangeMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENExtendRangeMode Always = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENExtendRangeMode Never = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleOrientation Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleOrientation Right = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleOrientation Left = 2 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleOrientationInternal: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleOrientationInternal Right = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleOrientationInternal Left = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleBreakPattern: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleBreakPattern Regular = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPattern LongShort = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPattern LeftPowerBrake = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPattern RightPowerBrake = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPattern CenterPowerBrake = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleBreakPattern FreeHand = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode Auto = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode Always = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENRangeLabelTickMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRangeLabelTickMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickMode Separators = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickMode BeginSeparator = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickMode EndSeparator = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickMode Top = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickMode Center = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelTickMode Bracket = 6 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENRangeLabelFitMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENRangeLabelFitMode None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelFitMode Wrap = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelFitMode Clip = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelFitMode AutoFlip = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENRangeLabelFitMode AutoScale = 8 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleValueMarkerShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleValueMarkerShape Line = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape Bar = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape Triangle = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape InvertedTriangle = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape Ellipse = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape Cross = 5 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape DiagonalCross = 6 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape LineCross = 7 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape LineDiagonalCross = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleValueMarkerShape Star = 9 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleLabelAngleMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleLabelAngleMode View = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleLabelAngleMode Scale = 1 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleLabelVisibilityMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleLabelVisibilityMode Always = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleLabelVisibilityMode CenterInRuler = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleLabelVisibilityMode TextInRuler = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleLabelVisibilityMode TextIntersectsRuler = 3 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENScaleType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENScaleType Orindal = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleType Linear = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleType DateTime = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleType ValueTimeline = 3 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleType RangeTimeline = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENScaleType Angle = 5 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENWeekDayBit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENWeekDayBit None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Monday = 64 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Tuesday = 32 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Wednesday = 16 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Thursday = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Friday = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Saturday = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit Sunday = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENWeekDayBit All = 127 : Public, Static, Literal, HasDefault
Struct Nevron.Nov.Chart.ENMonthBit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Nevron.Nov.Chart.ENMonthBit None = 0 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit January = 1 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit February = 2 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit March = 4 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit April = 8 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit May = 16 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit June = 32 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit July = 64 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit August = 128 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit September = 256 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit October = 512 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit November = 1024 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit December = 2048 : Public, Static, Literal, HasDefault
    Nevron.Nov.Chart.ENMonthBit All = 4095 : Public, Static, Literal, HasDefault
Class Nevron.Nov.Chart.NDockGaugeAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NGaugeAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone, Boolean, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENGaugeAxisDockZone, Boolean, Nevron.Nov.Chart.ENScaleOrientation, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDockGaugeAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DockZoneProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateNewZoneLevelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeforeSpaceProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AfterSpaceProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENGaugeAxisDockZone DockZone 'get set' : 
    Double BeforeSpace 'get set' : 
    Double AfterSpace 'get set' : 
    Boolean CreateNewZoneLevel 'get set' : 
  Methods:
    get_DockZone(): PrivateScope, Public, HideBySig, SpecialName
    set_DockZone(ENGaugeAxisDockZone): PrivateScope, Public, HideBySig, SpecialName
    get_BeforeSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_BeforeSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AfterSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CreateNewZoneLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateNewZoneLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NGaugeAxisAnchor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGaugeAxisAnchorSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NModelGaugeAxisAnchor: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NGaugeAxisAnchor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Nevron.Nov.ENVerticalAlignment, Nevron.Nov.Chart.ENScaleOrientation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Nevron.Nov.ENVerticalAlignment, Nevron.Nov.Chart.ENScaleOrientation, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NModelGaugeAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PositionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
  Properties:
    Double Position 'get set' : 
    Nevron.Nov.ENVerticalAlignment Origin 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(ENVerticalAlignment): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NGaugeAxis: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGaugeAxisSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AnchorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NGaugeAxisAnchor Anchor 'get set' : 
    Nevron.Nov.Graphics.NRange Range 'get set' : 
  Methods:
    get_Anchor(): PrivateScope, Public, HideBySig, SpecialName
    set_Anchor(NGaugeAxisAnchor): PrivateScope, Public, HideBySig, SpecialName
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(NRange): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NGaugeAxisCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Chart.NGaugeAxis]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGaugeAxisCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NCapEffect: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCapEffectShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCapEffectSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CornerRoundingProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENCapEffectShape Shape 'get set' : 
    Double CornerRounding 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENCapEffectShape): PrivateScope, Public, HideBySig, SpecialName
    get_CornerRounding(): PrivateScope, Public, HideBySig, SpecialName
    set_CornerRounding(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NGelCapEffect: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCapEffect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCapEffectShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGelCapEffectSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarginsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NMargins Margins 'get set' : 
    Nevron.Nov.Graphics.NColor BeginColor 'get set' : 
    Nevron.Nov.Graphics.NColor EndColor 'get set' : 
  Methods:
    get_Margins(): PrivateScope, Public, HideBySig, SpecialName
    set_Margins(NMargins): PrivateScope, Public, HideBySig, SpecialName
    get_BeginColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_EndColor(): PrivateScope, Public, HideBySig, SpecialName
    set_EndColor(NColor): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NGlassCapEffect: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCapEffect
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCapEffectShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.NAngle, Nevron.Nov.NAngle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NColor, Nevron.Nov.Graphics.NColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGlassCapEffectSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LightDirectionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LightSpreadProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EdgeDepthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EdgeOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LightColorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DarkColorProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NColor LightColor 'get set' : 
    Nevron.Nov.Graphics.NColor DarkColor 'get set' : 
    Nevron.Nov.NAngle LightDirection 'get set' : 
    Nevron.Nov.NAngle LightSpread 'get set' : 
    Double EdgeDepth 'get set' : 
    Double EdgeOffset 'get set' : 
  Methods:
    get_LightColor(): PrivateScope, Public, HideBySig, SpecialName
    set_LightColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_DarkColor(): PrivateScope, Public, HideBySig, SpecialName
    set_DarkColor(NColor): PrivateScope, Public, HideBySig, SpecialName
    get_LightDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_LightDirection(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_LightSpread(): PrivateScope, Public, HideBySig, SpecialName
    set_LightSpread(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_EdgeDepth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_EdgeOffset(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDial: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NDialRim): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENDialShape, Nevron.Nov.Chart.NDialRim): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDialSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BackgroundFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RimProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CornerRoundingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CenterRoundingProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NFill BackgroundFill 'get set' : 
    Nevron.Nov.Chart.NDialRim Rim 'get set' : 
    Double CornerRounding 'get set' : 
    Double CenterRounding 'get set' : 
    Nevron.Nov.Chart.ENDialShape Shape 'get set' : 
  Methods:
    get_BackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Rim(): PrivateScope, Public, HideBySig, SpecialName
    set_Rim(NDialRim): PrivateScope, Public, HideBySig, SpecialName
    get_CornerRounding(): PrivateScope, Public, HideBySig, SpecialName
    set_CornerRounding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CenterRounding(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterRounding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENDialShape): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDialRim: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDialRimSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NEdgeDialRim: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDialRim
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NEdgeDialRimSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OuterStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OuterBevelWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MiddleBevelWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerBevelWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OuterBevelFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MiddleBevelFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerBevelFillProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NStroke OuterStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke InnerStroke 'get set' : 
    Double OuterBevelWidth 'get set' : 
    Double MiddleBevelWidth 'get set' : 
    Double InnerBevelWidth 'get set' : 
    Nevron.Nov.Graphics.NFill OuterBevelFill 'get set' : 
    Nevron.Nov.Graphics.NFill MiddleBevelFill 'get set' : 
    Nevron.Nov.Graphics.NFill InnerBevelFill 'get set' : 
  Methods:
    get_OuterStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_InnerStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_OuterBevelWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterBevelWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleBevelWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_MiddleBevelWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_InnerBevelWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerBevelWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OuterBevelFill(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterBevelFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleBevelFill(): PrivateScope, Public, HideBySig, SpecialName
    set_MiddleBevelFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_InnerBevelFill(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerBevelFill(NFill): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NStrokeDialRim: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDialRim
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStrokeDialRimSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
  Methods:
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCircularRim: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCircularRimPattern, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCircularRimPattern, Double, Nevron.Nov.Graphics.NFill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCircularRimPattern, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCircularRimSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PatternDepthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShadowProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PatternRepeatCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PatternProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Double Offset 'get set' : 
    Double PatternDepth 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Graphics.NShadow Shadow 'get set' : 
    Int32 PatternRepeatCount 'get set' : 
    Nevron.Nov.Chart.ENCircularRimPattern Pattern 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PatternDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternDepth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Shadow(): PrivateScope, Public, HideBySig, SpecialName
    set_Shadow(NShadow): PrivateScope, Public, HideBySig, SpecialName
    get_PatternRepeatCount(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternRepeatCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(ENCircularRimPattern): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NIndicator: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NInputElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.Ксл
  Fields:
    Nevron.Nov.Dom.NSchema NIndicatorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AllowDraggingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaintOrderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetOriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffseFromScaleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueSnapperProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShadowProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsPressedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IsDraggedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent StartDraggingEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent DragEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NEvent EndDraggingEvent : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.ENIndicatorPaintOrder PaintOrder 'get set' : 
    Nevron.Nov.Chart.ENIndicatorOffsetOriginMode OffsetOriginMode 'get set' : 
    Nevron.Nov.Dom.NNodeRef ScaleAxisRef 'get set' : 
    Nevron.Nov.Chart.NGaugeAxis ScaleAxis 'get set' : 
    Double OffsetFromScale 'get set' : 
    Double Value 'get set' : 
    Nevron.Nov.Chart.NValueSnapper ValueSnapper 'get set' : 
    Nevron.Nov.Chart.NPalette Palette 'get set' : 
    Boolean AllowDragging 'get set' : 
    Boolean IsPressed 'get set' : 
    Boolean IsDragged 'get ' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Graphics.NShadow Shadow 'get set' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NValueChangeEventArgs] ValueChanged: 
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NEventArgs] StartDragging: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NThumbDragEventArgs] Drag: 
    Nevron.Nov.Function`1[Nevron.Nov.UI.NEndActionEventArgs] EndDragging: 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PaintOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_PaintOrder(ENIndicatorPaintOrder): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetOriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetOriginMode(ENIndicatorOffsetOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleAxis(NGaugeAxis): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetFromScale(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetFromScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ValueSnapper(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueSnapper(NValueSnapper): PrivateScope, Public, HideBySig, SpecialName
    get_Palette(): PrivateScope, Public, HideBySig, SpecialName
    set_Palette(NPalette): PrivateScope, Public, HideBySig, SpecialName
    get_AllowDragging(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowDragging(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsPressed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPressed(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsDragged(): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Shadow(): PrivateScope, Public, HideBySig, SpecialName
    set_Shadow(NShadow): PrivateScope, Public, HideBySig, SpecialName
    add_ValueChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ValueChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_StartDragging(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_StartDragging(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_Drag(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_Drag(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_EndDragging(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EndDragging(Function`1): PrivateScope, Public, HideBySig, SpecialName
    HitTest(NPointHitTestVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NIndicatorCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NElementCollection`1[Nevron.Nov.Chart.NIndicator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NIndicatorCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NKnobIndicator: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NMarkerValueIndicator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NKnobIndicatorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MarkerPaintOrderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OuterRimProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerRimProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CapEffectProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaintEffectOffsetProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENKnobMarkerPaintOrder MarkerPaintOrder 'get set' : 
    Double MarkerOffset 'get set' : 
    Nevron.Nov.Chart.NCircularRim OuterRim 'get set' : 
    Nevron.Nov.Chart.NCircularRim InnerRim 'get set' : 
    Nevron.Nov.Chart.NCapEffect CapEffect 'get set' : 
    Double PaintEffectOffset 'get set' : 
  Methods:
    get_MarkerPaintOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerPaintOrder(ENKnobMarkerPaintOrder): PrivateScope, Public, HideBySig, SpecialName
    get_MarkerOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OuterRim(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterRim(NCircularRim): PrivateScope, Public, HideBySig, SpecialName
    get_InnerRim(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerRim(NCircularRim): PrivateScope, Public, HideBySig, SpecialName
    get_CapEffect(): PrivateScope, Public, HideBySig, SpecialName
    set_CapEffect(NCapEffect): PrivateScope, Public, HideBySig, SpecialName
    get_PaintEffectOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_PaintEffectOffset(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NMarkerValueIndicator: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NValueIndicator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMarkerValueIndicatorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENScaleValueMarkerShape Shape 'get set' : 
    Double Height 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENScaleValueMarkerShape): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NNeedleCap: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNeedleCapSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Graphics.NSize Size 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NNeedleValueIndicator: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NValueIndicator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNeedleValueIndicatorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetFromCenterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
  Properties:
    Double OffsetFromCenter 'get set' : 
    Nevron.Nov.Chart.ENNeedleShape Shape 'get set' : 
  Methods:
    get_OffsetFromCenter(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetFromCenter(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENNeedleShape): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRangeIndicator: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NIndicator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeIndicatorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaletteColorModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BarWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BarSpacingProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENRangeIndicatorShape Shape 'get set' : 
    Nevron.Nov.Chart.ENPaletteColorMode PaletteColorMode 'get set' : 
    Double BarWidth 'get set' : 
    Double BarSpacing 'get set' : 
    Nevron.Nov.Chart.ENRangeIndicatorOriginMode OriginMode 'get set' : 
    Double Origin 'get set' : 
    Double BeginWidth 'get set' : 
    Double EndWidth 'get set' : 
    Double BeginOffset 'get set' : 
    Double EndOffset 'get set' : 
    Nevron.Nov.Graphics.NRange Range 'get ' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENRangeIndicatorShape): PrivateScope, Public, HideBySig, SpecialName
    get_PaletteColorMode(): PrivateScope, Public, HideBySig, SpecialName
    set_PaletteColorMode(ENPaletteColorMode): PrivateScope, Public, HideBySig, SpecialName
    get_BarWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BarWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BarSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_BarSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OriginMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginMode(ENRangeIndicatorOriginMode): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BeginWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_EndWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BeginOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_EndOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NValueIndicator: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NIndicator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENIndicatorPaintOrder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueIndicatorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WidthProperty : Public, Static, InitOnly
  Properties:
    Double Width 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NLinearGauge: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NGauge
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLinearGaugeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OrientationProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENLinearGaugeOrientation Orientation 'get set' : 
  Methods:
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    set_Orientation(ENLinearGaugeOrientation): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NGauge: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NInstrumentationWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NGaugeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild AxesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild IndicatorsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NSchema NContentHolderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ContentChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.UI.NWidget Content 'get set' : 
    Nevron.Nov.Chart.NGaugeAxisCollection Axes 'get set' : 
    Nevron.Nov.Chart.NIndicatorCollection Indicators 'get set' : 
  Methods:
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(NWidget): PrivateScope, Public, HideBySig, SpecialName
    get_Axes(): PrivateScope, Public, HideBySig, SpecialName
    set_Axes(NGaugeAxisCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Indicators(): PrivateScope, Public, HideBySig, SpecialName
    set_Indicators(NIndicatorCollection): PrivateScope, Public, HideBySig, SpecialName
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
    AccumulateDisplayChildren(NDisplayVisitor, NList`1): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRadialGauge: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NGauge
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRadialGaugeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SweepAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NeedleCapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DialProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerRadiusProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.NAngle BeginAngle 'get set' : 
    Nevron.Nov.NAngle SweepAngle 'get set' : 
    Double InnerRadius 'get set' : 
    Nevron.Nov.Chart.NNeedleCap NeedleCap 'get set' : 
    Nevron.Nov.Chart.NDial Dial 'get set' : 
  Methods:
    get_BeginAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginAngle(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_SweepAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepAngle(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_InnerRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NeedleCap(): PrivateScope, Public, HideBySig, SpecialName
    set_NeedleCap(NNeedleCap): PrivateScope, Public, HideBySig, SpecialName
    get_Dial(): PrivateScope, Public, HideBySig, SpecialName
    set_Dial(NDial): PrivateScope, Public, HideBySig, SpecialName
    DoPostPaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NInstrumentationWidget: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NInstrumentationWidgetSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CapEffectProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NCapEffect CapEffect 'get set' : 
  Methods:
    get_CapEffect(): PrivateScope, Public, HideBySig, SpecialName
    set_CapEffect(NCapEffect): PrivateScope, Public, HideBySig, SpecialName
    DoPostPaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NCharacterDecimalPositionFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.DataStructures.INFilter`1[Nevron.Nov.Internal.ЕАл]
Class Nevron.Nov.Chart.NLedDisplay: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NInstrumentationWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLedDisplaySchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LitFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DimFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CellSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContentAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CellGapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CellCountModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CellCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayDirectionProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SegmentWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SegmentGapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BoundsModeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENDisplayStyle DisplayStyle 'get set' : 
    Nevron.Nov.Graphics.NFill LitFill 'get set' : 
    Nevron.Nov.Graphics.NFill DimFill 'get set' : 
    Nevron.Nov.Graphics.NSize CellSize 'get set' : 
    Double CellGap 'get set' : 
    Nevron.Nov.ENContentAlignment ContentAlignment 'get set' : 
    Nevron.Nov.Chart.ENDisplayCellCountMode CellCountMode 'get set' : 
    Int32 CellCount 'get set' : 
    Nevron.Nov.Chart.ENDisplayDirection DisplayDirection 'get set' : 
    Double SegmentWidth 'get set' : 
    Double SegmentGap 'get set' : 
    Nevron.Nov.Chart.ENBoundsMode BoundsMode 'get set' : 
  Methods:
    get_DisplayStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayStyle(ENDisplayStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LitFill(): PrivateScope, Public, HideBySig, SpecialName
    set_LitFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_DimFill(): PrivateScope, Public, HideBySig, SpecialName
    set_DimFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_CellSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CellSize(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_CellGap(): PrivateScope, Public, HideBySig, SpecialName
    set_CellGap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ContentAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentAlignment(ENContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_CellCountMode(): PrivateScope, Public, HideBySig, SpecialName
    set_CellCountMode(ENDisplayCellCountMode): PrivateScope, Public, HideBySig, SpecialName
    get_CellCount(): PrivateScope, Public, HideBySig, SpecialName
    set_CellCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayDirection(ENDisplayDirection): PrivateScope, Public, HideBySig, SpecialName
    get_SegmentWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_SegmentWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SegmentGap(): PrivateScope, Public, HideBySig, SpecialName
    set_SegmentGap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BoundsMode(): PrivateScope, Public, HideBySig, SpecialName
    set_BoundsMode(ENBoundsMode): PrivateScope, Public, HideBySig, SpecialName
    DoPrePaint(NPaintVisitor): PrivateScope, Public, Virtual, HideBySig
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NNumericLedDisplay: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NLedDisplay
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericLedDisplaySchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecimalLitFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecimalDimFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowLeadingZerosProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AttachSignToNumberProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowDecimalSeparatorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableDecimalFormattingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecimalCellSizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecimalSegmentGapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecimalSegmentWidthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CellAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DotCellStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SignModeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENDisplaySignMode SignMode 'get set' : 
    Nevron.Nov.ENVerticalAlignment CellAlignment 'get set' : 
    Boolean ShowLeadingZeros 'get set' : 
    Double Value 'get set' : 
    Nevron.Nov.Dom.NNumericValueFormatter ValueFormatter 'get set' : 
    Boolean ShowDecimalSeparator 'get set' : 
    Nevron.Nov.Graphics.NFill DecimalLitFill 'get set' : 
    Nevron.Nov.Graphics.NFill DecimalDimFill 'get set' : 
    Boolean EnableDecimalFormatting 'get set' : 
    Boolean AttachSignToNumber 'get set' : 
    Double DecimalSegmentWidth 'get set' : 
    Double DecimalSegmentGap 'get set' : 
    Nevron.Nov.Graphics.NSize DecimalCellSize 'get set' : 
  Methods:
    get_SignMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SignMode(ENDisplaySignMode): PrivateScope, Public, HideBySig, SpecialName
    get_CellAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_CellAlignment(ENVerticalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_ShowLeadingZeros(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowLeadingZeros(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(NNumericValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_ShowDecimalSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowDecimalSeparator(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalLitFill(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalLitFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalDimFill(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalDimFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_EnableDecimalFormatting(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableDecimalFormatting(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AttachSignToNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_AttachSignToNumber(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalSegmentWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalSegmentWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalSegmentGap(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalSegmentGap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalCellSize(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalCellSize(NSize): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NLegendInterlaceStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLegendInterlaceStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IntervalProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InfiniteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TypeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENLegendInterlaceStyleType Type 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Int32 Begin 'get set' : 
    Boolean Infinite 'get set' : 
    Int32 End  'get set' : 
    Int32 Length 'get set' : 
    Int32 Interval 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ENLegendInterlaceStyleType): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Begin(): PrivateScope, Public, HideBySig, SpecialName
    set_Begin(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Infinite(): PrivateScope, Public, HideBySig, SpecialName
    set_Infinite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Interval(): PrivateScope, Public, HideBySig, SpecialName
    set_Interval(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NLegendInterlaceStylesCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttributeCollection`1[Nevron.Nov.Chart.NLegendInterlaceStyle]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLegendInterlaceStyleCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NLegend: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NWidget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLegendSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild HeaderChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FooterChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ItemsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InterlaceStylesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ExpandModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RowCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ColCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalGridStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalGridStrokeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENLegendExpandMode ExpandMode 'get set' : 
    Int32 RowCount 'get set' : 
    Int32 ColCount 'get set' : 
    Nevron.Nov.UI.NWidget Header 'get set' : 
    Nevron.Nov.UI.NWidget Footer 'get set' : 
    Nevron.Nov.Chart.NLegendItemCollection Items 'get set' : 
    Nevron.Nov.Chart.NLegendInterlaceStylesCollection InterlaceStyles 'get set' : 
    Nevron.Nov.Graphics.NStroke HorizontalGridStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke VerticalGridStroke 'get set' : 
  Methods:
    get_ExpandMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpandMode(ENLegendExpandMode): PrivateScope, Public, HideBySig, SpecialName
    get_RowCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RowCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ColCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ColCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Header(): PrivateScope, Public, HideBySig, SpecialName
    set_Header(NWidget): PrivateScope, Public, HideBySig, SpecialName
    get_Footer(): PrivateScope, Public, HideBySig, SpecialName
    set_Footer(NWidget): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(NLegendItemCollection): PrivateScope, Public, HideBySig, SpecialName
    get_InterlaceStyles(): PrivateScope, Public, HideBySig, SpecialName
    set_InterlaceStyles(NLegendInterlaceStylesCollection): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalGridStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalGridStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalGridStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalGridStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NLegendItemCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NVisualCollection`1[Nevron.Nov.UI.NWidget]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLegendItemCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NChartLoadAssemblyType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Chart.NChartModule: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.NModule
  Properties:
    Nevron.Nov.Chart.NChartModule Instance 'get ' : 
  Methods:
    Install(): PrivateScope, Public, Virtual, HideBySig
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Nevron.Nov.Chart.NChartUIThemePlugin: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.UI.NUIThemePlugin
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateStyles(NUITheme): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NCalendarRule: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.NDateTimeRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCalendarRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScheduleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDailySchedule Schedule 'get set' : 
    Nevron.Nov.NDateTimeRange Range 'get set' : 
  Methods:
    get_Schedule(): PrivateScope, Public, HideBySig, SpecialName
    set_Schedule(NDailySchedule): PrivateScope, Public, HideBySig, SpecialName
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(NDateTimeRange): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCalendarRuleCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttributeCollection`1[Nevron.Nov.Chart.NCalendarRule]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCalendarRuleCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NDailySchedule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.DataStructures.NList`1[System.Int64]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDailyScheduleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TicksProperty : Public, Static, InitOnly
  Properties:
    Int64 EmptyTicks 'get ' : 
    Int64 NonEmptyTicks 'get ' : 
  Methods:
    get_EmptyTicks(): PrivateScope, Public, HideBySig, SpecialName
    get_NonEmptyTicks(): PrivateScope, Public, HideBySig, SpecialName
    AddTicks(Int64&, Int64): PrivateScope, Public, HideBySig
    ForwardSnapTick(Int64): PrivateScope, Public, HideBySig
    BackwardSnapTick(Int64): PrivateScope, Public, HideBySig
    GetEmptyTicksBefore(Int64): PrivateScope, Public, HideBySig
    GetTotalTicksFromNonEmptyTicks(Int64): PrivateScope, Public, HideBySig
    IsEmptyAt(Int64): PrivateScope, Public, HideBySig
    SetHourRange(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    SetTickRange(Int64, Int64, Boolean): PrivateScope, Public, HideBySig
Struct Nevron.Nov.Chart.NDailyScheduleEnumerator: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Nevron.Nov.Chart.NDailySchedule): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    GetNextRange(NTickRange&, Boolean&): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NDateTimeRangeRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCalendarRule
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.NDateTimeRange, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeRangeRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WorkingProperty : Public, Static, InitOnly
  Properties:
    Boolean Working 'get set' : 
  Methods:
    get_Working(): PrivateScope, Public, HideBySig, SpecialName
    set_Working(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NMonthDayRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCalendarRule
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENMonthBit, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMonthDayRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WorkingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DayProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MonthsProperty : Public, Static, InitOnly
  Properties:
    Boolean Working 'get set' : 
    Nevron.Nov.Chart.ENMonthBit Months 'get set' : 
    Int32 Day  'get set' : 
    Int32 MonthCount 'get ' : 
    Boolean January 'get set' : 
    Boolean February 'get set' : 
    Boolean March 'get set' : 
    Boolean April 'get set' : 
    Boolean May 'get set' : 
    Boolean June 'get set' : 
    Boolean July 'get set' : 
    Boolean August 'get set' : 
    Boolean September 'get set' : 
    Boolean October 'get set' : 
    Boolean November 'get set' : 
    Boolean December 'get set' : 
  Methods:
    get_Working(): PrivateScope, Public, HideBySig, SpecialName
    set_Working(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Months(): PrivateScope, Public, HideBySig, SpecialName
    set_Months(ENMonthBit): PrivateScope, Public, HideBySig, SpecialName
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    set_Day(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MonthCount(): PrivateScope, Public, HideBySig, SpecialName
    get_January(): PrivateScope, Public, HideBySig, SpecialName
    set_January(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_February(): PrivateScope, Public, HideBySig, SpecialName
    set_February(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_March(): PrivateScope, Public, HideBySig, SpecialName
    set_March(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_April(): PrivateScope, Public, HideBySig, SpecialName
    set_April(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_May(): PrivateScope, Public, HideBySig, SpecialName
    set_May(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_June(): PrivateScope, Public, HideBySig, SpecialName
    set_June(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_July(): PrivateScope, Public, HideBySig, SpecialName
    set_July(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_August(): PrivateScope, Public, HideBySig, SpecialName
    set_August(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_September(): PrivateScope, Public, HideBySig, SpecialName
    set_September(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_October(): PrivateScope, Public, HideBySig, SpecialName
    set_October(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_November(): PrivateScope, Public, HideBySig, SpecialName
    set_November(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_December(): PrivateScope, Public, HideBySig, SpecialName
    set_December(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct Nevron.Nov.Chart.NTickRange: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Begin : Public
    Int64 End : Public
  Properties:
    Boolean IsNormalized 'get ' : 
    Int64 Length 'get ' : 
  Methods:
    get_IsNormalized(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    Contains(Int64): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NWeekDayRule: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCalendarRule
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENWeekDayBit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NWeekDayRuleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WeekDaysProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENWeekDayBit WeekDays 'get set' : 
    Boolean Monday 'get set' : 
    Boolean Tuesday 'get set' : 
    Boolean Wednesday 'get set' : 
    Boolean Thursday 'get set' : 
    Boolean Friday 'get set' : 
    Boolean Saturday 'get set' : 
    Boolean Sunday 'get set' : 
  Methods:
    get_WeekDays(): PrivateScope, Public, HideBySig, SpecialName
    set_WeekDays(ENWeekDayBit): PrivateScope, Public, HideBySig, SpecialName
    get_Monday(): PrivateScope, Public, HideBySig, SpecialName
    set_Monday(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Tuesday(): PrivateScope, Public, HideBySig, SpecialName
    set_Tuesday(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Wednesday(): PrivateScope, Public, HideBySig, SpecialName
    set_Wednesday(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Thursday(): PrivateScope, Public, HideBySig, SpecialName
    set_Thursday(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Friday(): PrivateScope, Public, HideBySig, SpecialName
    set_Friday(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Saturday(): PrivateScope, Public, HideBySig, SpecialName
    set_Saturday(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Sunday(): PrivateScope, Public, HideBySig, SpecialName
    set_Sunday(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NWorkCalendar: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NWorkCalendarSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CultureNameProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RulesProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NCalendarRuleCollection Rules 'get set' : 
    System.String CultureName 'get set' : 
  Methods:
    get_Rules(): PrivateScope, Public, HideBySig, SpecialName
    set_Rules(NCalendarRuleCollection): PrivateScope, Public, HideBySig, SpecialName
    get_CultureName(): PrivateScope, Public, HideBySig, SpecialName
    set_CultureName(String): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAngularScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NStandardScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAngularScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMajorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMinorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AngleUnitProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CycleLengthProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.NAngle CustomStep 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.NAngle] CustomSteps 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.NAngle] CustomMinorTicks 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.NAngle] CustomMajorTicks 'get set' : 
    Nevron.Nov.NAngle CycleLength 'get set' : 
    Nevron.Nov.NUnit AngleUnit 'get set' : 
  Methods:
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMinorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMinorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMajorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CycleLength(): PrivateScope, Public, HideBySig, SpecialName
    set_CycleLength(NAngle): PrivateScope, Public, HideBySig, SpecialName
    get_AngleUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleUnit(NUnit): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDateTimeScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NStandardScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoDateTimeUnitsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMajorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMinorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableCalendarProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CalendarProperty : Public, Static, InitOnly
  Properties:
    System.DateTime Origin 'get set' : 
    Nevron.Nov.NDateTimeSpan CustomStep 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.NDateTimeSpan] CustomSteps 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.DateTime] CustomMajorTicks 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.DateTime] CustomMinorTicks 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.NDateTimeUnit] AutoDateTimeUnits 'get set' : 
    Boolean EnableCalendar 'get set' : 
    Nevron.Nov.Chart.NWorkCalendar Calendar 'get set' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMajorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMinorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMinorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_AutoDateTimeUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoDateTimeUnits(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_EnableCalendar(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableCalendar(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Calendar(): PrivateScope, Public, HideBySig, SpecialName
    set_Calendar(NWorkCalendar): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NHierarchicalScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHierarchicalScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LevelTopPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LevelBottomPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StickLengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FirstRowLabelOverlapResolveLayoutsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GroupRowLabelOverlapResolveLayoutsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FirstRowGridStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GroupRowGridStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FirstRowRangeFitModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GroupRowRangeFitModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FirstRowGridChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild GroupRowGridChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FirstRowLabelTextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GroupRowLabelTextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ChildNodesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FirstRowLabelAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GroupRowLabelAngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateSeparatorForEachLevelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayDataPointsBetweenTicksProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENRangeLabelFitMode FirstRowRangeFitMode 'get set' : 
    Nevron.Nov.Chart.ENRangeLabelFitMode GroupRowRangeFitMode 'get set' : 
    Nevron.Nov.Chart.ENFirstRowGridStyle FirstRowGridStyle 'get set' : 
    Nevron.Nov.Chart.ENGroupRowGridStyle GroupRowGridStyle 'get set' : 
    Nevron.Nov.UI.NTextStyle FirstRowLabelTextStyle 'get set' : 
    Nevron.Nov.UI.NTextStyle GroupRowLabelTextStyle 'get set' : 
    Nevron.Nov.Chart.NScaleLabelAngle FirstRowLabelAngle 'get set' : 
    Nevron.Nov.Chart.NScaleLabelAngle GroupRowLabelAngle 'get set' : 
    Double StickLength 'get set' : 
    Double LevelTopPadding 'get set' : 
    Double LevelBottomPadding 'get set' : 
    Double Origin 'get set' : 
    Nevron.Nov.Chart.NHierarchicalScaleNodeCollection ChildNodes 'get set' : 
    Boolean CreateSeparatorForEachLevel 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.ENLevelLabelsLayout] FirstRowLabelOverlapResolveLayouts 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.ENLevelLabelsLayout] GroupRowLabelOverlapResolveLayouts 'get set' : 
    Boolean DisplayDataPointsBetweenTicks 'get set' : 
  Methods:
    get_FirstRowRangeFitMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRowRangeFitMode(ENRangeLabelFitMode): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRowRangeFitMode(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupRowRangeFitMode(ENRangeLabelFitMode): PrivateScope, Public, HideBySig, SpecialName
    get_FirstRowGridStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRowGridStyle(ENFirstRowGridStyle): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRowGridStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupRowGridStyle(ENGroupRowGridStyle): PrivateScope, Public, HideBySig, SpecialName
    get_FirstRowLabelTextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRowLabelTextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRowLabelTextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupRowLabelTextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_FirstRowLabelAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRowLabelAngle(NScaleLabelAngle): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRowLabelAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupRowLabelAngle(NScaleLabelAngle): PrivateScope, Public, HideBySig, SpecialName
    get_StickLength(): PrivateScope, Public, HideBySig, SpecialName
    set_StickLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LevelTopPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelTopPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LevelBottomPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelBottomPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ChildNodes(): PrivateScope, Public, HideBySig, SpecialName
    set_ChildNodes(NHierarchicalScaleNodeCollection): PrivateScope, Public, HideBySig, SpecialName
    get_CreateSeparatorForEachLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateSeparatorForEachLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FirstRowLabelOverlapResolveLayouts(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRowLabelOverlapResolveLayouts(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_GroupRowLabelOverlapResolveLayouts(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupRowLabelOverlapResolveLayouts(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayDataPointsBetweenTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayDataPointsBetweenTicks(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NHierarchicalScaleNode: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHierarchicalScaleNodeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild NodesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LengthProperty : Public, Static, InitOnly
  Properties:
    System.String Text 'get set' : 
    Double Length 'get set' : 
    Nevron.Nov.Chart.NRangeScaleLabelStyle LabelStyle 'get set' : 
    Nevron.Nov.Chart.NHierarchicalScaleNodeCollection Nodes 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LabelStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelStyle(NRangeScaleLabelStyle): PrivateScope, Public, HideBySig, SpecialName
    get_Nodes(): PrivateScope, Public, HideBySig, SpecialName
    set_Nodes(NHierarchicalScaleNodeCollection): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NHierarchicalScaleNodeCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElementCollection`1[Nevron.Nov.Chart.NHierarchicalScaleNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NHierarchicalScaleNodeCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NScale: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InvertProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild RulerChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild StripCollectionChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ScaleBreakCollectionChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SectionCollectionChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild InnerMajorTicksChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild OuterMajorTicksChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ViewRangeInflateModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LogicalInflateProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AbsoluteInflateProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateViewRangeBeginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateViewRangeEndProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateContentRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild TitleChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild MajorGridLinesChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild CustomLabelsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateNewLevelForCustomLabelsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomLabelsLevelOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomLabelOverlapResolveLayoutsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NScaleGridLines MajorGridLines 'get set' : 
    Nevron.Nov.Chart.NScaleTicks InnerMajorTicks 'get set' : 
    Nevron.Nov.Chart.NScaleTicks OuterMajorTicks 'get set' : 
    Nevron.Nov.Chart.NScaleTitle Title 'get set' : 
    Nevron.Nov.Chart.NRuler Ruler 'get set' : 
    Boolean Invert 'get set' : 
    Boolean InflateContentRange 'get set' : 
    Boolean InflateViewRangeBegin 'get set' : 
    Boolean InflateViewRangeEnd 'get set' : 
    Nevron.Nov.Chart.ENScaleViewRangeInflateMode ViewRangeInflateMode 'get set' : 
    Nevron.Nov.Graphics.NRange LogicalInflate 'get set' : 
    Nevron.Nov.Graphics.NRange AbsoluteInflate 'get set' : 
    Nevron.Nov.Chart.NScaleStripCollection Strips 'get set' : 
    Nevron.Nov.Chart.NScaleSectionCollection Sections 'get set' : 
    Nevron.Nov.Chart.NScaleBreakCollection ScaleBreaks 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.ENLevelLabelsLayout] CustomLabelOverlapResolveLayouts 'get set' : 
    Boolean CreateNewLevelForCustomLabels 'get set' : 
    Double CustomLabelsLevelOffset 'get set' : 
    Nevron.Nov.Chart.NCustomLabelCollection CustomLabels 'get set' : 
  Methods:
    get_MajorGridLines(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorGridLines(NScaleGridLines): PrivateScope, Public, HideBySig, SpecialName
    get_InnerMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerMajorTicks(NScaleTicks): PrivateScope, Public, HideBySig, SpecialName
    get_OuterMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterMajorTicks(NScaleTicks): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(NScaleTitle): PrivateScope, Public, HideBySig, SpecialName
    get_Ruler(): PrivateScope, Public, HideBySig, SpecialName
    set_Ruler(NRuler): PrivateScope, Public, HideBySig, SpecialName
    get_Invert(): PrivateScope, Public, HideBySig, SpecialName
    set_Invert(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InflateContentRange(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateContentRange(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InflateViewRangeBegin(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateViewRangeBegin(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InflateViewRangeEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateViewRangeEnd(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ViewRangeInflateMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewRangeInflateMode(ENScaleViewRangeInflateMode): PrivateScope, Public, HideBySig, SpecialName
    get_LogicalInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_LogicalInflate(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_AbsoluteInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_AbsoluteInflate(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_Strips(): PrivateScope, Public, HideBySig, SpecialName
    set_Strips(NScaleStripCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Sections(): PrivateScope, Public, HideBySig, SpecialName
    set_Sections(NScaleSectionCollection): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleBreaks(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleBreaks(NScaleBreakCollection): PrivateScope, Public, HideBySig, SpecialName
    get_CustomLabelOverlapResolveLayouts(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomLabelOverlapResolveLayouts(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CreateNewLevelForCustomLabels(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateNewLevelForCustomLabels(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CustomLabelsLevelOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomLabelsLevelOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CustomLabels(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomLabels(NCustomLabelCollection): PrivateScope, Public, HideBySig, SpecialName
    SetColor(NColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Chart.NScaleElement: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NChartElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleElementSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NScaleElementCollection`1[TScaleElement]: AutoLayout, AnsiClass, Class, Public, Abstract
  Type parameter: TScaleElement, Nevron.Nov.Chart.NScaleElement
  :Nevron.Nov.Dom.NElementCollection`1[TScaleElement]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleElementCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NStandardScale: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStandardScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleLevelBuildModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinTickDistanceProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxTickCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FixedTickCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseOriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild LabelsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MajorTickModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinorTickCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoMinorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild InnerMinorTicksChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild OuterMinorTicksChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateBeginContentRangeWithCustomTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateEndContentRangeWithCustomTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InnerTicksLevelFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OuterTicksLevelFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild MinorGridLinesChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENMajorTickMode MajorTickMode 'get set' : 
    Int32 MaxTickCount 'get set' : 
    Int32 FixedTickCount 'get set' : 
    Double MinTickDistance 'get set' : 
    Boolean InflateBeginContentRangeWithCustomTicks 'get set' : 
    Boolean InflateEndContentRangeWithCustomTicks 'get set' : 
    Nevron.Nov.Chart.NScaleTicks InnerMinorTicks 'get set' : 
    Nevron.Nov.Chart.NScaleTicks OuterMinorTicks 'get set' : 
    Int32 MinorTickCount 'get set' : 
    Boolean AutoMinorTicks 'get set' : 
    Nevron.Nov.Chart.NScaleLabels Labels 'get set' : 
    Boolean UseOrigin 'get set' : 
    Nevron.Nov.Chart.ENScaleLevelBuildMode ScaleLevelBuildMode 'get set' : 
    Nevron.Nov.Graphics.NFill OuterTicksLevelFill 'get set' : 
    Nevron.Nov.Chart.NScaleGridLines MinorGridLines 'get set' : 
  Methods:
    get_MajorTickMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorTickMode(ENMajorTickMode): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTickCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTickCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FixedTickCount(): PrivateScope, Public, HideBySig, SpecialName
    set_FixedTickCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinTickDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_MinTickDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_InflateBeginContentRangeWithCustomTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateBeginContentRangeWithCustomTicks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InflateEndContentRangeWithCustomTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateEndContentRangeWithCustomTicks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InnerMinorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerMinorTicks(NScaleTicks): PrivateScope, Public, HideBySig, SpecialName
    get_OuterMinorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterMinorTicks(NScaleTicks): PrivateScope, Public, HideBySig, SpecialName
    get_MinorTickCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorTickCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AutoMinorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoMinorTicks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Labels(): PrivateScope, Public, HideBySig, SpecialName
    set_Labels(NScaleLabels): PrivateScope, Public, HideBySig, SpecialName
    get_UseOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_UseOrigin(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleLevelBuildMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleLevelBuildMode(ENScaleLevelBuildMode): PrivateScope, Public, HideBySig, SpecialName
    get_OuterTicksLevelFill(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterTicksLevelFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_MinorGridLines(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorGridLines(NScaleGridLines): PrivateScope, Public, HideBySig, SpecialName
    SetColor(NColor): PrivateScope, Public, Virtual, HideBySig
    SetPredefinedScale(ENPredefinedScaleStyle): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NLinearScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NNumericScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLinearScaleSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NLogarithmicScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTransformedScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLogarithmicScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LogarithmBaseProperty : Public, Static, InitOnly
  Properties:
    Double LogarithmBase 'get set' : 
  Methods:
    get_LogarithmBase(): PrivateScope, Public, HideBySig, SpecialName
    set_LogarithmBase(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NNumericScale: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NStandardScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableDecimalRoundingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMajorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMinorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoMinStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoMaxStepProperty : Public, Static, InitOnly
  Properties:
    Double CustomStep 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Double] CustomSteps 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Double] CustomMinorTicks 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Double] CustomMajorTicks 'get set' : 
    Double Origin 'get set' : 
    Boolean EnableDecimalRounding 'get set' : 
    Double AutoMinStep 'get set' : 
    Double AutoMaxStep 'get set' : 
  Methods:
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMinorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMinorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMajorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableDecimalRounding(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableDecimalRounding(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoMinStep(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoMinStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AutoMaxStep(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoMaxStep(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NTransformedScale: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NNumericScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTransformedScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TransformScaleProperty : Public, Static, InitOnly
  Properties:
    Boolean TransformScale 'get set' : 
  Methods:
    get_TransformScale(): PrivateScope, Public, HideBySig, SpecialName
    set_TransformScale(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NOrdinalScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NStandardScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NOrdinalScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMajorTicksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoLabelsBaseProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayDataPointsBetweenTicksProperty : Public, Static, InitOnly
  Properties:
    Boolean DisplayDataPointsBetweenTicks 'get set' : 
    Int32 CustomStep 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Int32] CustomSteps 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Int32] CustomMajorTicks 'get set' : 
    Int32 Origin 'get set' : 
  Methods:
    get_DisplayDataPointsBetweenTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayDataPointsBetweenTicks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMajorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Int32): PrivateScope, Public, HideBySig, SpecialName
Interface Nevron.Nov.Chart.INValueTransform: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Transform(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Chart.NPriceTimeScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NStandardScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPriceTimeScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomMajorTicksProperty : Public, Static, InitOnly
  Properties:
    Int32 Origin 'get set' : 
    Int32 CustomStep 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Int32] CustomSteps 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Int32] CustomMajorTicks 'get set' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_CustomMajorTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomMajorTicks(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NTimelineScale: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTimelineScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoDateTimeUnitsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EnableCalendarProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CalendarProperty : Public, Static, InitOnly
  Properties:
    System.DateTime Origin 'get set' : 
    Nevron.Nov.Chart.ENTimelineScaleRowTickMode TickMode 'get set' : 
    Double MinTickDistance 'get set' : 
    Int32 MaxTickCount 'get set' : 
    Nevron.Nov.NDateTimeSpan CustomStep 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.NDateTimeUnit] AutoDateTimeUnits 'get set' : 
    Boolean EnableCalendar 'get set' : 
    Nevron.Nov.Chart.NWorkCalendar Calendar 'get set' : 
    Nevron.Nov.Chart.NTimelineScaleRow[] Rows 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_TickMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TickMode(ENTimelineScaleRowTickMode): PrivateScope, Public, HideBySig, SpecialName
    get_MinTickDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_MinTickDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTickCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTickCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_AutoDateTimeUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoDateTimeUnits(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_EnableCalendar(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableCalendar(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Calendar(): PrivateScope, Public, HideBySig, SpecialName
    set_Calendar(NWorkCalendar): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Nevron.Nov.Chart.NTimelineScaleRow: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTimelineScaleRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TickModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinTickDistanceProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxTickCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild LabelsChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseGridProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild GridLinesChild : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.ENTimelineScaleRowTickMode TickMode 'get set' : 
    Double MinTickDistance 'get set' : 
    Int32 MaxTickCount 'get set' : 
    Nevron.Nov.NDateTimeSpan CustomStep 'get set' : 
    Boolean UseGrid 'get set' : 
    Nevron.Nov.Chart.NScaleGridLines GridLines 'get set' : 
    Nevron.Nov.Chart.NTimelineLabels Labels 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TickMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TickMode(ENTimelineScaleRowTickMode): PrivateScope, Public, HideBySig, SpecialName
    get_MinTickDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_MinTickDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxTickCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxTickCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_UseGrid(): PrivateScope, Public, HideBySig, SpecialName
    set_UseGrid(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_GridLines(): PrivateScope, Public, HideBySig, SpecialName
    set_GridLines(NScaleGridLines): PrivateScope, Public, HideBySig, SpecialName
    get_Labels(): PrivateScope, Public, HideBySig, SpecialName
    set_Labels(NTimelineLabels): PrivateScope, Public, HideBySig, SpecialName
    SetPredefinedFormattingForRow(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Chart.NRangeTimelineScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTimelineScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeTimelineScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LevelTopPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LevelBottomPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CreateSeparatorForEachRowProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FirstRowChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SecondRowChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ThirdRowChild : Public, Static, InitOnly
  Properties:
    Boolean CreateSeparatorForEachRow 'get set' : 
    Double LevelTopPadding 'get set' : 
    Double LevelBottomPadding 'get set' : 
    Nevron.Nov.Chart.NRangeTimelineScaleRow FirstRow 'get set' : 
    Nevron.Nov.Chart.NRangeTimelineScaleRow SecondRow 'get set' : 
    Nevron.Nov.Chart.NRangeTimelineScaleRow ThirdRow 'get set' : 
    Nevron.Nov.Chart.NTimelineScaleRow[] Rows 'get ' : 
  Methods:
    get_CreateSeparatorForEachRow(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateSeparatorForEachRow(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LevelTopPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelTopPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LevelBottomPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelBottomPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FirstRow(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRow(NRangeTimelineScaleRow): PrivateScope, Public, HideBySig, SpecialName
    get_SecondRow(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondRow(NRangeTimelineScaleRow): PrivateScope, Public, HideBySig, SpecialName
    get_ThirdRow(): PrivateScope, Public, HideBySig, SpecialName
    set_ThirdRow(NRangeTimelineScaleRow): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetColor(NColor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NRangeTimelineScaleRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTimelineScaleRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeTimelineScaleRowSchema : Public, Static, InitOnly
  Methods:
    SetPredefinedFormattingForRow(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NValueTimelineScale: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTimelineScale
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueTimelineScaleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild FirstRowChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild SecondRowChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ThirdRowChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NValueTimelineScaleRow FirstRow 'get set' : 
    Nevron.Nov.Chart.NValueTimelineScaleRow SecondRow 'get set' : 
    Nevron.Nov.Chart.NValueTimelineScaleRow ThirdRow 'get set' : 
    Nevron.Nov.Chart.NTimelineScaleRow[] Rows 'get ' : 
  Methods:
    get_FirstRow(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstRow(NValueTimelineScaleRow): PrivateScope, Public, HideBySig, SpecialName
    get_SecondRow(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondRow(NValueTimelineScaleRow): PrivateScope, Public, HideBySig, SpecialName
    get_ThirdRow(): PrivateScope, Public, HideBySig, SpecialName
    set_ThirdRow(NValueTimelineScaleRow): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetColor(NColor): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NValueTimelineScaleRow: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NTimelineScaleRow
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueTimelineScaleRowSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild OuterTicksChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild InnerTicksChild : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NScaleTicks OuterTicks 'get set' : 
    Nevron.Nov.Chart.NScaleTicks InnerTicks 'get set' : 
  Methods:
    get_OuterTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterTicks(NScaleTicks): PrivateScope, Public, HideBySig, SpecialName
    get_InnerTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerTicks(NScaleTicks): PrivateScope, Public, HideBySig, SpecialName
    SetPredefinedFormattingForRow(Int32): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NDateTimeDecorationRange: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NStandardDecorationRange
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeDecorationRangeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomValuesProperty : Public, Static, InitOnly
  Properties:
    System.DateTime Origin 'get set' : 
    Nevron.Nov.NDateTimeSpan CustomStep 'get set' : 
    Nevron.Nov.NDateTimeSpan[] CustomSteps 'get set' : 
    System.DateTime[] CustomValues 'get set' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(NDateTimeSpan[]): PrivateScope, Public, HideBySig, SpecialName
    get_CustomValues(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomValues(DateTime[]): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDecorationRange: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDecorationRangeSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NMajorTickDecorationRange: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDecorationRange
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMajorTickDecorationRangeSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NMinorTickDecorationRange: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NDecorationRange
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NMinorTickDecorationRangeSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NNumericDecorationRange: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NStandardDecorationRange
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericDecorationRangeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomStepsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CustomValuesProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoMinStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoMaxStepProperty : Public, Static, InitOnly
  Properties:
    Double CustomStep 'get set' : 
    Double[] CustomSteps 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[System.Double] CustomValues 'get set' : 
    Double Origin 'get set' : 
    Double AutoMinStep 'get set' : 
    Double AutoMaxStep 'get set' : 
  Methods:
    get_CustomStep(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CustomSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomSteps(Double[]): PrivateScope, Public, HideBySig, SpecialName
    get_CustomValues(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomValues(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AutoMinStep(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoMinStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AutoMaxStep(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoMaxStep(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NStandardDecorationRange: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NDecorationRange
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NStandardDecorationRangeSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SamplingModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinDistancePropery : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxCountProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseOriginProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENSamplingMode SamplingMode 'get set' : 
    Boolean UseOrigin 'get set' : 
    Double MinDistance 'get set' : 
    Int32 MaxCount 'get set' : 
  Methods:
    get_SamplingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SamplingMode(ENSamplingMode): PrivateScope, Public, HideBySig, SpecialName
    get_UseOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_UseOrigin(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCount(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NTimelineLabels: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NTimelineLabelsSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProviderProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NScaleLabelStyle Style 'get set' : 
    Nevron.Nov.Chart.NScaleLabelTextProvider TextProvider 'get set' : 
  Methods:
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(NScaleLabelStyle): PrivateScope, Public, HideBySig, SpecialName
    get_TextProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_TextProvider(NScaleLabelTextProvider): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleLabels: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleLabelsSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProviderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NumberOfTicksPerLabelProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty GenerationModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OverlapResolveLayoutsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TopLavelPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BottomLevelPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayFirstProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DisplayLastProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LevelFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.NScaleLabelStyle Style 'get set' : 
    Nevron.Nov.Graphics.NFill LevelFill 'get set' : 
    Int32 NumberOfTicksPerLabel 'get set' : 
    Nevron.Nov.Chart.NScaleLabelTextProvider TextProvider 'get set' : 
    Nevron.Nov.Chart.ENLabelGenerationMode GenerationMode 'get set' : 
    Nevron.Nov.Dom.NDomArray`1[Nevron.Nov.Chart.ENLevelLabelsLayout] OverlapResolveLayouts 'get set' : 
    Boolean DisplayFirst 'get set' : 
    Boolean DisplayLast 'get set' : 
    Double TopLavelPadding 'get set' : 
    Double BottomLevelPadding 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(NScaleLabelStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LevelFill(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfTicksPerLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfTicksPerLabel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TextProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_TextProvider(NScaleLabelTextProvider): PrivateScope, Public, HideBySig, SpecialName
    get_GenerationMode(): PrivateScope, Public, HideBySig, SpecialName
    set_GenerationMode(ENLabelGenerationMode): PrivateScope, Public, HideBySig, SpecialName
    get_OverlapResolveLayouts(): PrivateScope, Public, HideBySig, SpecialName
    set_OverlapResolveLayouts(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayFirst(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayFirst(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayLast(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayLast(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TopLavelPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_TopLavelPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BottomLevelPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_BottomLevelPadding(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleGridLines: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleGridLinesSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecorationRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ExtendInChartAreaProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDecorationRange DecorationRange 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Boolean ExtendInChartArea 'get set' : 
    Boolean Visible 'get set' : 
  Methods:
    get_DecorationRange(): PrivateScope, Public, HideBySig, SpecialName
    set_DecorationRange(NDecorationRange): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendInChartArea(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendInChartArea(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCustomLabel: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCustomLabelSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProperty : Public, Static, InitOnly
  Properties:
    System.String Text 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCustomLabelCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElementCollection`1[Nevron.Nov.Chart.NCustomLabel]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCustomLabelCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NCustomRangeLabel: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCustomLabel
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NRange, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCustomRangeLabelSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NRange Range 'get set' : 
    Nevron.Nov.Chart.NRangeScaleLabelStyle LabelStyle 'get set' : 
  Methods:
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_LabelStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelStyle(NRangeScaleLabelStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCustomValueLabel: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NCustomLabel
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCustomValueLabelSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueProperty : Public, Static, InitOnly
  Properties:
    Double Value 'get set' : 
    Nevron.Nov.Chart.NValueScaleLabelStyle LabelStyle 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LabelStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelStyle(NValueScaleLabelStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRangeScaleLabelStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleLabelStyle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.UI.NTextStyle, Nevron.Nov.ENContentAlignment, Nevron.Nov.Chart.NScaleLabelAngle, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeScaleLabelStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TickPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleTickLeftPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleTickRightPaddingProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TickOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginCapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndCapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FitModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TickModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TickVisibilityModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxWidthProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENRangeLabelTickMode TickMode 'get set' : 
    Nevron.Nov.Chart.ENRangeLabelTickVisibilityMode TickVisibilityMode 'get set' : 
    Double TextPadding 'get set' : 
    Double TickPadding 'get set' : 
    Double ScaleTickLeftPadding 'get set' : 
    Double ScaleTickRightPadding 'get set' : 
    Double TickOffset 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Chart.NRulerCapStyle BeginCap 'get set' : 
    Nevron.Nov.Chart.NRulerCapStyle EndCap 'get set' : 
    Nevron.Nov.Chart.ENRangeLabelFitMode FitMode 'get set' : 
    Double MaxWidth 'get set' : 
  Methods:
    get_TickMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TickMode(ENRangeLabelTickMode): PrivateScope, Public, HideBySig, SpecialName
    get_TickVisibilityMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TickVisibilityMode(ENRangeLabelTickVisibilityMode): PrivateScope, Public, HideBySig, SpecialName
    get_TextPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_TextPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TickPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_TickPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleTickLeftPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleTickLeftPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleTickRightPadding(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleTickRightPadding(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TickOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_TickOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_BeginCap(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginCap(NRulerCapStyle): PrivateScope, Public, HideBySig, SpecialName
    get_EndCap(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCap(NRulerCapStyle): PrivateScope, Public, HideBySig, SpecialName
    get_FitMode(): PrivateScope, Public, HideBySig, SpecialName
    set_FitMode(ENRangeLabelFitMode): PrivateScope, Public, HideBySig, SpecialName
    get_MaxWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxWidth(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Nevron.Nov.Chart.NScaleLabelAngle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENScaleLabelAngleMode, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENScaleLabelAngleMode, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double CustomAngle 'get set' : 
    Boolean AllowTextFlip 'get set' : 
    Nevron.Nov.Chart.ENScaleLabelAngleMode LabelAngleMode 'get set' : 
  Methods:
    get_CustomAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AllowTextFlip(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowTextFlip(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LabelAngleMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelAngleMode(ENScaleLabelAngleMode): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleLabelStyle: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.UI.NTextStyle, Nevron.Nov.ENContentAlignment, Nevron.Nov.Chart.NScaleLabelAngle, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleLabelStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ZOrderProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AlwaysInsideScaleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty NonOverlappingAreaProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContentAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibilityModeProperty : Public, Static, InitOnly
  Properties:
    Boolean AlwaysInsideScale 'get set' : 
    Nevron.Nov.ENContentAlignment ContentAlignment 'get set' : 
    Nevron.Nov.Chart.NScaleLabelAngle Angle 'get set' : 
    Nevron.Nov.UI.NTextStyle TextStyle 'get set' : 
    Double Offset 'get set' : 
    Double NonOverlappingArea 'get set' : 
    Nevron.Nov.Chart.ENScaleLabelVisibilityMode VisibilityMode 'get set' : 
    Int32 ZOrder 'get set' : 
  Methods:
    get_AlwaysInsideScale(): PrivateScope, Public, HideBySig, SpecialName
    set_AlwaysInsideScale(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ContentAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentAlignment(ENContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    set_Angle(NScaleLabelAngle): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NonOverlappingArea(): PrivateScope, Public, HideBySig, SpecialName
    set_NonOverlappingArea(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VisibilityMode(): PrivateScope, Public, HideBySig, SpecialName
    set_VisibilityMode(ENScaleLabelVisibilityMode): PrivateScope, Public, HideBySig, SpecialName
    get_ZOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_ZOrder(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NDateTimeUnitSensitiveLabelTextProvider: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleLabelTextProvider
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeUnitSensitiveLabelTextProviderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty CenturyFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecadeFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty YearFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HalfYearFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty QuarterFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MonthFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty WeekFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DayFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HalfDayFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HourFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinuteFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SecondFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MillisecondFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TickFormatterProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NDateTimeValueFormatter CenturyFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter DecadeFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter YearFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter HalfYearFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter QuarterFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter MonthFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter WeekFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter DayFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter HalfDayFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter HourFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter MinuteFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter SecondFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter MillisecondFormatter 'get set' : 
    Nevron.Nov.Dom.NDateTimeValueFormatter TickFormatter 'get set' : 
  Methods:
    get_CenturyFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_CenturyFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_DecadeFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_DecadeFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_YearFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_YearFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_HalfYearFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_HalfYearFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_QuarterFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_QuarterFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_MonthFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_MonthFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_WeekFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_WeekFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_DayFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_DayFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_HalfDayFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_HalfDayFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_HourFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_HourFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_MinuteFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_MinuteFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_SecondFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_MillisecondFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_MillisecondFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_TickFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_TickFormatter(NDateTimeValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    ProvideText(NRangeInfo, Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NOrdinalScaleLabelTextProvider: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleLabelTextProvider
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.DataStructures.NList`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NOrdinalScaleLabelTextProviderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextsProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NDomArray`1[System.String] Texts 'get set' : 
  Methods:
    get_Texts(): PrivateScope, Public, HideBySig, SpecialName
    set_Texts(NDomArray`1): PrivateScope, Public, HideBySig, SpecialName
    ProvideText(NRangeInfo, Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NFormattedScaleLabelTextProvider: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleLabelTextProvider
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Dom.NValueFormatter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NFormattedScaleLabelTextProviderSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueFormatterProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ValueScaleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NValueFormatter ValueFormatter 'get set' : 
    Double ValueOffset 'get set' : 
    Double ValueScale 'get set' : 
  Methods:
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(NValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_ValueOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ValueScale(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueScale(Double): PrivateScope, Public, HideBySig, SpecialName
    ProvideText(NRangeInfo, Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NScaleLabelTextProvider: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleLabelTextProviderSchema : Public, Static, InitOnly
  Methods:
    ProvideText(NRangeInfo, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Chart.NValueScaleLabelStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleLabelStyle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.UI.NTextStyle, Nevron.Nov.ENContentAlignment, Nevron.Nov.Chart.NScaleLabelAngle, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueScaleLabelStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeAlignmentProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.ENHorizontalAlignment RangeAlignment 'get set' : 
  Methods:
    get_RangeAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeAlignment(ENHorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRuler: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENScaleRulerShape, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRulerSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PaintOnScaleBreaksProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HeightProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftMarginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightMarginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginCapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndCapProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleBreakCapProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENScaleRulerShape Shape 'get set' : 
    Boolean PaintOnScaleBreaks 'get set' : 
    Double Height 'get set' : 
    Double Offset 'get set' : 
    Double LeftMargin 'get set' : 
    Double RightMargin 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Chart.NRulerCapStyle BeginCap 'get set' : 
    Nevron.Nov.Chart.NRulerCapStyle EndCap 'get set' : 
    Nevron.Nov.Chart.NRulerCapStyle ScaleBreakCap 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENScaleRulerShape): PrivateScope, Public, HideBySig, SpecialName
    get_PaintOnScaleBreaks(): PrivateScope, Public, HideBySig, SpecialName
    set_PaintOnScaleBreaks(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LeftMargin(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftMargin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RightMargin(): PrivateScope, Public, HideBySig, SpecialName
    set_RightMargin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_BeginCap(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginCap(NRulerCapStyle): PrivateScope, Public, HideBySig, SpecialName
    get_EndCap(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCap(NRulerCapStyle): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleBreakCap(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleBreakCap(NRulerCapStyle): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRulerCapStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCapShape, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENCapShape, Nevron.Nov.Graphics.NSize, Double, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRulerCapStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENCapShape Shape 'get set' : 
    Double Offset 'get set' : 
    Nevron.Nov.Graphics.NSize Size 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
  Methods:
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENCapShape): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(NSize): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScalePartStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScalePartStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PartIdProperty : Public, Static, InitOnly
  Properties:
    Int32 PartId 'get set' : 
  Methods:
    get_PartId(): PrivateScope, Public, HideBySig, SpecialName
    set_PartId(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAbsoluteScaleBreakInflate: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreakInflate
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAbsoluteScaleBreakInflateSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftInflateProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightInflateProperty : Public, Static, InitOnly
  Properties:
    Double LeftInflate 'get set' : 
    Double RightInflate 'get set' : 
  Methods:
    get_LeftInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftInflate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RightInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_RightInflate(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRelativeScaleBreakInflate: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreakInflate
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRelativeScaleBreakInflateSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftInflatePercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightInflatePercentProperty : Public, Static, InitOnly
  Properties:
    Single LeftInflatePercent 'get set' : 
    Single RightInflatePercent 'get set' : 
  Methods:
    get_LeftInflatePercent(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftInflatePercent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RightInflatePercent(): PrivateScope, Public, HideBySig, SpecialName
    set_RightInflatePercent(Single): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleBreakInflate: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleElement
  Fields:
    Nevron.Nov.Dom.NSchema NScaleBreakInflateSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NAutoScaleBreak: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreak
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAutoScaleBreakSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ThresholdFactorProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UseMinValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MaxScaleBreakCountProperty : Public, Static, InitOnly
  Properties:
    Single ThresholdFactor 'get set' : 
    Int32 MaxScaleBreakCount 'get set' : 
    Boolean UseMinValue 'get set' : 
    Double MinValue 'get set' : 
  Methods:
    get_ThresholdFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ThresholdFactor(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxScaleBreakCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxScaleBreakCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseMinValue(): PrivateScope, Public, HideBySig, SpecialName
    set_UseMinValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MinValue(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NCustomScaleBreak: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreak
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NCustomScaleBreakSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NRange Range 'get set' : 
  Methods:
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(NRange): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleBreak: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleBreakSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LengthProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorzStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VertStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PatternProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PositionModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InflateModeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftInflateProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightInflateProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LeftInflatePercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RightInflatePercentProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENScaleBreakStyle Style 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Double HorzStep 'get set' : 
    Double VertStep 'get set' : 
    Nevron.Nov.Chart.ENScaleBreakPattern Pattern 'get set' : 
    Nevron.Nov.Chart.ENScaleBreakPositionMode PositionMode 'get set' : 
    Nevron.Nov.Graphics.NRange PercentRange 'get set' : 
    Single Percent 'get set' : 
    Nevron.Nov.Chart.ENScaleBreakInflateMode InflateMode 'get set' : 
    Double LeftInflate 'get set' : 
    Double RightInflate 'get set' : 
    Single LeftInflatePercent 'get set' : 
    Single RightInflatePercent 'get set' : 
    Double Length 'get set' : 
  Methods:
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(ENScaleBreakStyle): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_HorzStep(): PrivateScope, Public, HideBySig, SpecialName
    set_HorzStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VertStep(): PrivateScope, Public, HideBySig, SpecialName
    set_VertStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(ENScaleBreakPattern): PrivateScope, Public, HideBySig, SpecialName
    get_PositionMode(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionMode(ENScaleBreakPositionMode): PrivateScope, Public, HideBySig, SpecialName
    get_PercentRange(): PrivateScope, Public, HideBySig, SpecialName
    set_PercentRange(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    set_Percent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_InflateMode(): PrivateScope, Public, HideBySig, SpecialName
    set_InflateMode(ENScaleBreakInflateMode): PrivateScope, Public, HideBySig, SpecialName
    get_LeftInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftInflate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RightInflate(): PrivateScope, Public, HideBySig, SpecialName
    set_RightInflate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LeftInflatePercent(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftInflatePercent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RightInflatePercent(): PrivateScope, Public, HideBySig, SpecialName
    set_RightInflatePercent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Double): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleBreakCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElementCollection`1[Nevron.Nov.Chart.NScaleBreak]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleBreakCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NContentScaleBreakPosition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreakPosition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NContentScaleBreakPositionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentRangeProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NRange PercentRange 'get set' : 
  Methods:
    get_PercentRange(): PrivateScope, Public, HideBySig, SpecialName
    set_PercentRange(NRange): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NPercentScaleBreakPosition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreakPosition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPercentScaleBreakPositionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PercentProperty : Public, Static, InitOnly
  Properties:
    Single Percent 'get set' : 
  Methods:
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    set_Percent(Single): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NRangeScaleBreakPosition: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreakPosition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NRangeScaleBreakPositionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NScaleBreakPosition: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleElement
  Fields:
    Nevron.Nov.Dom.NSchema NScaleBreakPositionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NLineScaleBreakStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleBreakStyle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NLineScaleBreakStyleSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NPatternScaleBreakStyle: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NScaleBreakStyle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENScaleBreakPattern, Double, Double, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NPatternScaleBreakStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorzStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VertStepProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty PatternProperty : Public, Static, InitOnly
  Properties:
    Double HorzStep 'get set' : 
    Double VertStep 'get set' : 
    Nevron.Nov.Chart.ENScaleBreakPattern Pattern 'get set' : 
  Methods:
    get_HorzStep(): PrivateScope, Public, HideBySig, SpecialName
    set_HorzStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VertStep(): PrivateScope, Public, HideBySig, SpecialName
    set_VertStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(ENScaleBreakPattern): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleBreakStyle: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleBreakStyleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LengthProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Double Length 'get set' : 
  Methods:
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Double): PrivateScope, Public, HideBySig, SpecialName
    InitFrom(NScaleBreakStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Chart.NWaveScaleBreakStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Chart.NPatternScaleBreakStyle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Chart.NZigZagScaleBreakStyle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NPatternScaleBreakStyle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Nevron.Nov.Graphics.NStroke, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NZigZagScaleBreakStyleSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NScaleSection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleSectionSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RangeFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShowRangeAtBackgroundProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MajorTickFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MajorTickStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinorTickStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinorTickFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MajorGridStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty MinorGridStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LabelTextStyleProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NRange Range 'get set' : 
    Nevron.Nov.Graphics.NFill RangeFill 'get set' : 
    Nevron.Nov.Graphics.NFill MajorTickFill 'get set' : 
    Nevron.Nov.Graphics.NStroke MajorTickStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke MinorTickStroke 'get set' : 
    Nevron.Nov.Graphics.NFill MinorTickFill 'get set' : 
    Nevron.Nov.Graphics.NStroke MajorGridStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke MinorGridStroke 'get set' : 
    Nevron.Nov.UI.NTextStyle LabelTextStyle 'get set' : 
  Methods:
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(NRange): PrivateScope, Public, HideBySig, SpecialName
    get_RangeFill(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_MajorTickFill(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorTickFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_MajorTickStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorTickStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_MinorTickStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorTickStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_MinorTickFill(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorTickFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_MajorGridStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorGridStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_MinorGridStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorGridStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_LabelTextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelTextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleSectionCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElementCollection`1[Nevron.Nov.Chart.NScaleSection]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleSectionCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NScaleStrip: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Boolean, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleStripSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty DecorationRangeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ExtendInChartAreaProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InfiniteProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty InterlacedProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty IntervalProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty LengthProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NDecorationRange DecorationRange 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Boolean ExtendInChartArea 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Int64 Begin 'get set' : 
    Boolean Infinite 'get set' : 
    Int64 End  'get set' : 
    Int32 Length 'get set' : 
    Int32 Interval 'get set' : 
    Boolean Interlaced 'get set' : 
  Methods:
    get_DecorationRange(): PrivateScope, Public, HideBySig, SpecialName
    set_DecorationRange(NDecorationRange): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendInChartArea(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendInChartArea(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Begin(): PrivateScope, Public, HideBySig, SpecialName
    set_Begin(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_Infinite(): PrivateScope, Public, HideBySig, SpecialName
    set_Infinite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Interval(): PrivateScope, Public, HideBySig, SpecialName
    set_Interval(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Interlaced(): PrivateScope, Public, HideBySig, SpecialName
    set_Interlaced(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleStripCollection: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElementCollection`1[Nevron.Nov.Chart.NScaleStrip]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleStripCollectionSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NScaleTicks: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Graphics.NStroke, Nevron.Nov.Graphics.NSize, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.ENScaleValueMarkerShape, Nevron.Nov.Graphics.NFill, Nevron.Nov.Graphics.NStroke, Nevron.Nov.Graphics.NSize, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleTicksSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ShapeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty SizeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty FillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StrokeProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.ENScaleValueMarkerShape Shape 'get set' : 
    Nevron.Nov.Graphics.NStroke Stroke 'get set' : 
    Nevron.Nov.Graphics.NFill Fill 'get set' : 
    Double Offset 'get set' : 
    Double Length 'get set' : 
    Double Width 'get set' : 
    Nevron.Nov.Graphics.NSize Size 'get set' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Shape(): PrivateScope, Public, HideBySig, SpecialName
    set_Shape(ENScaleValueMarkerShape): PrivateScope, Public, HideBySig, SpecialName
    get_Stroke(): PrivateScope, Public, HideBySig, SpecialName
    set_Stroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, HideBySig, SpecialName
    set_Fill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(NSize): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NScaleTitle: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NScaleElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NScaleTitleSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AngleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextStyleProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty TextProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RulerAlignmentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty RulerOffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OffsetProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ContentAlignmentProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.NScaleLabelAngle Angle 'get set' : 
    System.String Text 'get set' : 
    Nevron.Nov.ENContentAlignment ContentAlignment 'get set' : 
    Nevron.Nov.ENHorizontalAlignment RulerAlignment 'get set' : 
    Double RulerOffset 'get set' : 
    Double Offset 'get set' : 
    Nevron.Nov.UI.NTextStyle TextStyle 'get set' : 
  Methods:
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    set_Angle(NScaleLabelAngle): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_ContentAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentAlignment(ENContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_RulerAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_RulerAlignment(ENHorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_RulerOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_RulerOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyle(NTextStyle): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAxisMajorTickSnapper: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisMajorTickSnapperSchema : Public, Static, InitOnly
  Methods:
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NAxisMinorTickSnapper: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisMinorTickSnapperSchema : Public, Static, InitOnly
  Methods:
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NAxisRulerClampSnapper: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisRulerClampSnapperSchema : Public, Static, InitOnly
  Methods:
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NAxisRulerMinMaxSnapper: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisRulerMinMaxSnapperSchema : Public, Static, InitOnly
  Methods:
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig
    SnapRange(NRange): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NAxisValueSnapper: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisValueSnapperSchema : Public, Static, InitOnly
Class Nevron.Nov.Chart.NDateTimeValueSnapper: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime, Nevron.Nov.NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDateTimeValueSnapperSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StepProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.NDateTimeSpan Step 'get set' : 
    System.DateTime Origin 'get set' : 
  Methods:
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(NDateTimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(DateTime): PrivateScope, Public, HideBySig, SpecialName
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NNumericValueSnapper: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.NAxisValueSnapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NNumericValueSnapperSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty OriginProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty StepProperty : Public, Static, InitOnly
  Properties:
    Double Step 'get set' : 
    Double Origin 'get set' : 
  Methods:
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Double): PrivateScope, Public, HideBySig, SpecialName
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NValueSnapper: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NValueSnapperSchema : Public, Static, InitOnly
  Methods:
    SnapValue(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SnapRange(NRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Chart.NWallDecorationFactory: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Nevron.Nov.Chart.NRangeInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Object m_Unit : Public
    Nevron.Nov.Graphics.NRange m_Range : Public
Class Nevron.Nov.Chart.NRangeSampler: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Nevron.Nov.Chart.NRangeSampler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.INDeeplyCloneable
  Methods:
    DeepClone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Nevron.Nov.Chart.NTimeline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsEmptyAt(DateTime): PrivateScope, Public, HideBySig
    AddTimeSpan(DateTime, NDateTimeSpan): PrivateScope, Public, HideBySig
    Transform(Int64): PrivateScope, Public, HideBySig
    InverseTransform(Int64): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.NAxisAnchor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NAxisAnchorSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty BeginPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty EndPercentProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScaleOrientationProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Chart.ENScaleOrientation ScaleOrientation 'get set' : 
    Single BeginPercent 'get set' : 
    Single EndPercent 'get set' : 
  Methods:
    get_ScaleOrientation(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleOrientation(ENScaleOrientation): PrivateScope, Public, HideBySig, SpecialName
    get_BeginPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginPercent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EndPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_EndPercent(Single): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.NAxisBase: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.NChartElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Dom.INMeasureElement
  Fields:
    Nevron.Nov.Dom.NSchema NAxisBaseSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NChild ScaleChild : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VisibleProperty : Public, Static, InitOnly
  Properties:
    Boolean Visible 'get set' : 
    Nevron.Nov.Chart.NScale Scale 'get set' : 
    Boolean IsMeasureValid 'get ' : 
    Boolean IsPooledForMeasure 'get ' : 
  Methods:
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(NScale): PrivateScope, Public, HideBySig, SpecialName
    InvalidateMeasure(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsMeasureValid(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPooledForMeasure(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ValidateMeasure(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Nevron.Nov.Chart.Formats.NChartFormatRegistry: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Nevron.Nov.Dom.NDocumentFormatRegistry`1[Nevron.Nov.Chart.Formats.NChartFormat]
  Fields:
    Nevron.Nov.Chart.Formats.NChartFormatRegistry Instance : Public, Static, InitOnly
Class Nevron.Nov.Chart.Formats.NChartFormat: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Dom.NDocumentFormat`3[Nevron.Nov.Chart.NChartDocument,Nevron.Nov.Chart.Formats.NChartLoadSettings,Nevron.Nov.Chart.Formats.NChartSaveSettings]
Class Nevron.Nov.Chart.Formats.NChartLoadSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NDocumentLoadSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Chart.Formats.NChartSaveSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Dom.NDocumentSaveSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Nevron.Nov.Chart.Formats.NNevronBinaryChartFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Chart.Formats.NChartFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String[] Extensions 'get ' : 
    System.String Mime 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Mime(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Nevron.Nov.Chart.Formats.NNevronXmlChartFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Chart.Formats.NChartFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String[] Extensions 'get ' : 
    System.String Mime 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Mime(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Nevron.Nov.Chart.Export.NChartExporter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Nevron.Nov.Chart.NChartDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Nevron.Nov.Chart.NChartDocument Document 'get ' : 
  Methods:
    get_Document(): PrivateScope, Public, HideBySig, SpecialName
Class Nevron.Nov.Chart.Export.NChartImageExporter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Chart.Export.NChartExporter
    Void .ctor(Nevron.Nov.Chart.NChartDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SaveToFile(String, NImageFormat, NSize, Double): PrivateScope, Public, HideBySig
    SaveToStream(Stream, NImageFormat, NSize, Double): PrivateScope, Public, HideBySig
    SaveAsImage(NSize, Double): PrivateScope, Public, HideBySig
    CreateRaster(NSize, Double): PrivateScope, Public, HideBySig
    CopyToClipboard(NSize, Double): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.Export.NChartPdfExporter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Chart.Export.NChartExporter
    Void .ctor(Nevron.Nov.Chart.NChartDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SaveToFile(String, NRectangle): PrivateScope, Public, HideBySig
    SaveAsPdf(NRectangle): PrivateScope, Public, HideBySig
    SaveToStream(Stream, NRectangle): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.Export.NChartPrintExporter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Nevron.Nov.Chart.Export.NChartExporter
    Void .ctor(Nevron.Nov.Chart.NChartDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Print(NRectangle): PrivateScope, Public, HideBySig
Class Nevron.Nov.Chart.Tools.NDataPanTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.Tools.NChartAxisDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NDataPanToolSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScrollHorizontalAxisProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ScrollVerticalAxisProperty : Public, Static, InitOnly
  Properties:
    Boolean ScrollHorizontalAxis 'get set' : 
    Boolean ScrollVerticalAxis 'get set' : 
  Methods:
    get_ScrollHorizontalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollHorizontalAxis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollVerticalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollVerticalAxis(Boolean): PrivateScope, Public, HideBySig, SpecialName
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.Tools.NChartAxisDragTool: AutoLayout, AnsiClass, Class, Public, Abstract
  :Nevron.Nov.Chart.Tools.NChartDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartAxisDragToolSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalAxisRefProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Dom.NNodeRef HorizontalAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis HorizontalAxis 'get set' : 
    Nevron.Nov.Dom.NNodeRef VerticalAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis VerticalAxis 'get set' : 
  Methods:
    get_HorizontalAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
    CanActivate(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.Tools.NAxisCursorTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.Ксл
  Fields:
    Nevron.Nov.Dom.NSchema NAxisCursorToolSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpdateOnMouseMoveProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpdateMouseButtonEventsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty UpdateMouseButtonsProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalLineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalLineStrokeProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalAxisRefProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalValueSnapperProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalValueSnapperProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalValueProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty AutoHideCursorsProperty : Public, Static, InitOnly
  Properties:
    Boolean UpdateOnMouseMove 'get set' : 
    Nevron.Nov.UI.ENMouseButtonEvent UpdateMouseButtonEvents 'get set' : 
    Nevron.Nov.Graphics.NStroke HorizontalLineStroke 'get set' : 
    Nevron.Nov.Graphics.NStroke VerticalLineStroke 'get set' : 
    Nevron.Nov.Dom.NNodeRef HorizontalAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis HorizontalAxis 'get set' : 
    Nevron.Nov.Dom.NNodeRef VerticalAxisRef 'get set' : 
    Nevron.Nov.Chart.NCartesianAxis VerticalAxis 'get set' : 
    Nevron.Nov.Chart.NValueSnapper HorizontalValueSnapper 'get set' : 
    Nevron.Nov.Chart.NValueSnapper VerticalValueSnapper 'get set' : 
    Double HorizontalValue 'get set' : 
    Double VerticalValue 'get set' : 
    Boolean AutoHideCursors 'get set' : 
  Events:
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NValueChangeEventArgs] HorizontalValueChanged: 
    Nevron.Nov.Function`1[Nevron.Nov.Dom.NValueChangeEventArgs] VerticalValueChanged: 
  Methods:
    get_UpdateOnMouseMove(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateOnMouseMove(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateMouseButtonEvents(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateMouseButtonEvents(ENMouseButtonEvent): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalLineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalLineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalLineStroke(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalLineStroke(NStroke): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAxisRef(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAxisRef(NNodeRef): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalAxis(NCartesianAxis): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalValueSnapper(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalValueSnapper(NValueSnapper): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalValueSnapper(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalValueSnapper(NValueSnapper): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalValue(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalValue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AutoHideCursors(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoHideCursors(Boolean): PrivateScope, Public, HideBySig, SpecialName
    add_HorizontalValueChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_HorizontalValueChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    add_VerticalValueChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    remove_VerticalValueChanged(Function`1): PrivateScope, Public, HideBySig, SpecialName
    GetAxis(NValueSnapper): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseUp(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseDown(NMouseButtonEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseIn(NMouseOverChangeEventArgs): PrivateScope, Public, Virtual, HideBySig
    OnMouseOut(NMouseOverChangeEventArgs): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.Tools.NChartDragTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.UI.NDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Nevron.Nov.Dom.NSchema NChartDragToolSchema : Public, Static, InitOnly
  Methods:
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
    CanActivate(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.Tools.NRectangleZoomTool: AutoLayout, AnsiClass, Class, Public
  :Nevron.Nov.Chart.Tools.NChartAxisDragTool
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Nevron.Nov.Internal.Ксл
  Fields:
    Nevron.Nov.Dom.NSchema NRectangleZoomToolSchema : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ZoomInFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty ZoomOutFillProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty HorizontalValueSnapperProperty : Public, Static, InitOnly
    Nevron.Nov.Dom.NProperty VerticalValueSnapperProperty : Public, Static, InitOnly
  Properties:
    Nevron.Nov.Graphics.NFill ZoomInFill 'get set' : 
    Nevron.Nov.Graphics.NFill ZoomOutFill 'get set' : 
    Nevron.Nov.Chart.NValueSnapper HorizontalValueSnapper 'get set' : 
    Nevron.Nov.Chart.NValueSnapper VerticalValueSnapper 'get set' : 
  Methods:
    get_ZoomInFill(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomInFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_ZoomOutFill(): PrivateScope, Public, HideBySig, SpecialName
    set_ZoomOutFill(NFill): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalValueSnapper(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalValueSnapper(NValueSnapper): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalValueSnapper(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalValueSnapper(NValueSnapper): PrivateScope, Public, HideBySig, SpecialName
    GetAxis(NValueSnapper): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnMouseMove(NMouseEventArgs): PrivateScope, Public, Virtual, HideBySig
    UpdateAids(): PrivateScope, Public, Virtual, HideBySig
Class Nevron.Nov.Chart.NChartElement+NChartElementDesigner: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Nevron.Nov.Editors.NDesigner
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
